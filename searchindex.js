Search.setIndex({"alltitles": {"Attributes": [[0, "attributes"], [3, "attributes"], [5, "attributes"], [14, "attributes"], [28, "attributes"], [45, "attributes"], [102, "attributes"]], "Bibliography": [[107, null]], "Classes": [[11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [80, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [86, "classes"], [87, "classes"], [89, "classes"], [90, "classes"], [92, "classes"], [93, "classes"], [96, "classes"], [97, "classes"], [99, "classes"], [100, "classes"], [103, "classes"], [105, "classes"], [106, "classes"]], "Exceptions": [[28, "exceptions"]], "Functions": [[0, "functions"], [1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [13, "functions"], [14, "functions"], [24, "functions"], [28, "functions"], [29, "functions"], [45, "functions"], [47, "functions"], [50, "functions"], [53, "functions"], [58, "functions"], [67, "functions"], [68, "functions"], [70, "functions"], [72, "functions"], [76, "functions"], [85, "functions"], [86, "functions"], [95, "functions"], [101, "functions"]], "Installation": [[108, "installation"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [80, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [89, "module-contents"], [90, "module-contents"], [92, "module-contents"], [93, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [105, "module-contents"], [106, "module-contents"]], "Package Contents": [[5, "package-contents"]], "Plug-ins": [[108, "plug-ins"]], "Submodules": [[5, "submodules"], [19, "submodules"], [35, "submodules"], [52, "submodules"], [63, "submodules"], [71, "submodules"], [75, "submodules"], [79, "submodules"], [81, "submodules"], [88, "submodules"], [91, "submodules"], [94, "submodules"], [98, "submodules"], [104, "submodules"]], "Welcome to torchtree!": [[108, null]], "torchtree": [[71, null]], "torchtree.cli": [[5, null]], "torchtree.cli.advi": [[0, null]], "torchtree.cli.argparse_utils": [[1, null]], "torchtree.cli.cli": [[2, null]], "torchtree.cli.evolution": [[3, null]], "torchtree.cli.hmc": [[4, null]], "torchtree.cli.jacobians": [[6, null]], "torchtree.cli.loggers": [[7, null]], "torchtree.cli.map": [[8, null]], "torchtree.cli.mcmc": [[9, null]], "torchtree.cli.operators": [[10, null]], "torchtree.cli.plugin": [[11, null]], "torchtree.cli.plugin_manager": [[12, null]], "torchtree.cli.priors": [[13, null]], "torchtree.cli.utils": [[14, null]], "torchtree.core": [[19, null]], "torchtree.core.abstractparameter": [[15, null]], "torchtree.core.classproperty_decorator": [[16, null]], "torchtree.core.container": [[17, null]], "torchtree.core.identifiable": [[18, null]], "torchtree.core.logger": [[20, null]], "torchtree.core.model": [[21, null]], "torchtree.core.parameter": [[22, null]], "torchtree.core.parameter_encoder": [[23, null]], "torchtree.core.parameter_utils": [[24, null]], "torchtree.core.parametric": [[25, null]], "torchtree.core.runnable": [[26, null]], "torchtree.core.serializable": [[27, null]], "torchtree.core.utils": [[28, null]], "torchtree.distributions": [[35, null]], "torchtree.distributions.bayesian_bridge": [[29, null]], "torchtree.distributions.ctmc_scale": [[30, null]], "torchtree.distributions.deterministic_normal": [[31, null]], "torchtree.distributions.distributions": [[32, null]], "torchtree.distributions.gmrf": [[33, null]], "torchtree.distributions.gmrf_integrated": [[34, null]], "torchtree.distributions.inverse_gamma": [[36, null]], "torchtree.distributions.joint_distribution": [[37, null]], "torchtree.distributions.log_normal": [[38, null]], "torchtree.distributions.multivariate_normal": [[39, null]], "torchtree.distributions.normal": [[40, null]], "torchtree.distributions.one_on_x": [[41, null]], "torchtree.distributions.scale_mixture": [[42, null]], "torchtree.distributions.transforms": [[43, null]], "torchtree.distributions.tree_prior": [[44, null]], "torchtree.evolution": [[52, null]], "torchtree.evolution.alignment": [[45, null]], "torchtree.evolution.attribute_pattern": [[46, null]], "torchtree.evolution.bdsk": [[47, null]], "torchtree.evolution.birth_death": [[48, null]], "torchtree.evolution.branch_model": [[49, null]], "torchtree.evolution.coalescent": [[50, null]], "torchtree.evolution.datatype": [[51, null]], "torchtree.evolution.io": [[53, null]], "torchtree.evolution.poisson_tree_likelihood": [[54, null]], "torchtree.evolution.rate_transform": [[55, null]], "torchtree.evolution.root_transform": [[56, null]], "torchtree.evolution.site_model": [[57, null]], "torchtree.evolution.site_pattern": [[58, null]], "torchtree.evolution.substitution_model": [[63, null]], "torchtree.evolution.substitution_model.abstract": [[59, null]], "torchtree.evolution.substitution_model.amino_acid": [[60, null]], "torchtree.evolution.substitution_model.codon": [[61, null]], "torchtree.evolution.substitution_model.general": [[62, null]], "torchtree.evolution.substitution_model.nucleotide": [[64, null]], "torchtree.evolution.taxa": [[65, null]], "torchtree.evolution.tree_height_transform": [[66, null]], "torchtree.evolution.tree_likelihood": [[67, null]], "torchtree.evolution.tree_model": [[68, null]], "torchtree.evolution.tree_model_flexible": [[69, null]], "torchtree.evolution.tree_regression": [[70, null]], "torchtree.inference": [[79, null]], "torchtree.inference.hmc": [[75, null]], "torchtree.inference.hmc.adaptation": [[72, null]], "torchtree.inference.hmc.hamiltonian": [[73, null]], "torchtree.inference.hmc.hmc": [[74, null]], "torchtree.inference.hmc.integrator": [[76, null]], "torchtree.inference.hmc.operator": [[77, null]], "torchtree.inference.hmc.stan_adaptation": [[78, null]], "torchtree.inference.mcmc": [[81, null]], "torchtree.inference.mcmc.gmrf_block_updating": [[80, null]], "torchtree.inference.mcmc.mcmc": [[82, null]], "torchtree.inference.mcmc.operator": [[83, null]], "torchtree.inference.sampler": [[84, null]], "torchtree.inference.utils": [[85, null]], "torchtree.nf": [[88, null]], "torchtree.nf.energy_functions": [[86, null]], "torchtree.nf.flow": [[87, null]], "torchtree.nf.planar": [[89, null]], "torchtree.nf.realnvp": [[90, null]], "torchtree.nn": [[91, null]], "torchtree.nn.module": [[92, null]], "torchtree.ops": [[94, null]], "torchtree.ops.dual_averaging": [[93, null]], "torchtree.ops.smooth": [[95, null]], "torchtree.ops.welford": [[96, null]], "torchtree.optim": [[98, null]], "torchtree.optim.convergence": [[97, null]], "torchtree.optim.lr_scheduler": [[99, null]], "torchtree.optim.optimizer": [[100, null]], "torchtree.torchtree": [[101, null]], "torchtree.typing": [[102, null]], "torchtree.variational": [[104, null]], "torchtree.variational.chi": [[103, null]], "torchtree.variational.kl": [[105, null]], "torchtree.variational.renyi": [[106, null]]}, "docnames": ["autoapi/torchtree/cli/advi/index", "autoapi/torchtree/cli/argparse_utils/index", "autoapi/torchtree/cli/cli/index", "autoapi/torchtree/cli/evolution/index", "autoapi/torchtree/cli/hmc/index", "autoapi/torchtree/cli/index", "autoapi/torchtree/cli/jacobians/index", "autoapi/torchtree/cli/loggers/index", "autoapi/torchtree/cli/map/index", "autoapi/torchtree/cli/mcmc/index", "autoapi/torchtree/cli/operators/index", "autoapi/torchtree/cli/plugin/index", "autoapi/torchtree/cli/plugin_manager/index", "autoapi/torchtree/cli/priors/index", "autoapi/torchtree/cli/utils/index", "autoapi/torchtree/core/abstractparameter/index", "autoapi/torchtree/core/classproperty_decorator/index", "autoapi/torchtree/core/container/index", "autoapi/torchtree/core/identifiable/index", "autoapi/torchtree/core/index", "autoapi/torchtree/core/logger/index", "autoapi/torchtree/core/model/index", "autoapi/torchtree/core/parameter/index", "autoapi/torchtree/core/parameter_encoder/index", "autoapi/torchtree/core/parameter_utils/index", "autoapi/torchtree/core/parametric/index", "autoapi/torchtree/core/runnable/index", "autoapi/torchtree/core/serializable/index", "autoapi/torchtree/core/utils/index", "autoapi/torchtree/distributions/bayesian_bridge/index", "autoapi/torchtree/distributions/ctmc_scale/index", "autoapi/torchtree/distributions/deterministic_normal/index", "autoapi/torchtree/distributions/distributions/index", "autoapi/torchtree/distributions/gmrf/index", "autoapi/torchtree/distributions/gmrf_integrated/index", "autoapi/torchtree/distributions/index", "autoapi/torchtree/distributions/inverse_gamma/index", "autoapi/torchtree/distributions/joint_distribution/index", "autoapi/torchtree/distributions/log_normal/index", "autoapi/torchtree/distributions/multivariate_normal/index", "autoapi/torchtree/distributions/normal/index", "autoapi/torchtree/distributions/one_on_x/index", "autoapi/torchtree/distributions/scale_mixture/index", "autoapi/torchtree/distributions/transforms/index", "autoapi/torchtree/distributions/tree_prior/index", "autoapi/torchtree/evolution/alignment/index", "autoapi/torchtree/evolution/attribute_pattern/index", "autoapi/torchtree/evolution/bdsk/index", "autoapi/torchtree/evolution/birth_death/index", "autoapi/torchtree/evolution/branch_model/index", "autoapi/torchtree/evolution/coalescent/index", "autoapi/torchtree/evolution/datatype/index", "autoapi/torchtree/evolution/index", "autoapi/torchtree/evolution/io/index", "autoapi/torchtree/evolution/poisson_tree_likelihood/index", "autoapi/torchtree/evolution/rate_transform/index", "autoapi/torchtree/evolution/root_transform/index", "autoapi/torchtree/evolution/site_model/index", "autoapi/torchtree/evolution/site_pattern/index", "autoapi/torchtree/evolution/substitution_model/abstract/index", "autoapi/torchtree/evolution/substitution_model/amino_acid/index", "autoapi/torchtree/evolution/substitution_model/codon/index", "autoapi/torchtree/evolution/substitution_model/general/index", "autoapi/torchtree/evolution/substitution_model/index", "autoapi/torchtree/evolution/substitution_model/nucleotide/index", "autoapi/torchtree/evolution/taxa/index", "autoapi/torchtree/evolution/tree_height_transform/index", "autoapi/torchtree/evolution/tree_likelihood/index", "autoapi/torchtree/evolution/tree_model/index", "autoapi/torchtree/evolution/tree_model_flexible/index", "autoapi/torchtree/evolution/tree_regression/index", "autoapi/torchtree/index", "autoapi/torchtree/inference/hmc/adaptation/index", "autoapi/torchtree/inference/hmc/hamiltonian/index", "autoapi/torchtree/inference/hmc/hmc/index", "autoapi/torchtree/inference/hmc/index", "autoapi/torchtree/inference/hmc/integrator/index", "autoapi/torchtree/inference/hmc/operator/index", "autoapi/torchtree/inference/hmc/stan_adaptation/index", "autoapi/torchtree/inference/index", "autoapi/torchtree/inference/mcmc/gmrf_block_updating/index", "autoapi/torchtree/inference/mcmc/index", "autoapi/torchtree/inference/mcmc/mcmc/index", "autoapi/torchtree/inference/mcmc/operator/index", "autoapi/torchtree/inference/sampler/index", "autoapi/torchtree/inference/utils/index", "autoapi/torchtree/nf/energy_functions/index", "autoapi/torchtree/nf/flow/index", "autoapi/torchtree/nf/index", "autoapi/torchtree/nf/planar/index", "autoapi/torchtree/nf/realnvp/index", "autoapi/torchtree/nn/index", "autoapi/torchtree/nn/module/index", "autoapi/torchtree/ops/dual_averaging/index", "autoapi/torchtree/ops/index", "autoapi/torchtree/ops/smooth/index", "autoapi/torchtree/ops/welford/index", "autoapi/torchtree/optim/convergence/index", "autoapi/torchtree/optim/index", "autoapi/torchtree/optim/lr_scheduler/index", "autoapi/torchtree/optim/optimizer/index", "autoapi/torchtree/torchtree/index", "autoapi/torchtree/typing/index", "autoapi/torchtree/variational/chi/index", "autoapi/torchtree/variational/index", "autoapi/torchtree/variational/kl/index", "autoapi/torchtree/variational/renyi/index", "bibliography/bib", "index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["autoapi/torchtree/cli/advi/index.rst", "autoapi/torchtree/cli/argparse_utils/index.rst", "autoapi/torchtree/cli/cli/index.rst", "autoapi/torchtree/cli/evolution/index.rst", "autoapi/torchtree/cli/hmc/index.rst", "autoapi/torchtree/cli/index.rst", "autoapi/torchtree/cli/jacobians/index.rst", "autoapi/torchtree/cli/loggers/index.rst", "autoapi/torchtree/cli/map/index.rst", "autoapi/torchtree/cli/mcmc/index.rst", "autoapi/torchtree/cli/operators/index.rst", "autoapi/torchtree/cli/plugin/index.rst", "autoapi/torchtree/cli/plugin_manager/index.rst", "autoapi/torchtree/cli/priors/index.rst", "autoapi/torchtree/cli/utils/index.rst", "autoapi/torchtree/core/abstractparameter/index.rst", "autoapi/torchtree/core/classproperty_decorator/index.rst", "autoapi/torchtree/core/container/index.rst", "autoapi/torchtree/core/identifiable/index.rst", "autoapi/torchtree/core/index.rst", "autoapi/torchtree/core/logger/index.rst", "autoapi/torchtree/core/model/index.rst", "autoapi/torchtree/core/parameter/index.rst", "autoapi/torchtree/core/parameter_encoder/index.rst", "autoapi/torchtree/core/parameter_utils/index.rst", "autoapi/torchtree/core/parametric/index.rst", "autoapi/torchtree/core/runnable/index.rst", "autoapi/torchtree/core/serializable/index.rst", "autoapi/torchtree/core/utils/index.rst", "autoapi/torchtree/distributions/bayesian_bridge/index.rst", "autoapi/torchtree/distributions/ctmc_scale/index.rst", "autoapi/torchtree/distributions/deterministic_normal/index.rst", "autoapi/torchtree/distributions/distributions/index.rst", "autoapi/torchtree/distributions/gmrf/index.rst", "autoapi/torchtree/distributions/gmrf_integrated/index.rst", "autoapi/torchtree/distributions/index.rst", "autoapi/torchtree/distributions/inverse_gamma/index.rst", "autoapi/torchtree/distributions/joint_distribution/index.rst", "autoapi/torchtree/distributions/log_normal/index.rst", "autoapi/torchtree/distributions/multivariate_normal/index.rst", "autoapi/torchtree/distributions/normal/index.rst", "autoapi/torchtree/distributions/one_on_x/index.rst", "autoapi/torchtree/distributions/scale_mixture/index.rst", "autoapi/torchtree/distributions/transforms/index.rst", "autoapi/torchtree/distributions/tree_prior/index.rst", "autoapi/torchtree/evolution/alignment/index.rst", "autoapi/torchtree/evolution/attribute_pattern/index.rst", "autoapi/torchtree/evolution/bdsk/index.rst", "autoapi/torchtree/evolution/birth_death/index.rst", "autoapi/torchtree/evolution/branch_model/index.rst", "autoapi/torchtree/evolution/coalescent/index.rst", "autoapi/torchtree/evolution/datatype/index.rst", "autoapi/torchtree/evolution/index.rst", "autoapi/torchtree/evolution/io/index.rst", "autoapi/torchtree/evolution/poisson_tree_likelihood/index.rst", "autoapi/torchtree/evolution/rate_transform/index.rst", "autoapi/torchtree/evolution/root_transform/index.rst", "autoapi/torchtree/evolution/site_model/index.rst", "autoapi/torchtree/evolution/site_pattern/index.rst", "autoapi/torchtree/evolution/substitution_model/abstract/index.rst", "autoapi/torchtree/evolution/substitution_model/amino_acid/index.rst", "autoapi/torchtree/evolution/substitution_model/codon/index.rst", "autoapi/torchtree/evolution/substitution_model/general/index.rst", "autoapi/torchtree/evolution/substitution_model/index.rst", "autoapi/torchtree/evolution/substitution_model/nucleotide/index.rst", "autoapi/torchtree/evolution/taxa/index.rst", "autoapi/torchtree/evolution/tree_height_transform/index.rst", "autoapi/torchtree/evolution/tree_likelihood/index.rst", "autoapi/torchtree/evolution/tree_model/index.rst", "autoapi/torchtree/evolution/tree_model_flexible/index.rst", "autoapi/torchtree/evolution/tree_regression/index.rst", "autoapi/torchtree/index.rst", "autoapi/torchtree/inference/hmc/adaptation/index.rst", "autoapi/torchtree/inference/hmc/hamiltonian/index.rst", "autoapi/torchtree/inference/hmc/hmc/index.rst", "autoapi/torchtree/inference/hmc/index.rst", "autoapi/torchtree/inference/hmc/integrator/index.rst", "autoapi/torchtree/inference/hmc/operator/index.rst", "autoapi/torchtree/inference/hmc/stan_adaptation/index.rst", "autoapi/torchtree/inference/index.rst", "autoapi/torchtree/inference/mcmc/gmrf_block_updating/index.rst", "autoapi/torchtree/inference/mcmc/index.rst", "autoapi/torchtree/inference/mcmc/mcmc/index.rst", "autoapi/torchtree/inference/mcmc/operator/index.rst", "autoapi/torchtree/inference/sampler/index.rst", "autoapi/torchtree/inference/utils/index.rst", "autoapi/torchtree/nf/energy_functions/index.rst", "autoapi/torchtree/nf/flow/index.rst", "autoapi/torchtree/nf/index.rst", "autoapi/torchtree/nf/planar/index.rst", "autoapi/torchtree/nf/realnvp/index.rst", "autoapi/torchtree/nn/index.rst", "autoapi/torchtree/nn/module/index.rst", "autoapi/torchtree/ops/dual_averaging/index.rst", "autoapi/torchtree/ops/index.rst", "autoapi/torchtree/ops/smooth/index.rst", "autoapi/torchtree/ops/welford/index.rst", "autoapi/torchtree/optim/convergence/index.rst", "autoapi/torchtree/optim/index.rst", "autoapi/torchtree/optim/lr_scheduler/index.rst", "autoapi/torchtree/optim/optimizer/index.rst", "autoapi/torchtree/torchtree/index.rst", "autoapi/torchtree/typing/index.rst", "autoapi/torchtree/variational/chi/index.rst", "autoapi/torchtree/variational/index.rst", "autoapi/torchtree/variational/kl/index.rst", "autoapi/torchtree/variational/renyi/index.rst", "bibliography/bib.rst", "index.rst"], "indexentries": {"abstractclockmodel (class in torchtree.evolution.branch_model)": [[49, "torchtree.evolution.branch_model.AbstractClockModel", false]], "abstractcoalescentdistribution (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentDistribution", false]], "abstractcoalescentmodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentModel", false]], "abstractdatatype (class in torchtree.evolution.datatype)": [[51, "torchtree.evolution.datatype.AbstractDataType", false]], "abstractparameter (class in torchtree.core.abstractparameter)": [[15, "torchtree.core.abstractparameter.AbstractParameter", false]], "abstractsubstitutionmodel (class in torchtree.evolution.substitution_model.abstract)": [[59, "torchtree.evolution.substitution_model.abstract.AbstractSubstitutionModel", false]], "abstracttreemodel (class in torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel", false]], "accept() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.accept", false]], "adapt_base_window (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.adapt_base_window", false]], "adapt_init_buffer (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.adapt_init_buffer", false]], "adapt_term_buffer (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.adapt_term_buffer", false]], "adaptable_parameter (torchtree.inference.mcmc.operator.mcmcoperator property)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.hmc.operator.hmcoperator method)": [[77, "torchtree.inference.hmc.operator.HMCOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.mcmc.operator.dirichletoperator method)": [[83, "torchtree.inference.mcmc.operator.DirichletOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.mcmc.operator.scaleroperator method)": [[83, "torchtree.inference.mcmc.operator.ScalerOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.mcmc.operator.slidingwindowoperator method)": [[83, "torchtree.inference.mcmc.operator.SlidingWindowOperator.adaptable_parameter", false]], "adaptivestepsize (class in torchtree.inference.hmc.adaptation)": [[72, "torchtree.inference.hmc.adaptation.AdaptiveStepSize", false]], "adaptor (class in torchtree.inference.hmc.adaptation)": [[72, "torchtree.inference.hmc.adaptation.Adaptor", false]], "add_birth_death() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.add_birth_death", false]], "add_coalescent() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.add_coalescent", false]], "add_model_listener() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.add_model_listener", false]], "add_parameter_listener() (torchtree.core.abstractparameter.abstractparameter method)": [[15, "torchtree.core.abstractparameter.AbstractParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.catparameter method)": [[22, "torchtree.core.parameter.CatParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.moduleparameter method)": [[22, "torchtree.core.parameter.ModuleParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.transformedparameter method)": [[22, "torchtree.core.parameter.TransformedParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.viewparameter method)": [[22, "torchtree.core.parameter.ViewParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.evolution.root_transform.rootparameter method)": [[56, "torchtree.evolution.root_transform.RootParameter.add_parameter_listener", false]], "add_sample() (torchtree.ops.welford.welfordvariance method)": [[96, "torchtree.ops.welford.WelfordVariance.add_sample", false]], "alignment (class in torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.Alignment", false]], "alignment (torchtree.evolution.site_pattern.sitepattern attribute)": [[58, "torchtree.evolution.site_pattern.SitePattern.alignment", false]], "alpha (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge.alpha", false]], "alpha (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[44, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.alpha", false]], "alpha (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.alpha", false]], "alpha (torchtree.evolution.coalescent.constantcoalescentintegratedmodel attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.alpha", false]], "alpha (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[61, "torchtree.evolution.substitution_model.codon.MG94.alpha", false]], "alpha (torchtree.variational.renyi.vr attribute)": [[106, "torchtree.variational.renyi.VR.alpha", false]], "alternativeattributeerror": [[28, "torchtree.core.utils.AlternativeAttributeError", false]], "ambiguities (torchtree.evolution.datatype.generaldatatype attribute)": [[51, "torchtree.evolution.datatype.GeneralDataType.ambiguities", false]], "amino_acids (torchtree.evolution.datatype.aminoaciddatatype attribute)": [[51, "torchtree.evolution.datatype.AminoAcidDataType.AMINO_ACIDS", false]], "amino_acids_ambiguity_states (torchtree.evolution.datatype.aminoaciddatatype attribute)": [[51, "torchtree.evolution.datatype.AminoAcidDataType.AMINO_ACIDS_AMBIGUITY_STATES", false]], "amino_acids_states (torchtree.evolution.datatype.aminoaciddatatype attribute)": [[51, "torchtree.evolution.datatype.AminoAcidDataType.AMINO_ACIDS_STATES", false]], "aminoaciddatatype (class in torchtree.evolution.datatype)": [[51, "torchtree.evolution.datatype.AminoAcidDataType", false]], "apply_affine_transform() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.apply_affine_transform", false]], "apply_exp_transform() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.apply_exp_transform", false]], "apply_flow() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.apply_flow", false]], "apply_flow() (torchtree.nf.realnvp.realnvp method)": [[90, "torchtree.nf.realnvp.RealNVP.apply_flow", false]], "apply_sigmoid_transformed() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.apply_sigmoid_transformed", false]], "apply_simplex_transform() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.apply_simplex_transform", false]], "apply_transforms_for_fullrank() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.apply_transforms_for_fullrank", false]], "arg_constraints (torchtree.distributions.inverse_gamma.inversegamma attribute)": [[36, "torchtree.distributions.inverse_gamma.InverseGamma.arg_constraints", false]], "arg_constraints (torchtree.distributions.one_on_x.oneonx attribute)": [[41, "torchtree.distributions.one_on_x.OneOnX.arg_constraints", false]], "arg_constraints (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.arg_constraints", false]], "arg_constraints (torchtree.evolution.birth_death.birthdeath attribute)": [[48, "torchtree.evolution.birth_death.BirthDeath.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.abstractcoalescentdistribution attribute)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescent.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.arg_constraints", false]], "as_newick() (torchtree.evolution.tree_model.abstracttreemodel method)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel.as_newick", false]], "as_tensor() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.as_tensor", false]], "assign() (torchtree.core.parameter.viewparameter method)": [[22, "torchtree.core.parameter.ViewParameter.assign", false]], "attribute (torchtree.evolution.attribute_pattern.attributepattern attribute)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.attribute", false]], "attributepattern (class in torchtree.evolution.attribute_pattern)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern", false]], "b (torchtree.nf.planar.planartransform attribute)": [[89, "torchtree.nf.planar.PlanarTransform.b", false]], "base (torchtree.nf.flow.normalizingflow attribute)": [[87, "torchtree.nf.flow.NormalizingFlow.base", false]], "base_dist (torchtree.nf.realnvp.realnvp attribute)": [[90, "torchtree.nf.realnvp.RealNVP.base_dist", false]], "baseconvergence (class in torchtree.optim.convergence)": [[97, "torchtree.optim.convergence.BaseConvergence", false]], "batch_shape (torchtree.distributions.deterministic_normal.deterministicnormal property)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.batch_shape", false]], "batch_shape (torchtree.distributions.distributions.distribution property)": [[32, "torchtree.distributions.distributions.Distribution.batch_shape", false]], "batch_shape (torchtree.distributions.multivariate_normal.multivariatenormal property)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal.batch_shape", false]], "batch_shape (torchtree.nf.realnvp.realnvp property)": [[90, "torchtree.nf.realnvp.RealNVP.batch_shape", false]], "batchnorm (class in torchtree.nf.realnvp)": [[90, "torchtree.nf.realnvp.BatchNorm", false]], "bayesianbridge (class in torchtree.distributions.bayesian_bridge)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge", false]], "bdskmodel (class in torchtree.evolution.bdsk)": [[47, "torchtree.evolution.bdsk.BDSKModel", false]], "beta (torchtree.distributions.gmrf.gmrfcovariate attribute)": [[33, "torchtree.distributions.gmrf.GMRFCovariate.beta", false]], "beta (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.beta", false]], "beta (torchtree.evolution.coalescent.constantcoalescentintegratedmodel attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.beta", false]], "beta (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[61, "torchtree.evolution.substitution_model.codon.MG94.beta", false]], "beta (torchtree.nf.realnvp.batchnorm attribute)": [[90, "torchtree.nf.realnvp.BatchNorm.beta", false]], "bias (torchtree.distributions.transforms.lineartransform attribute)": [[43, "torchtree.distributions.transforms.LinearTransform.bias", false]], "bijective (torchtree.distributions.transforms.cumsumexptransform attribute)": [[43, "torchtree.distributions.transforms.CumSumExpTransform.bijective", false]], "bijective (torchtree.distributions.transforms.cumsumsoftplustransform attribute)": [[43, "torchtree.distributions.transforms.CumSumSoftPlusTransform.bijective", false]], "bijective (torchtree.distributions.transforms.cumsumtransform attribute)": [[43, "torchtree.distributions.transforms.CumSumTransform.bijective", false]], "bijective (torchtree.distributions.transforms.logtransform attribute)": [[43, "torchtree.distributions.transforms.LogTransform.bijective", false]], "bijective (torchtree.distributions.transforms.softplustransform attribute)": [[43, "torchtree.distributions.transforms.SoftPlusTransform.bijective", false]], "bijective (torchtree.distributions.transforms.trilexpdiagonaltransform attribute)": [[43, "torchtree.distributions.transforms.TrilExpDiagonalTransform.bijective", false]], "bijective (torchtree.evolution.rate_transform.logdifferenceratetransform attribute)": [[55, "torchtree.evolution.rate_transform.LogDifferenceRateTransform.bijective", false]], "bijective (torchtree.evolution.rate_transform.rescaledratetransform attribute)": [[55, "torchtree.evolution.rate_transform.RescaledRateTransform.bijective", false]], "bijective (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.bijective", false]], "bijective (torchtree.evolution.tree_height_transform.generalnodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.bijective", false]], "birthdeath (class in torchtree.evolution.birth_death)": [[48, "torchtree.evolution.birth_death.BirthDeath", false]], "birthdeathmodel (class in torchtree.evolution.birth_death)": [[48, "torchtree.evolution.birth_death.BirthDeathModel", false]], "branch_count (torchtree.evolution.branch_model.strictclockmodel attribute)": [[49, "torchtree.evolution.branch_model.StrictClockModel.branch_count", false]], "branch_lengths() (torchtree.evolution.tree_model.timetreemodel method)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.branch_lengths", false]], "branch_lengths() (torchtree.evolution.tree_model.treemodel method)": [[68, "torchtree.evolution.tree_model.TreeModel.branch_lengths", false]], "branch_lengths() (torchtree.evolution.tree_model.unrootedtreemodel method)": [[68, "torchtree.evolution.tree_model.UnRootedTreeModel.branch_lengths", false]], "branch_lengths_need_update (torchtree.evolution.tree_model.timetreemodel attribute)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.branch_lengths_need_update", false]], "branchmodel (class in torchtree.evolution.branch_model)": [[49, "torchtree.evolution.branch_model.BranchModel", false]], "build_advi() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.build_advi", false]], "build_alignment() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.build_alignment", false]], "build_hmc() (in module torchtree.cli.hmc)": [[4, "torchtree.cli.hmc.build_hmc", false]], "build_mcmc() (in module torchtree.cli.mcmc)": [[9, "torchtree.cli.mcmc.build_mcmc", false]], "build_optimizer() (in module torchtree.cli.map)": [[8, "torchtree.cli.map.build_optimizer", false]], "c (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[44, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.c", false]], "calculate_f3x4() (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.calculate_F3x4", false]], "calculate_f3x4_from_nucleotide() (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.calculate_F3x4_from_nucleotide", false]], "calculate_frequencies() (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.calculate_frequencies", false]], "calculate_frequencies_per_codon_position() (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.calculate_frequencies_per_codon_position", false]], "calculate_kappa() (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.calculate_kappa", false]], "calculate_substitutions() (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.calculate_substitutions", false]], "calculate_treelikelihood() (in module torchtree.evolution.tree_likelihood)": [[67, "torchtree.evolution.tree_likelihood.calculate_treelikelihood", false]], "calculate_treelikelihood_discrete() (in module torchtree.evolution.tree_likelihood)": [[67, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_discrete", false]], "calculate_treelikelihood_discrete_rescaled() (in module torchtree.evolution.tree_likelihood)": [[67, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_discrete_rescaled", false]], "calculate_treelikelihood_discrete_safe() (in module torchtree.evolution.tree_likelihood)": [[67, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_discrete_safe", false]], "calculate_treelikelihood_tip_states_discrete() (in module torchtree.evolution.tree_likelihood)": [[67, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_tip_states_discrete", false]], "calculate_treelikelihood_tip_states_discrete_rescaled() (in module torchtree.evolution.tree_likelihood)": [[67, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_tip_states_discrete_rescaled", false]], "calculate_ts_tv() (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.calculate_ts_tv", false]], "calculate_with_tip_partials() (torchtree.evolution.tree_likelihood.treelikelihoodmodel method)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.calculate_with_tip_partials", false]], "calculate_with_tip_states() (torchtree.evolution.tree_likelihood.treelikelihoodmodel method)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.calculate_with_tip_states", false]], "callablemodel (class in torchtree.core.model)": [[21, "torchtree.core.model.CallableModel", false]], "callables() (torchtree.core.container.container method)": [[17, "torchtree.core.container.Container.callables", false]], "catparameter (class in torchtree.core.parameter)": [[22, "torchtree.core.parameter.CatParameter", false]], "check() (torchtree.optim.convergence.baseconvergence method)": [[97, "torchtree.optim.convergence.BaseConvergence.check", false]], "check() (torchtree.optim.convergence.stanvariationalconvergence method)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.check", false]], "check() (torchtree.optim.convergence.variationalconvergence method)": [[97, "torchtree.optim.convergence.VariationalConvergence.check", false]], "check_arguments() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.check_arguments", false]], "checkpoint (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.checkpoint", false]], "checkpoint (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.checkpoint", false]], "checkpoint (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.checkpoint", false]], "checkpoint_all (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.checkpoint_all", false]], "checkpoint_frequency (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.checkpoint_frequency", false]], "checkpoint_frequency (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.checkpoint_frequency", false]], "checkpoint_frequency (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.checkpoint_frequency", false]], "children (torchtree.evolution.io.node attribute)": [[53, "torchtree.evolution.io.Node.children", false]], "classproperty (class in torchtree.core.classproperty_decorator)": [[16, "torchtree.core.classproperty_decorator.classproperty", false]], "clock_model (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood attribute)": [[54, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.clock_model", false]], "clock_model (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.clock_model", false]], "clone() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.clone", false]], "clone() (torchtree.core.parameter.viewparameter method)": [[22, "torchtree.core.parameter.ViewParameter.clone", false]], "close() (torchtree.core.logger.containerlogger method)": [[20, "torchtree.core.logger.ContainerLogger.close", false]], "close() (torchtree.core.logger.logger method)": [[20, "torchtree.core.logger.Logger.close", false]], "close() (torchtree.core.logger.loggerinterface method)": [[20, "torchtree.core.logger.LoggerInterface.close", false]], "close() (torchtree.core.logger.treelogger method)": [[20, "torchtree.core.logger.TreeLogger.close", false]], "coalescent (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator attribute)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.coalescent", false]], "coalescent_piecewise (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.COALESCENT_PIECEWISE", false]], "codes (torchtree.evolution.datatype.generaldatatype attribute)": [[51, "torchtree.evolution.datatype.GeneralDataType.codes", false]], "codomain (torchtree.distributions.transforms.convexcombinationtransform attribute)": [[43, "torchtree.distributions.transforms.ConvexCombinationTransform.codomain", false]], "codomain (torchtree.distributions.transforms.cumsumexptransform attribute)": [[43, "torchtree.distributions.transforms.CumSumExpTransform.codomain", false]], "codomain (torchtree.distributions.transforms.cumsumsoftplustransform attribute)": [[43, "torchtree.distributions.transforms.CumSumSoftPlusTransform.codomain", false]], "codomain (torchtree.distributions.transforms.cumsumtransform attribute)": [[43, "torchtree.distributions.transforms.CumSumTransform.codomain", false]], "codomain (torchtree.distributions.transforms.lineartransform attribute)": [[43, "torchtree.distributions.transforms.LinearTransform.codomain", false]], "codomain (torchtree.distributions.transforms.logtransform attribute)": [[43, "torchtree.distributions.transforms.LogTransform.codomain", false]], "codomain (torchtree.distributions.transforms.softplustransform attribute)": [[43, "torchtree.distributions.transforms.SoftPlusTransform.codomain", false]], "codon_triplets (torchtree.evolution.datatype.codondatatype attribute)": [[51, "torchtree.evolution.datatype.CodonDataType.CODON_TRIPLETS", false]], "codondatatype (class in torchtree.evolution.datatype)": [[51, "torchtree.evolution.datatype.CodonDataType", false]], "components (torchtree.variational.kl.selbo attribute)": [[105, "torchtree.variational.kl.SELBO.components", false]], "compoundgammadirichletprior (class in torchtree.distributions.tree_prior)": [[44, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior", false]], "compress() (in module torchtree.evolution.site_pattern)": [[58, "torchtree.evolution.site_pattern.compress", false]], "compress_alignment() (in module torchtree.evolution.site_pattern)": [[58, "torchtree.evolution.site_pattern.compress_alignment", false]], "compress_alignment_states() (in module torchtree.evolution.site_pattern)": [[58, "torchtree.evolution.site_pattern.compress_alignment_states", false]], "compute_tips_partials() (torchtree.evolution.attribute_pattern.attributepattern method)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.compute_tips_partials", false]], "compute_tips_partials() (torchtree.evolution.site_pattern.sitepattern method)": [[58, "torchtree.evolution.site_pattern.SitePattern.compute_tips_partials", false]], "compute_tips_states() (torchtree.evolution.attribute_pattern.attributepattern method)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.compute_tips_states", false]], "compute_tips_states() (torchtree.evolution.site_pattern.sitepattern method)": [[58, "torchtree.evolution.site_pattern.SitePattern.compute_tips_states", false]], "concentration (torchtree.distributions.inverse_gamma.inversegamma property)": [[36, "torchtree.distributions.inverse_gamma.InverseGamma.concentration", false]], "constant_term (torchtree.distributions.gmrf_integrated.gmrfgammaintegrated attribute)": [[34, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated.constant_term", false]], "constantcoalescent (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.ConstantCoalescent", false]], "constantcoalescentintegrated (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated", false]], "constantcoalescentintegratedmodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel", false]], "constantcoalescentmodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentModel", false]], "constantsitemodel (class in torchtree.evolution.site_model)": [[57, "torchtree.evolution.site_model.ConstantSiteModel", false]], "constraint (class in torchtree.cli.utils)": [[14, "torchtree.cli.utils.CONSTRAINT", false]], "constraint_prefix (in module torchtree.cli.utils)": [[14, "torchtree.cli.utils.CONSTRAINT_PREFIX", false]], "container (class in torchtree.core.container)": [[17, "torchtree.core.container.Container", false]], "container (torchtree.core.logger.containerlogger attribute)": [[20, "torchtree.core.logger.ContainerLogger.container", false]], "containerlogger (class in torchtree.core.logger)": [[20, "torchtree.core.logger.ContainerLogger", false]], "convergence (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.convergence", false]], "convert_date_to_real() (in module torchtree.cli.utils)": [[14, "torchtree.cli.utils.convert_date_to_real", false]], "convert_samples_to_nexus() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.convert_samples_to_nexus", false]], "convexcombinationtransform (class in torchtree.distributions.transforms)": [[43, "torchtree.distributions.transforms.ConvexCombinationTransform", false]], "copy_() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.copy_", false]], "covariates (torchtree.distributions.gmrf.gmrfcovariate attribute)": [[33, "torchtree.distributions.gmrf.GMRFCovariate.covariates", false]], "cpu() (torchtree.core.abstractparameter.device method)": [[15, "torchtree.core.abstractparameter.Device.cpu", false]], "cpu() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.cpu", false]], "cpu() (torchtree.core.parameter.catparameter method)": [[22, "torchtree.core.parameter.CatParameter.cpu", false]], "cpu() (torchtree.core.parameter.moduleparameter method)": [[22, "torchtree.core.parameter.ModuleParameter.cpu", false]], "cpu() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.cpu", false]], "cpu() (torchtree.core.parameter.transformedparameter method)": [[22, "torchtree.core.parameter.TransformedParameter.cpu", false]], "cpu() (torchtree.core.parameter.viewparameter method)": [[22, "torchtree.core.parameter.ViewParameter.cpu", false]], "cpu() (torchtree.distributions.ctmc_scale.ctmcscale method)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.cpu", false]], "cpu() (torchtree.evolution.attribute_pattern.attributepattern method)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.cpu", false]], "cpu() (torchtree.evolution.site_model.constantsitemodel method)": [[57, "torchtree.evolution.site_model.ConstantSiteModel.cpu", false]], "cpu() (torchtree.evolution.site_model.invariantsitemodel method)": [[57, "torchtree.evolution.site_model.InvariantSiteModel.cpu", false]], "cpu() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.cpu", false]], "cpu() (torchtree.evolution.site_pattern.sitepattern method)": [[58, "torchtree.evolution.site_pattern.SitePattern.cpu", false]], "cpu() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.cpu", false]], "cpu() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.cpu", false]], "cpu() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.cpu", false]], "cpu() (torchtree.evolution.tree_model.timetreemodel method)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.cpu", false]], "cpu() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.cpu", false]], "cpu() (torchtree.nn.module.module method)": [[92, "torchtree.nn.module.Module.cpu", false]], "create_advi() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_advi", false]], "create_alignment() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_alignment", false]], "create_bd_prior() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_bd_prior", false]], "create_bdsk() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_bdsk", false]], "create_bdsk_prior() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_bdsk_prior", false]], "create_birth_death() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_birth_death", false]], "create_block_updating_operator() (in module torchtree.cli.operators)": [[10, "torchtree.cli.operators.create_block_updating_operator", false]], "create_branch_model() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_branch_model", false]], "create_clock_horseshoe_prior() (in module torchtree.cli.priors)": [[13, "torchtree.cli.priors.create_clock_horseshoe_prior", false]], "create_clock_prior() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_clock_prior", false]], "create_coalesent() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_coalesent", false]], "create_constant_bd_prior() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_constant_bd_prior", false]], "create_constant_birth_death() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_constant_birth_death", false]], "create_data_type() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_data_type", false]], "create_evolution_joint() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_evolution_joint", false]], "create_evolution_parser() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_evolution_parser", false]], "create_evolution_priors() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_evolution_priors", false]], "create_flexible_variational() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_flexible_variational", false]], "create_fullrank() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_fullrank", false]], "create_fullrank_from_meanfield() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_fullrank_from_meanfield", false]], "create_gamma_distribution() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_gamma_distribution", false]], "create_general_data_type() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_general_data_type", false]], "create_hmc() (in module torchtree.cli.hmc)": [[4, "torchtree.cli.hmc.create_hmc", false]], "create_hmc_operator() (in module torchtree.cli.hmc)": [[4, "torchtree.cli.hmc.create_hmc_operator", false]], "create_hmc_parser() (in module torchtree.cli.hmc)": [[4, "torchtree.cli.hmc.create_hmc_parser", false]], "create_jacobians() (in module torchtree.cli.jacobians)": [[6, "torchtree.cli.jacobians.create_jacobians", false]], "create_logger() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_logger", false]], "create_logger() (in module torchtree.cli.map)": [[8, "torchtree.cli.map.create_logger", false]], "create_loggers() (in module torchtree.cli.loggers)": [[7, "torchtree.cli.loggers.create_loggers", false]], "create_map_parser() (in module torchtree.cli.map)": [[8, "torchtree.cli.map.create_map_parser", false]], "create_mcmc() (in module torchtree.cli.mcmc)": [[9, "torchtree.cli.mcmc.create_mcmc", false]], "create_mcmc_parser() (in module torchtree.cli.mcmc)": [[9, "torchtree.cli.mcmc.create_mcmc_parser", false]], "create_meanfield() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_meanfield", false]], "create_normal_distribution() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_normal_distribution", false]], "create_one_on_x_prior() (in module torchtree.cli.priors)": [[13, "torchtree.cli.priors.create_one_on_x_prior", false]], "create_optimizer() (in module torchtree.cli.map)": [[8, "torchtree.cli.map.create_optimizer", false]], "create_poisson_evolution_joint() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_poisson_evolution_joint", false]], "create_poisson_tree_likelihood() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_poisson_tree_likelihood", false]], "create_rate_matrix() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel static method)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.create_rate_matrix", false]], "create_realnp_distribution() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_realnp_distribution", false]], "create_realnvp() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_realnvp", false]], "create_sampler() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_sampler", false]], "create_scaler_operator() (in module torchtree.cli.operators)": [[10, "torchtree.cli.operators.create_scaler_operator", false]], "create_show_parser() (in module torchtree.cli.cli)": [[2, "torchtree.cli.cli.create_show_parser", false]], "create_site_model() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_site_model", false]], "create_site_model_srd06_mus() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_site_model_srd06_mus", false]], "create_site_pattern() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_site_pattern", false]], "create_sliding_window_operator() (in module torchtree.cli.operators)": [[10, "torchtree.cli.operators.create_sliding_window_operator", false]], "create_stan_windowed_adaptation() (in module torchtree.cli.hmc)": [[4, "torchtree.cli.hmc.create_stan_windowed_adaptation", false]], "create_substitution_model() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_substitution_model", false]], "create_substitution_model_priors() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_substitution_model_priors", false]], "create_taxa() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_taxa", false]], "create_time_tree_prior() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_time_tree_prior", false]], "create_tree_likelihood() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_tree_likelihood", false]], "create_tree_likelihood_general() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_tree_likelihood_general", false]], "create_tree_likelihood_single() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_tree_likelihood_single", false]], "create_tree_logger() (in module torchtree.cli.map)": [[8, "torchtree.cli.map.create_tree_logger", false]], "create_tree_model() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_tree_model", false]], "create_tril() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_tril", false]], "create_ucln_prior() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.create_ucln_prior", false]], "create_variational_model() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_variational_model", false]], "create_variational_parser() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_variational_parser", false]], "create_weibull_distribution() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.create_weibull_distribution", false]], "csv (class in torchtree.core.logger)": [[20, "torchtree.core.logger.CSV", false]], "ctmcscale (class in torchtree.distributions.ctmc_scale)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale", false]], "cubo (class in torchtree.variational.chi)": [[103, "torchtree.variational.chi.CUBO", false]], "cuda() (torchtree.core.abstractparameter.device method)": [[15, "torchtree.core.abstractparameter.Device.cuda", false]], "cuda() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.cuda", false]], "cuda() (torchtree.core.parameter.catparameter method)": [[22, "torchtree.core.parameter.CatParameter.cuda", false]], "cuda() (torchtree.core.parameter.moduleparameter method)": [[22, "torchtree.core.parameter.ModuleParameter.cuda", false]], "cuda() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.cuda", false]], "cuda() (torchtree.core.parameter.transformedparameter method)": [[22, "torchtree.core.parameter.TransformedParameter.cuda", false]], "cuda() (torchtree.core.parameter.viewparameter method)": [[22, "torchtree.core.parameter.ViewParameter.cuda", false]], "cuda() (torchtree.distributions.ctmc_scale.ctmcscale method)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.cuda", false]], "cuda() (torchtree.evolution.attribute_pattern.attributepattern method)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.cuda", false]], "cuda() (torchtree.evolution.site_model.constantsitemodel method)": [[57, "torchtree.evolution.site_model.ConstantSiteModel.cuda", false]], "cuda() (torchtree.evolution.site_model.invariantsitemodel method)": [[57, "torchtree.evolution.site_model.InvariantSiteModel.cuda", false]], "cuda() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.cuda", false]], "cuda() (torchtree.evolution.site_pattern.sitepattern method)": [[58, "torchtree.evolution.site_pattern.SitePattern.cuda", false]], "cuda() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.cuda", false]], "cuda() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.cuda", false]], "cuda() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.cuda", false]], "cuda() (torchtree.evolution.tree_model.timetreemodel method)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.cuda", false]], "cuda() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.cuda", false]], "cuda() (torchtree.nn.module.module method)": [[92, "torchtree.nn.module.Module.cuda", false]], "cumsumexptransform (class in torchtree.distributions.transforms)": [[43, "torchtree.distributions.transforms.CumSumExpTransform", false]], "cumsumsoftplustransform (class in torchtree.distributions.transforms)": [[43, "torchtree.distributions.transforms.CumSumSoftPlusTransform", false]], "cumsumtransform (class in torchtree.distributions.transforms)": [[43, "torchtree.distributions.transforms.CumSumTransform", false]], "data_type (torchtree.evolution.alignment.alignment property)": [[45, "torchtree.evolution.alignment.Alignment.data_type", false]], "data_type (torchtree.evolution.attribute_pattern.attributepattern attribute)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.data_type", false]], "data_type (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[61, "torchtree.evolution.substitution_model.codon.MG94.data_type", false]], "data_type (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.data_type", false]], "data_type (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.data_type", false]], "datatype (class in torchtree.evolution.datatype)": [[51, "torchtree.evolution.datatype.DataType", false]], "default() (torchtree.core.parameter_encoder.parameterencoder method)": [[23, "torchtree.core.parameter_encoder.ParameterEncoder.default", false]], "default() (torchtree.core.utils.tensorencoder method)": [[28, "torchtree.core.utils.TensorEncoder.default", false]], "delta (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.delta", false]], "delta_elbo (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.delta_elbo", false]], "delta_elbo_ave (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.delta_elbo_ave", false]], "delta_elbo_med (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.delta_elbo_med", false]], "desc (torchtree.nf.energy_functions.energyfunctionmodel attribute)": [[86, "torchtree.nf.energy_functions.EnergyFunctionModel.desc", false]], "detach() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.detach", false]], "deterministicnormal (class in torchtree.distributions.deterministic_normal)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal", false]], "device (class in torchtree.core.abstractparameter)": [[15, "torchtree.core.abstractparameter.Device", false]], "device (torchtree.core.abstractparameter.abstractparameter property)": [[15, "torchtree.core.abstractparameter.AbstractParameter.device", false]], "device (torchtree.core.abstractparameter.device property)": [[15, "torchtree.core.abstractparameter.Device.device", false]], "device (torchtree.core.parameter.catparameter property)": [[22, "torchtree.core.parameter.CatParameter.device", false]], "dict_parameters (torchtree.distributions.distributions.distribution attribute)": [[32, "torchtree.distributions.distributions.Distribution.dict_parameters", false]], "differencenodeheighttransform (class in torchtree.evolution.tree_height_transform)": [[66, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform", false]], "dim() (torchtree.core.abstractparameter.abstractparameter method)": [[15, "torchtree.core.abstractparameter.AbstractParameter.dim", false]], "dimension (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.dimension", false]], "dirichletoperator (class in torchtree.inference.mcmc.operator)": [[83, "torchtree.inference.mcmc.operator.DirichletOperator", false]], "disable_plugins() (torchtree.cli.plugin_manager.pluginmanager method)": [[12, "torchtree.cli.plugin_manager.PluginManager.disable_plugins", false]], "dist (torchtree.distributions.distributions.distribution attribute)": [[32, "torchtree.distributions.distributions.Distribution.dist", false]], "distance (torchtree.evolution.root_transform.rootparameter attribute)": [[56, "torchtree.evolution.root_transform.RootParameter.distance", false]], "distribution (class in torchtree.distributions.distributions)": [[32, "torchtree.distributions.distributions.Distribution", false]], "distribution (torchtree.distributions.distributions.distribution property)": [[32, "torchtree.distributions.distributions.Distribution.distribution", false]], "distribution() (torchtree.evolution.coalescent.abstractcoalescentmodel method)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.constantcoalescentintegratedmodel method)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.constantcoalescentmodel method)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.exponentialcoalescentmodel method)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescentModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.piecewiseconstantcoalescentgridmodel method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.piecewiseconstantcoalescentmodel method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgridmodel method)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.piecewiselinearcoalescentgridmodel method)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel.distribution", false]], "distribution_parameters (torchtree.distributions.distributions.distribution attribute)": [[32, "torchtree.distributions.distributions.Distribution.distribution_parameters", false]], "distribution_type() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.distribution_type", false]], "distributionmodel (class in torchtree.distributions.distributions)": [[32, "torchtree.distributions.distributions.DistributionModel", false]], "distributions (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.distributions", false]], "domain (torchtree.distributions.transforms.convexcombinationtransform attribute)": [[43, "torchtree.distributions.transforms.ConvexCombinationTransform.domain", false]], "domain (torchtree.distributions.transforms.cumsumexptransform attribute)": [[43, "torchtree.distributions.transforms.CumSumExpTransform.domain", false]], "domain (torchtree.distributions.transforms.cumsumsoftplustransform attribute)": [[43, "torchtree.distributions.transforms.CumSumSoftPlusTransform.domain", false]], "domain (torchtree.distributions.transforms.cumsumtransform attribute)": [[43, "torchtree.distributions.transforms.CumSumTransform.domain", false]], "domain (torchtree.distributions.transforms.lineartransform attribute)": [[43, "torchtree.distributions.transforms.LinearTransform.domain", false]], "domain (torchtree.distributions.transforms.logtransform attribute)": [[43, "torchtree.distributions.transforms.LogTransform.domain", false]], "domain (torchtree.distributions.transforms.softplustransform attribute)": [[43, "torchtree.distributions.transforms.SoftPlusTransform.domain", false]], "dtype (torchtree.core.abstractparameter.abstractparameter property)": [[15, "torchtree.core.abstractparameter.AbstractParameter.dtype", false]], "dtype (torchtree.core.parameter.viewparameter property)": [[22, "torchtree.core.parameter.ViewParameter.dtype", false]], "dualaveraging (class in torchtree.ops.dual_averaging)": [[93, "torchtree.ops.dual_averaging.DualAveraging", false]], "dualaveragingstepsize (class in torchtree.inference.hmc.adaptation)": [[72, "torchtree.inference.hmc.adaptation.DualAveragingStepSize", false]], "dumper (class in torchtree.core.logger)": [[20, "torchtree.core.logger.Dumper", false]], "edge_lengths (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood attribute)": [[54, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.edge_lengths", false]], "eigen() (torchtree.evolution.substitution_model.abstract.nonsymmetricsubstitutionmodel method)": [[59, "torchtree.evolution.substitution_model.abstract.NonSymmetricSubstitutionModel.eigen", false]], "eigen() (torchtree.evolution.substitution_model.abstract.symmetricsubstitutionmodel method)": [[59, "torchtree.evolution.substitution_model.abstract.SymmetricSubstitutionModel.eigen", false]], "eigen() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.eigen", false]], "elbo (class in torchtree.variational.kl)": [[105, "torchtree.variational.kl.ELBO", false]], "elbo (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.elbo", false]], "elbo_best (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.elbo_best", false]], "elbo_diff (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.elbo_diff", false]], "elbo_prev (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.elbo_prev", false]], "empiricalsubstitutionmodel (class in torchtree.evolution.substitution_model.general)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel", false]], "encoding() (torchtree.evolution.datatype.aminoaciddatatype method)": [[51, "torchtree.evolution.datatype.AminoAcidDataType.encoding", false]], "encoding() (torchtree.evolution.datatype.codondatatype method)": [[51, "torchtree.evolution.datatype.CodonDataType.encoding", false]], "encoding() (torchtree.evolution.datatype.datatype method)": [[51, "torchtree.evolution.datatype.DataType.encoding", false]], "encoding() (torchtree.evolution.datatype.generaldatatype method)": [[51, "torchtree.evolution.datatype.GeneralDataType.encoding", false]], "encoding() (torchtree.evolution.datatype.nucleotidedatatype method)": [[51, "torchtree.evolution.datatype.NucleotideDataType.encoding", false]], "energyfunctionmodel (class in torchtree.nf.energy_functions)": [[86, "torchtree.nf.energy_functions.EnergyFunctionModel", false]], "entropy (torchtree.variational.kl.elbo attribute)": [[105, "torchtree.variational.kl.ELBO.entropy", false]], "entropy (torchtree.variational.kl.selbo attribute)": [[105, "torchtree.variational.kl.SELBO.entropy", false]], "entropy() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.entropy", false]], "entropy() (torchtree.distributions.distributions.distribution method)": [[32, "torchtree.distributions.distributions.Distribution.entropy", false]], "entropy() (torchtree.distributions.distributions.distributionmodel method)": [[32, "torchtree.distributions.distributions.DistributionModel.entropy", false]], "entropy() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[37, "torchtree.distributions.joint_distribution.JointDistributionModel.entropy", false]], "entropy() (torchtree.distributions.multivariate_normal.multivariatenormal method)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal.entropy", false]], "entropy() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.entropy", false]], "entropy() (torchtree.nf.realnvp.realnvp method)": [[90, "torchtree.nf.realnvp.RealNVP.entropy", false]], "epidemiology_to_birth_death() (in module torchtree.evolution.bdsk)": [[47, "torchtree.evolution.bdsk.epidemiology_to_birth_death", false]], "eps (torchtree.distributions.deterministic_normal.deterministicnormal attribute)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.eps", false]], "eps (torchtree.nf.realnvp.batchnorm attribute)": [[90, "torchtree.nf.realnvp.BatchNorm.eps", false]], "event_shape (torchtree.distributions.deterministic_normal.deterministicnormal property)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.event_shape", false]], "event_shape (torchtree.distributions.distributions.distribution property)": [[32, "torchtree.distributions.distributions.Distribution.event_shape", false]], "event_shape (torchtree.distributions.multivariate_normal.multivariatenormal property)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal.event_shape", false]], "every (torchtree.core.logger.containerlogger attribute)": [[20, "torchtree.core.logger.ContainerLogger.every", false]], "every (torchtree.core.logger.logger attribute)": [[20, "torchtree.core.logger.Logger.every", false]], "every (torchtree.core.logger.treelogger attribute)": [[20, "torchtree.core.logger.TreeLogger.every", false]], "every (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.every", false]], "every (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.every", false]], "every (torchtree.optim.convergence.variationalconvergence attribute)": [[97, "torchtree.optim.convergence.VariationalConvergence.every", false]], "exit() (torchtree.core.utils.signalhandler method)": [[28, "torchtree.core.utils.SignalHandler.exit", false]], "expand() (torchtree.distributions.inverse_gamma.inversegamma method)": [[36, "torchtree.distributions.inverse_gamma.InverseGamma.expand", false]], "expand_plates() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.expand_plates", false]], "exponentialcoalescent (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescent", false]], "exponentialcoalescentmodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescentModel", false]], "extract_taxa() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.extract_taxa", false]], "extract_tensors_and_parameters() (in module torchtree.inference.utils)": [[85, "torchtree.inference.utils.extract_tensors_and_parameters", false]], "f (torchtree.core.logger.logger attribute)": [[20, "torchtree.core.logger.Logger.f", false]], "f (torchtree.core.logger.treelogger attribute)": [[20, "torchtree.core.logger.TreeLogger.f", false]], "faketreemodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.FakeTreeModel", false]], "field (torchtree.distributions.gmrf.gmrf attribute)": [[33, "torchtree.distributions.gmrf.GMRF.field", false]], "field (torchtree.distributions.gmrf_integrated.gmrfgammaintegrated attribute)": [[34, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated.field", false]], "file_name (torchtree.core.logger.csv attribute)": [[20, "torchtree.core.logger.CSV.file_name", false]], "file_name (torchtree.core.logger.treelogger attribute)": [[20, "torchtree.core.logger.TreeLogger.file_name", false]], "file_name (torchtree.optim.convergence.variationalconvergence attribute)": [[97, "torchtree.optim.convergence.VariationalConvergence.file_name", false]], "find_reasonable_step_size() (in module torchtree.inference.hmc.adaptation)": [[72, "torchtree.inference.hmc.adaptation.find_reasonable_step_size", false]], "find_reasonable_step_size() (torchtree.inference.hmc.hmc.hmc method)": [[74, "torchtree.inference.hmc.hmc.HMC.find_reasonable_step_size", false]], "find_step_size (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.find_step_size", false]], "fire_model_changed() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.fire_model_changed", false]], "fire_parameter_changed() (torchtree.core.abstractparameter.abstractparameter method)": [[15, "torchtree.core.abstractparameter.AbstractParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.catparameter method)": [[22, "torchtree.core.parameter.CatParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.moduleparameter method)": [[22, "torchtree.core.parameter.ModuleParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.transformedparameter method)": [[22, "torchtree.core.parameter.TransformedParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.viewparameter method)": [[22, "torchtree.core.parameter.ViewParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.evolution.root_transform.rootparameter method)": [[56, "torchtree.evolution.root_transform.RootParameter.fire_parameter_changed", false]], "flexibletimetreemodel (class in torchtree.evolution.tree_model_flexible)": [[69, "torchtree.evolution.tree_model_flexible.FlexibleTimeTreeModel", false]], "flowsequential (class in torchtree.nf.realnvp)": [[90, "torchtree.nf.realnvp.FlowSequential", false]], "forward() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.forward", false]], "forward() (torchtree.nf.planar.planartransform method)": [[89, "torchtree.nf.planar.PlanarTransform.forward", false]], "forward() (torchtree.nf.realnvp.batchnorm method)": [[90, "torchtree.nf.realnvp.BatchNorm.forward", false]], "forward() (torchtree.nf.realnvp.flowsequential method)": [[90, "torchtree.nf.realnvp.FlowSequential.forward", false]], "forward() (torchtree.nf.realnvp.linearmaskedcoupling method)": [[90, "torchtree.nf.realnvp.LinearMaskedCoupling.forward", false]], "forward() (torchtree.nf.realnvp.realnvp method)": [[90, "torchtree.nf.realnvp.RealNVP.forward", false]], "frequencies (torchtree.evolution.substitution_model.abstract.abstractsubstitutionmodel property)": [[59, "torchtree.evolution.substitution_model.abstract.AbstractSubstitutionModel.frequencies", false]], "frequencies (torchtree.evolution.substitution_model.abstract.substitutionmodel property)": [[59, "torchtree.evolution.substitution_model.abstract.SubstitutionModel.frequencies", false]], "frequencies (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel property)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.frequencies", false]], "frequencies (torchtree.evolution.substitution_model.general.generaljc69 property)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.frequencies", false]], "frequencies (torchtree.evolution.substitution_model.nucleotide.jc69 property)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.frequencies", false]], "from_json() (torchtree.core.container.container class method)": [[17, "torchtree.core.container.Container.from_json", false]], "from_json() (torchtree.core.logger.containerlogger class method)": [[20, "torchtree.core.logger.ContainerLogger.from_json", false]], "from_json() (torchtree.core.logger.csv class method)": [[20, "torchtree.core.logger.CSV.from_json", false]], "from_json() (torchtree.core.logger.dumper class method)": [[20, "torchtree.core.logger.Dumper.from_json", false]], "from_json() (torchtree.core.logger.logger class method)": [[20, "torchtree.core.logger.Logger.from_json", false]], "from_json() (torchtree.core.logger.treelogger class method)": [[20, "torchtree.core.logger.TreeLogger.from_json", false]], "from_json() (torchtree.core.parameter.catparameter class method)": [[22, "torchtree.core.parameter.CatParameter.from_json", false]], "from_json() (torchtree.core.parameter.moduleparameter class method)": [[22, "torchtree.core.parameter.ModuleParameter.from_json", false]], "from_json() (torchtree.core.parameter.parameter class method)": [[22, "torchtree.core.parameter.Parameter.from_json", false]], "from_json() (torchtree.core.parameter.transformedparameter class method)": [[22, "torchtree.core.parameter.TransformedParameter.from_json", false]], "from_json() (torchtree.core.parameter.viewparameter class method)": [[22, "torchtree.core.parameter.ViewParameter.from_json", false]], "from_json() (torchtree.core.serializable.jsonserializable class method)": [[27, "torchtree.core.serializable.JSONSerializable.from_json", false]], "from_json() (torchtree.distributions.bayesian_bridge.bayesianbridge class method)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge.from_json", false]], "from_json() (torchtree.distributions.ctmc_scale.ctmcscale class method)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.from_json", false]], "from_json() (torchtree.distributions.deterministic_normal.deterministicnormal class method)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.from_json", false]], "from_json() (torchtree.distributions.distributions.distribution class method)": [[32, "torchtree.distributions.distributions.Distribution.from_json", false]], "from_json() (torchtree.distributions.gmrf.gmrf class method)": [[33, "torchtree.distributions.gmrf.GMRF.from_json", false]], "from_json() (torchtree.distributions.gmrf.gmrfcovariate class method)": [[33, "torchtree.distributions.gmrf.GMRFCovariate.from_json", false]], "from_json() (torchtree.distributions.gmrf_integrated.gmrfgammaintegrated class method)": [[34, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated.from_json", false]], "from_json() (torchtree.distributions.joint_distribution.jointdistributionmodel class method)": [[37, "torchtree.distributions.joint_distribution.JointDistributionModel.from_json", false]], "from_json() (torchtree.distributions.multivariate_normal.multivariatenormal class method)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal.from_json", false]], "from_json() (torchtree.distributions.scale_mixture.scalemixturenormal class method)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.from_json", false]], "from_json() (torchtree.distributions.tree_prior.compoundgammadirichletprior class method)": [[44, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.from_json", false]], "from_json() (torchtree.evolution.alignment.alignment class method)": [[45, "torchtree.evolution.alignment.Alignment.from_json", false]], "from_json() (torchtree.evolution.attribute_pattern.attributepattern class method)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.from_json", false]], "from_json() (torchtree.evolution.bdsk.bdskmodel class method)": [[47, "torchtree.evolution.bdsk.BDSKModel.from_json", false]], "from_json() (torchtree.evolution.birth_death.birthdeathmodel class method)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.from_json", false]], "from_json() (torchtree.evolution.branch_model.simpleclockmodel class method)": [[49, "torchtree.evolution.branch_model.SimpleClockModel.from_json", false]], "from_json() (torchtree.evolution.branch_model.strictclockmodel class method)": [[49, "torchtree.evolution.branch_model.StrictClockModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.constantcoalescentintegratedmodel class method)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.constantcoalescentmodel class method)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.exponentialcoalescentmodel class method)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescentModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.piecewiseconstantcoalescentgridmodel class method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.piecewiseconstantcoalescentmodel class method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgridmodel class method)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.piecewiselinearcoalescentgridmodel class method)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel.from_json", false]], "from_json() (torchtree.evolution.datatype.aminoaciddatatype class method)": [[51, "torchtree.evolution.datatype.AminoAcidDataType.from_json", false]], "from_json() (torchtree.evolution.datatype.codondatatype class method)": [[51, "torchtree.evolution.datatype.CodonDataType.from_json", false]], "from_json() (torchtree.evolution.datatype.generaldatatype class method)": [[51, "torchtree.evolution.datatype.GeneralDataType.from_json", false]], "from_json() (torchtree.evolution.datatype.nucleotidedatatype class method)": [[51, "torchtree.evolution.datatype.NucleotideDataType.from_json", false]], "from_json() (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood class method)": [[54, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.from_json", false]], "from_json() (torchtree.evolution.root_transform.rootparameter class method)": [[56, "torchtree.evolution.root_transform.RootParameter.from_json", false]], "from_json() (torchtree.evolution.site_model.constantsitemodel class method)": [[57, "torchtree.evolution.site_model.ConstantSiteModel.from_json", false]], "from_json() (torchtree.evolution.site_model.invariantsitemodel class method)": [[57, "torchtree.evolution.site_model.InvariantSiteModel.from_json", false]], "from_json() (torchtree.evolution.site_model.weibullsitemodel class method)": [[57, "torchtree.evolution.site_model.WeibullSiteModel.from_json", false]], "from_json() (torchtree.evolution.site_pattern.sitepattern class method)": [[58, "torchtree.evolution.site_pattern.SitePattern.from_json", false]], "from_json() (torchtree.evolution.substitution_model.amino_acid.lg class method)": [[60, "torchtree.evolution.substitution_model.amino_acid.LG.from_json", false]], "from_json() (torchtree.evolution.substitution_model.amino_acid.wag class method)": [[60, "torchtree.evolution.substitution_model.amino_acid.WAG.from_json", false]], "from_json() (torchtree.evolution.substitution_model.codon.mg94 class method)": [[61, "torchtree.evolution.substitution_model.codon.MG94.from_json", false]], "from_json() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel class method)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.from_json", false]], "from_json() (torchtree.evolution.substitution_model.general.generaljc69 class method)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.from_json", false]], "from_json() (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel class method)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.from_json", false]], "from_json() (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel class method)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.from_json", false]], "from_json() (torchtree.evolution.substitution_model.nucleotide.gtr class method)": [[64, "torchtree.evolution.substitution_model.nucleotide.GTR.from_json", false]], "from_json() (torchtree.evolution.substitution_model.nucleotide.hky class method)": [[64, "torchtree.evolution.substitution_model.nucleotide.HKY.from_json", false]], "from_json() (torchtree.evolution.substitution_model.nucleotide.jc69 class method)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.from_json", false]], "from_json() (torchtree.evolution.taxa.taxa class method)": [[65, "torchtree.evolution.taxa.Taxa.from_json", false]], "from_json() (torchtree.evolution.taxa.taxon class method)": [[65, "torchtree.evolution.taxa.Taxon.from_json", false]], "from_json() (torchtree.evolution.tree_likelihood.treelikelihoodmodel class method)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.from_json", false]], "from_json() (torchtree.evolution.tree_model.reparameterizedtimetreemodel class method)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.from_json", false]], "from_json() (torchtree.evolution.tree_model.timetreemodel class method)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.from_json", false]], "from_json() (torchtree.evolution.tree_model.unrootedtreemodel class method)": [[68, "torchtree.evolution.tree_model.UnRootedTreeModel.from_json", false]], "from_json() (torchtree.evolution.tree_model_flexible.flexibletimetreemodel class method)": [[69, "torchtree.evolution.tree_model_flexible.FlexibleTimeTreeModel.from_json", false]], "from_json() (torchtree.inference.hmc.adaptation.adaptivestepsize class method)": [[72, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.from_json", false]], "from_json() (torchtree.inference.hmc.adaptation.dualaveragingstepsize class method)": [[72, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.from_json", false]], "from_json() (torchtree.inference.hmc.adaptation.massmatrixadaptor class method)": [[72, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.from_json", false]], "from_json() (torchtree.inference.hmc.hamiltonian.hamiltonian class method)": [[73, "torchtree.inference.hmc.hamiltonian.Hamiltonian.from_json", false]], "from_json() (torchtree.inference.hmc.hmc.hmc class method)": [[74, "torchtree.inference.hmc.hmc.HMC.from_json", false]], "from_json() (torchtree.inference.hmc.integrator.leapfrogintegrator class method)": [[76, "torchtree.inference.hmc.integrator.LeapfrogIntegrator.from_json", false]], "from_json() (torchtree.inference.hmc.operator.hmcoperator class method)": [[77, "torchtree.inference.hmc.operator.HMCOperator.from_json", false]], "from_json() (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation class method)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.from_json", false]], "from_json() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator class method)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.from_json", false]], "from_json() (torchtree.inference.mcmc.mcmc.mcmc class method)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.from_json", false]], "from_json() (torchtree.inference.mcmc.operator.dirichletoperator class method)": [[83, "torchtree.inference.mcmc.operator.DirichletOperator.from_json", false]], "from_json() (torchtree.inference.mcmc.operator.scaleroperator class method)": [[83, "torchtree.inference.mcmc.operator.ScalerOperator.from_json", false]], "from_json() (torchtree.inference.mcmc.operator.slidingwindowoperator class method)": [[83, "torchtree.inference.mcmc.operator.SlidingWindowOperator.from_json", false]], "from_json() (torchtree.inference.sampler.sampler class method)": [[84, "torchtree.inference.sampler.Sampler.from_json", false]], "from_json() (torchtree.nf.energy_functions.energyfunctionmodel class method)": [[86, "torchtree.nf.energy_functions.EnergyFunctionModel.from_json", false]], "from_json() (torchtree.nf.flow.normalizingflow class method)": [[87, "torchtree.nf.flow.NormalizingFlow.from_json", false]], "from_json() (torchtree.nf.realnvp.realnvp class method)": [[90, "torchtree.nf.realnvp.RealNVP.from_json", false]], "from_json() (torchtree.nn.module.module class method)": [[92, "torchtree.nn.module.Module.from_json", false]], "from_json() (torchtree.optim.convergence.stanvariationalconvergence class method)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.from_json", false]], "from_json() (torchtree.optim.convergence.variationalconvergence class method)": [[97, "torchtree.optim.convergence.VariationalConvergence.from_json", false]], "from_json() (torchtree.optim.lr_scheduler.scheduler class method)": [[99, "torchtree.optim.lr_scheduler.Scheduler.from_json", false]], "from_json() (torchtree.optim.optimizer.optimizer class method)": [[100, "torchtree.optim.optimizer.Optimizer.from_json", false]], "from_json() (torchtree.variational.chi.cubo class method)": [[103, "torchtree.variational.chi.CUBO.from_json", false]], "from_json() (torchtree.variational.kl.elbo class method)": [[105, "torchtree.variational.kl.ELBO.from_json", false]], "from_json() (torchtree.variational.kl.klpq class method)": [[105, "torchtree.variational.kl.KLpq.from_json", false]], "from_json() (torchtree.variational.kl.klpqimportance class method)": [[105, "torchtree.variational.kl.KLpqImportance.from_json", false]], "from_json() (torchtree.variational.kl.selbo class method)": [[105, "torchtree.variational.kl.SELBO.from_json", false]], "from_json() (torchtree.variational.renyi.vr class method)": [[106, "torchtree.variational.renyi.VR.from_json", false]], "from_json_safe() (torchtree.core.serializable.jsonserializable class method)": [[27, "torchtree.core.serializable.JSONSerializable.from_json_safe", false]], "gather_parameters() (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.gather_parameters", false]], "generaldatatype (class in torchtree.evolution.datatype)": [[51, "torchtree.evolution.datatype.GeneralDataType", false]], "generaljc69 (class in torchtree.evolution.substitution_model.general)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69", false]], "generalnodeheighttransform (class in torchtree.evolution.tree_height_transform)": [[66, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform", false]], "generalnonsymmetricsubstitutionmodel (class in torchtree.evolution.substitution_model.general)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel", false]], "generalsymmetricsubstitutionmodel (class in torchtree.evolution.substitution_model.general)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel", false]], "genetic_code_names (torchtree.evolution.datatype.codondatatype attribute)": [[51, "torchtree.evolution.datatype.CodonDataType.GENETIC_CODE_NAMES", false]], "genetic_code_tables (torchtree.evolution.datatype.codondatatype attribute)": [[51, "torchtree.evolution.datatype.CodonDataType.GENETIC_CODE_TABLES", false]], "get() (torchtree.evolution.alignment.alignment class method)": [[45, "torchtree.evolution.alignment.Alignment.get", false]], "get_class() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.get_class", false]], "get_engine() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.get_engine", false]], "gmrf (class in torchtree.distributions.gmrf)": [[33, "torchtree.distributions.gmrf.GMRF", false]], "gmrf (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator attribute)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.gmrf", false]], "gmrfcovariate (class in torchtree.distributions.gmrf)": [[33, "torchtree.distributions.gmrf.GMRFCovariate", false]], "gmrfgammaintegrated (class in torchtree.distributions.gmrf_integrated)": [[34, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated", false]], "gmrfpiecewisecoalescentblockupdatingoperator (class in torchtree.inference.mcmc.gmrf_block_updating)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator", false]], "gobal_scale (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.gobal_scale", false]], "grad (torchtree.core.parameter.parameter property)": [[22, "torchtree.core.parameter.Parameter.grad", false]], "grad_fn (torchtree.core.parameter.parameter property)": [[22, "torchtree.core.parameter.Parameter.grad_fn", false]], "gradient() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.gradient", false]], "grid (torchtree.evolution.coalescent.piecewiseconstantcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid.grid", false]], "grid (torchtree.evolution.coalescent.piecewiseconstantcoalescentgridmodel attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel.grid", false]], "grid (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.grid", false]], "grid (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgridmodel attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel.grid", false]], "grid (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.grid", false]], "grid (torchtree.evolution.coalescent.piecewiselinearcoalescentgridmodel attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel.grid", false]], "grid (torchtree.evolution.coalescent.softpiecewiseconstantcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid.grid", false]], "growth (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescent.growth", false]], "growth (torchtree.evolution.coalescent.exponentialcoalescentmodel attribute)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescentModel.growth", false]], "growth (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.growth", false]], "growth (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgridmodel attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel.growth", false]], "gtr (class in torchtree.evolution.substitution_model.nucleotide)": [[64, "torchtree.evolution.substitution_model.nucleotide.GTR", false]], "hamiltonian (class in torchtree.inference.hmc.hamiltonian)": [[73, "torchtree.inference.hmc.hamiltonian.Hamiltonian", false]], "hamiltonian() (torchtree.inference.hmc.hmc.hmc method)": [[74, "torchtree.inference.hmc.hmc.HMC.hamiltonian", false]], "handle_model_changed() (torchtree.core.container.container method)": [[17, "torchtree.core.container.Container.handle_model_changed", false]], "handle_model_changed() (torchtree.core.model.callablemodel method)": [[21, "torchtree.core.model.CallableModel.handle_model_changed", false]], "handle_model_changed() (torchtree.core.parameter.catparameter method)": [[22, "torchtree.core.parameter.CatParameter.handle_model_changed", false]], "handle_model_changed() (torchtree.core.parameter.moduleparameter method)": [[22, "torchtree.core.parameter.ModuleParameter.handle_model_changed", false]], "handle_model_changed() (torchtree.core.parameter.transformedparameter method)": [[22, "torchtree.core.parameter.TransformedParameter.handle_model_changed", false]], "handle_model_changed() (torchtree.core.parametric.modellistener method)": [[25, "torchtree.core.parametric.ModelListener.handle_model_changed", false]], "handle_model_changed() (torchtree.distributions.bayesian_bridge.bayesianbridge method)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge.handle_model_changed", false]], "handle_model_changed() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.handle_model_changed", false]], "handle_model_changed() (torchtree.distributions.scale_mixture.scalemixturenormal method)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.attribute_pattern.attributepattern method)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.birth_death.birthdeathmodel method)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.branch_model.abstractclockmodel method)": [[49, "torchtree.evolution.branch_model.AbstractClockModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.root_transform.rootparameter method)": [[56, "torchtree.evolution.root_transform.RootParameter.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.site_model.sitemodel method)": [[57, "torchtree.evolution.site_model.SiteModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.site_pattern.sitepattern method)": [[58, "torchtree.evolution.site_pattern.SitePattern.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.codon.mg94 method)": [[61, "torchtree.evolution.substitution_model.codon.MG94.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.nucleotide.gtr method)": [[64, "torchtree.evolution.substitution_model.nucleotide.GTR.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.nucleotide.hky method)": [[64, "torchtree.evolution.substitution_model.nucleotide.HKY.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.tree_model.abstracttreemodel method)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.handle_model_changed", false]], "handle_model_changed() (torchtree.nf.energy_functions.energyfunctionmodel method)": [[86, "torchtree.nf.energy_functions.EnergyFunctionModel.handle_model_changed", false]], "handle_parameter_changed() (torchtree.core.container.container method)": [[17, "torchtree.core.container.Container.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.model.callablemodel method)": [[21, "torchtree.core.model.CallableModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parameter.catparameter method)": [[22, "torchtree.core.parameter.CatParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parameter.moduleparameter method)": [[22, "torchtree.core.parameter.ModuleParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parameter.transformedparameter method)": [[22, "torchtree.core.parameter.TransformedParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parameter.viewparameter method)": [[22, "torchtree.core.parameter.ViewParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parametric.parameterlistener method)": [[25, "torchtree.core.parametric.ParameterListener.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[37, "torchtree.distributions.joint_distribution.JointDistributionModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.distributions.tree_prior.compoundgammadirichletprior method)": [[44, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.attribute_pattern.attributepattern method)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.branch_model.abstractclockmodel method)": [[49, "torchtree.evolution.branch_model.AbstractClockModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood method)": [[54, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.root_transform.rootparameter method)": [[56, "torchtree.evolution.root_transform.RootParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.site_model.sitemodel method)": [[57, "torchtree.evolution.site_model.SiteModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.site_pattern.sitepattern method)": [[58, "torchtree.evolution.site_pattern.SitePattern.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.codon.mg94 method)": [[61, "torchtree.evolution.substitution_model.codon.MG94.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.nucleotide.gtr method)": [[64, "torchtree.evolution.substitution_model.nucleotide.GTR.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.nucleotide.hky method)": [[64, "torchtree.evolution.substitution_model.nucleotide.HKY.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.tree_likelihood.treelikelihoodmodel method)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.tree_model.timetreemodel method)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.tree_model.unrootedtreemodel method)": [[68, "torchtree.evolution.tree_model.UnRootedTreeModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.inference.hmc.hamiltonian.hamiltonian method)": [[73, "torchtree.inference.hmc.hamiltonian.Hamiltonian.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.inference.hmc.operator.hmcoperator method)": [[77, "torchtree.inference.hmc.operator.HMCOperator.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.chi.cubo method)": [[103, "torchtree.variational.chi.CUBO.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.kl.elbo method)": [[105, "torchtree.variational.kl.ELBO.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.kl.klpq method)": [[105, "torchtree.variational.kl.KLpq.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.kl.klpqimportance method)": [[105, "torchtree.variational.kl.KLpqImportance.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.kl.selbo method)": [[105, "torchtree.variational.kl.SELBO.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.renyi.vr method)": [[106, "torchtree.variational.renyi.VR.handle_parameter_changed", false]], "has_rsample (torchtree.distributions.inverse_gamma.inversegamma attribute)": [[36, "torchtree.distributions.inverse_gamma.InverseGamma.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.abstractcoalescentdistribution attribute)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.constantcoalescent attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescent.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescent.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.has_rsample", false]], "height (torchtree.evolution.io.node attribute)": [[53, "torchtree.evolution.io.Node.height", false]], "heights_from_branch_lengths() (in module torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.heights_from_branch_lengths", false]], "heights_need_update (torchtree.evolution.tree_model.timetreemodel attribute)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.heights_need_update", false]], "heights_to_branch_lengths() (in module torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.heights_to_branch_lengths", false]], "hky (class in torchtree.evolution.substitution_model.nucleotide)": [[64, "torchtree.evolution.substitution_model.nucleotide.HKY", false]], "hmc (class in torchtree.inference.hmc.hmc)": [[74, "torchtree.inference.hmc.hmc.HMC", false]], "hmcoperator (class in torchtree.inference.hmc.operator)": [[77, "torchtree.inference.hmc.operator.HMCOperator", false]], "id (in module torchtree.typing)": [[102, "torchtree.typing.ID", false]], "id (torchtree.core.identifiable.identifiable property)": [[18, "torchtree.core.identifiable.Identifiable.id", false]], "identifiable (class in torchtree.core.identifiable)": [[18, "torchtree.core.identifiable.Identifiable", false]], "indices (torchtree.core.parameter.viewparameter attribute)": [[22, "torchtree.core.parameter.ViewParameter.indices", false]], "indices (torchtree.evolution.site_pattern.sitepattern attribute)": [[58, "torchtree.evolution.site_pattern.SitePattern.indices", false]], "initialize() (torchtree.core.logger.containerlogger method)": [[20, "torchtree.core.logger.ContainerLogger.initialize", false]], "initialize() (torchtree.core.logger.logger method)": [[20, "torchtree.core.logger.Logger.initialize", false]], "initialize() (torchtree.core.logger.loggerinterface method)": [[20, "torchtree.core.logger.LoggerInterface.initialize", false]], "initialize() (torchtree.core.logger.treelogger method)": [[20, "torchtree.core.logger.TreeLogger.initialize", false]], "initialize_dates_from_taxa() (in module torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.initialize_dates_from_taxa", false]], "input_size (torchtree.nf.realnvp.realnvp attribute)": [[90, "torchtree.nf.realnvp.RealNVP.input_size", false]], "inputs (torchtree.core.logger.containerlogger attribute)": [[20, "torchtree.core.logger.ContainerLogger.inputs", false]], "integrator (class in torchtree.inference.hmc.integrator)": [[76, "torchtree.inference.hmc.integrator.Integrator", false]], "integrator (torchtree.inference.hmc.adaptation.dualaveragingstepsize attribute)": [[72, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.integrator", false]], "integrator (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.integrator", false]], "invariant (torchtree.evolution.site_model.invariantsitemodel property)": [[57, "torchtree.evolution.site_model.InvariantSiteModel.invariant", false]], "invariant (torchtree.evolution.site_model.univariatediscretizedsitemodel property)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.invariant", false]], "invariantsitemodel (class in torchtree.evolution.site_model)": [[57, "torchtree.evolution.site_model.InvariantSiteModel", false]], "inverse() (torchtree.nf.realnvp.batchnorm method)": [[90, "torchtree.nf.realnvp.BatchNorm.inverse", false]], "inverse() (torchtree.nf.realnvp.flowsequential method)": [[90, "torchtree.nf.realnvp.FlowSequential.inverse", false]], "inverse() (torchtree.nf.realnvp.linearmaskedcoupling method)": [[90, "torchtree.nf.realnvp.LinearMaskedCoupling.inverse", false]], "inverse() (torchtree.nf.realnvp.realnvp method)": [[90, "torchtree.nf.realnvp.RealNVP.inverse", false]], "inverse_cdf() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.inverse_cdf", false]], "inverse_cdf() (torchtree.evolution.site_model.weibullsitemodel method)": [[57, "torchtree.evolution.site_model.WeibullSiteModel.inverse_cdf", false]], "inverse_mass_matrix (torchtree.inference.hmc.adaptation.warmupadaptation property)": [[72, "torchtree.inference.hmc.adaptation.WarmupAdaptation.inverse_mass_matrix", false]], "inversegamma (class in torchtree.distributions.inverse_gamma)": [[36, "torchtree.distributions.inverse_gamma.InverseGamma", false]], "is_float() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.is_float", false]], "iterations (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.iterations", false]], "iterations (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.iterations", false]], "iterations (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.iterations", false]], "jacobian() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.jacobian", false]], "jc69 (class in torchtree.evolution.substitution_model.nucleotide)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69", false]], "joint (torchtree.inference.hmc.hamiltonian.hamiltonian attribute)": [[73, "torchtree.inference.hmc.hamiltonian.Hamiltonian.joint", false]], "joint (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.joint", false]], "joint (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.joint", false]], "jointdistributionmodel (class in torchtree.distributions.joint_distribution)": [[37, "torchtree.distributions.joint_distribution.JointDistributionModel", false]], "json_factory() (torchtree.core.parameter.parameter static method)": [[22, "torchtree.core.parameter.Parameter.json_factory", false]], "json_factory() (torchtree.core.parameter.viewparameter static method)": [[22, "torchtree.core.parameter.ViewParameter.json_factory", false]], "json_factory() (torchtree.distributions.bayesian_bridge.bayesianbridge static method)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge.json_factory", false]], "json_factory() (torchtree.distributions.ctmc_scale.ctmcscale static method)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.json_factory", false]], "json_factory() (torchtree.distributions.deterministic_normal.deterministicnormal static method)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.json_factory", false]], "json_factory() (torchtree.distributions.distributions.distribution static method)": [[32, "torchtree.distributions.distributions.Distribution.json_factory", false]], "json_factory() (torchtree.distributions.scale_mixture.scalemixturenormal static method)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.json_factory", false]], "json_factory() (torchtree.evolution.branch_model.simpleclockmodel static method)": [[49, "torchtree.evolution.branch_model.SimpleClockModel.json_factory", false]], "json_factory() (torchtree.evolution.tree_model.reparameterizedtimetreemodel static method)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.json_factory", false]], "json_factory() (torchtree.evolution.tree_model.timetreemodel static method)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.json_factory", false]], "json_factory() (torchtree.evolution.tree_model.unrootedtreemodel static method)": [[68, "torchtree.evolution.tree_model.UnRootedTreeModel.json_factory", false]], "json_factory() (torchtree.evolution.tree_model_flexible.flexibletimetreemodel static method)": [[69, "torchtree.evolution.tree_model_flexible.FlexibleTimeTreeModel.json_factory", false]], "jsonparseerror": [[28, "torchtree.core.utils.JSONParseError", false]], "jsonserializable (class in torchtree.core.serializable)": [[27, "torchtree.core.serializable.JSONSerializable", false]], "k (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.k", false]], "kappa (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[61, "torchtree.evolution.substitution_model.codon.MG94.kappa", false]], "kappa (torchtree.evolution.substitution_model.nucleotide.hky property)": [[64, "torchtree.evolution.substitution_model.nucleotide.HKY.kappa", false]], "kinetic_energy() (torchtree.inference.hmc.hamiltonian.hamiltonian method)": [[73, "torchtree.inference.hmc.hamiltonian.Hamiltonian.kinetic_energy", false]], "klpq (class in torchtree.variational.kl)": [[105, "torchtree.variational.kl.KLpq", false]], "klpqimportance (class in torchtree.variational.kl)": [[105, "torchtree.variational.kl.KLpqImportance", false]], "kwargs (torchtree.core.logger.csv attribute)": [[20, "torchtree.core.logger.CSV.kwargs", false]], "kwargs (torchtree.core.logger.dumper attribute)": [[20, "torchtree.core.logger.Dumper.kwargs", false]], "kwargs (torchtree.core.logger.logger attribute)": [[20, "torchtree.core.logger.Logger.kwargs", false]], "kwargs (torchtree.core.logger.treelogger attribute)": [[20, "torchtree.core.logger.TreeLogger.kwargs", false]], "kwargs (torchtree.distributions.distributions.distribution attribute)": [[32, "torchtree.distributions.distributions.Distribution.kwargs", false]], "lambda_ (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.lambda_", false]], "lambda_ (torchtree.evolution.birth_death.birthdeath attribute)": [[48, "torchtree.evolution.birth_death.BirthDeath.lambda_", false]], "lambda_ (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.lambda_", false]], "layers (torchtree.nf.flow.normalizingflow attribute)": [[87, "torchtree.nf.flow.NormalizingFlow.layers", false]], "leapfrogintegrator (class in torchtree.inference.hmc.integrator)": [[76, "torchtree.inference.hmc.integrator.LeapfrogIntegrator", false]], "learn() (torchtree.inference.hmc.adaptation.adaptivestepsize method)": [[72, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.learn", false]], "learn() (torchtree.inference.hmc.adaptation.adaptor method)": [[72, "torchtree.inference.hmc.adaptation.Adaptor.learn", false]], "learn() (torchtree.inference.hmc.adaptation.dualaveragingstepsize method)": [[72, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.learn", false]], "learn() (torchtree.inference.hmc.adaptation.massmatrixadaptor method)": [[72, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.learn", false]], "learn() (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation method)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.learn", false]], "length_of_tensor_in_dict_parameter() (in module torchtree.cli.utils)": [[14, "torchtree.cli.utils.length_of_tensor_in_dict_parameter", false]], "lg (class in torchtree.evolution.substitution_model.amino_acid)": [[60, "torchtree.evolution.substitution_model.amino_acid.LG", false]], "linear_regression() (in module torchtree.evolution.tree_regression)": [[70, "torchtree.evolution.tree_regression.linear_regression", false]], "linearmaskedcoupling (class in torchtree.nf.realnvp)": [[90, "torchtree.nf.realnvp.LinearMaskedCoupling", false]], "lineartransform (class in torchtree.distributions.transforms)": [[43, "torchtree.distributions.transforms.LinearTransform", false]], "list_of_float() (in module torchtree.cli.argparse_utils)": [[1, "torchtree.cli.argparse_utils.list_of_float", false]], "list_or_int() (in module torchtree.cli.argparse_utils)": [[1, "torchtree.cli.argparse_utils.list_or_int", false]], "listeners (torchtree.core.model.model attribute)": [[21, "torchtree.core.model.Model.listeners", false]], "listeners (torchtree.core.parameter.moduleparameter attribute)": [[22, "torchtree.core.parameter.ModuleParameter.listeners", false]], "listeners (torchtree.core.parameter.parameter attribute)": [[22, "torchtree.core.parameter.Parameter.listeners", false]], "listeners (torchtree.core.parameter.transformedparameter attribute)": [[22, "torchtree.core.parameter.TransformedParameter.listeners", false]], "listeners (torchtree.core.parameter.viewparameter attribute)": [[22, "torchtree.core.parameter.ViewParameter.listeners", false]], "listeners (torchtree.evolution.root_transform.rootparameter attribute)": [[56, "torchtree.evolution.root_transform.RootParameter.listeners", false]], "listparameter (in module torchtree.typing)": [[102, "torchtree.typing.ListParameter", false]], "listtensor (in module torchtree.typing)": [[102, "torchtree.typing.ListTensor", false]], "load_arguments() (torchtree.cli.plugin.plugin method)": [[11, "torchtree.cli.plugin.Plugin.load_arguments", false]], "load_arguments() (torchtree.cli.plugin_manager.pluginmanager method)": [[12, "torchtree.cli.plugin_manager.PluginManager.load_arguments", false]], "load_plugins() (torchtree.cli.plugin_manager.pluginmanager method)": [[12, "torchtree.cli.plugin_manager.PluginManager.load_plugins", false]], "load_state_dict() (torchtree.inference.hmc.adaptation.adaptivestepsize method)": [[72, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.adaptation.adaptor method)": [[72, "torchtree.inference.hmc.adaptation.Adaptor.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.adaptation.dualaveragingstepsize method)": [[72, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.adaptation.massmatrixadaptor method)": [[72, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.integrator.integrator method)": [[76, "torchtree.inference.hmc.integrator.Integrator.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.integrator.leapfrogintegrator method)": [[76, "torchtree.inference.hmc.integrator.LeapfrogIntegrator.load_state_dict", false]], "load_state_dict() (torchtree.inference.mcmc.mcmc.mcmc method)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.load_state_dict", false]], "load_state_dict() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.load_state_dict", false]], "load_state_dict() (torchtree.optim.lr_scheduler.scheduler method)": [[99, "torchtree.optim.lr_scheduler.Scheduler.load_state_dict", false]], "load_state_dict() (torchtree.optim.optimizer.optimizer method)": [[100, "torchtree.optim.optimizer.Optimizer.load_state_dict", false]], "loc (torchtree.distributions.deterministic_normal.deterministicnormal attribute)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.loc", false]], "loc (torchtree.distributions.multivariate_normal.multivariatenormal attribute)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal.loc", false]], "loc (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.loc", false]], "local_scale (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge.local_scale", false]], "local_scale (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.local_scale", false]], "log() (torchtree.core.logger.containerlogger method)": [[20, "torchtree.core.logger.ContainerLogger.log", false]], "log() (torchtree.core.logger.logger method)": [[20, "torchtree.core.logger.Logger.log", false]], "log() (torchtree.core.logger.loggerinterface method)": [[20, "torchtree.core.logger.LoggerInterface.log", false]], "log() (torchtree.core.logger.treelogger method)": [[20, "torchtree.core.logger.TreeLogger.log", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.convexcombinationtransform method)": [[43, "torchtree.distributions.transforms.ConvexCombinationTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.cumsumexptransform method)": [[43, "torchtree.distributions.transforms.CumSumExpTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.cumsumsoftplustransform method)": [[43, "torchtree.distributions.transforms.CumSumSoftPlusTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.cumsumtransform method)": [[43, "torchtree.distributions.transforms.CumSumTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.logtransform method)": [[43, "torchtree.distributions.transforms.LogTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.softplustransform method)": [[43, "torchtree.distributions.transforms.SoftPlusTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.trilexpdiagonaltransform method)": [[43, "torchtree.distributions.transforms.TrilExpDiagonalTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.evolution.rate_transform.logdifferenceratetransform method)": [[55, "torchtree.evolution.rate_transform.LogDifferenceRateTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.evolution.rate_transform.rescaledratetransform method)": [[55, "torchtree.evolution.rate_transform.RescaledRateTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.evolution.tree_height_transform.differencenodeheighttransform method)": [[66, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.evolution.tree_height_transform.generalnodeheighttransform method)": [[66, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.nf.planar.planartransform method)": [[89, "torchtree.nf.planar.PlanarTransform.log_abs_det_jacobian", false]], "log_gamma (torchtree.nf.realnvp.batchnorm attribute)": [[90, "torchtree.nf.realnvp.BatchNorm.log_gamma", false]], "log_gamma_one_half (torchtree.distributions.ctmc_scale.ctmcscale attribute)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.log_gamma_one_half", false]], "log_p() (torchtree.evolution.bdsk.piecewiseconstantbirthdeath method)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.log_p", false]], "log_p() (torchtree.evolution.birth_death.birthdeath method)": [[48, "torchtree.evolution.birth_death.BirthDeath.log_p", false]], "log_prob() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.log_prob", false]], "log_prob() (torchtree.distributions.distributions.distribution method)": [[32, "torchtree.distributions.distributions.Distribution.log_prob", false]], "log_prob() (torchtree.distributions.distributions.distributionmodel method)": [[32, "torchtree.distributions.distributions.DistributionModel.log_prob", false]], "log_prob() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[37, "torchtree.distributions.joint_distribution.JointDistributionModel.log_prob", false]], "log_prob() (torchtree.distributions.multivariate_normal.multivariatenormal method)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal.log_prob", false]], "log_prob() (torchtree.distributions.one_on_x.oneonx method)": [[41, "torchtree.distributions.one_on_x.OneOnX.log_prob", false]], "log_prob() (torchtree.evolution.bdsk.piecewiseconstantbirthdeath method)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.log_prob", false]], "log_prob() (torchtree.evolution.birth_death.birthdeath method)": [[48, "torchtree.evolution.birth_death.BirthDeath.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.constantcoalescent method)": [[50, "torchtree.evolution.coalescent.ConstantCoalescent.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.constantcoalescentintegrated method)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.exponentialcoalescent method)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescent.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.piecewiseconstantcoalescent method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescent.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.piecewiseconstantcoalescentgrid method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid method)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid method)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.softpiecewiseconstantcoalescentgrid method)": [[50, "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid.log_prob", false]], "log_prob() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.log_prob", false]], "log_prob() (torchtree.nf.realnvp.realnvp method)": [[90, "torchtree.nf.realnvp.RealNVP.log_prob", false]], "log_q() (torchtree.evolution.bdsk.piecewiseconstantbirthdeath method)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.log_q", false]], "log_q() (torchtree.evolution.birth_death.birthdeath method)": [[48, "torchtree.evolution.birth_death.BirthDeath.log_q", false]], "logdifferenceratetransform (class in torchtree.evolution.rate_transform)": [[55, "torchtree.evolution.rate_transform.LogDifferenceRateTransform", false]], "logger (class in torchtree.core.logger)": [[20, "torchtree.core.logger.Logger", false]], "logger (in module torchtree.cli.advi)": [[0, "torchtree.cli.advi.logger", false]], "logger (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.logger", false]], "loggerinterface (class in torchtree.core.logger)": [[20, "torchtree.core.logger.LoggerInterface", false]], "loggers (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.loggers", false]], "loggers (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.loggers", false]], "loggers (torchtree.inference.sampler.sampler attribute)": [[84, "torchtree.inference.sampler.Sampler.loggers", false]], "loggers (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.loggers", false]], "lognormal (class in torchtree.distributions.log_normal)": [[38, "torchtree.distributions.log_normal.LogNormal", false]], "logtransform (class in torchtree.distributions.transforms)": [[43, "torchtree.distributions.transforms.LogTransform", false]], "loss (torchtree.optim.convergence.variationalconvergence attribute)": [[97, "torchtree.optim.convergence.VariationalConvergence.loss", false]], "loss (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.loss", false]], "lower (torchtree.cli.utils.constraint attribute)": [[14, "torchtree.cli.utils.CONSTRAINT.LOWER", false]], "lp (torchtree.core.model.callablemodel attribute)": [[21, "torchtree.core.model.CallableModel.lp", false]], "lp_needs_update (torchtree.core.model.callablemodel attribute)": [[21, "torchtree.core.model.CallableModel.lp_needs_update", false]], "main() (in module torchtree.cli.cli)": [[2, "torchtree.cli.cli.main", false]], "main() (in module torchtree.torchtree)": [[101, "torchtree.torchtree.main", false]], "make_unconstrained() (in module torchtree.cli.utils)": [[14, "torchtree.cli.utils.make_unconstrained", false]], "mapping (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.mapping", false]], "mapping (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.mapping", false]], "mass_matrix (torchtree.inference.hmc.adaptation.massmatrixadaptor property)": [[72, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.mass_matrix", false]], "mass_matrix (torchtree.inference.hmc.adaptation.warmupadaptation property)": [[72, "torchtree.inference.hmc.adaptation.WarmupAdaptation.mass_matrix", false]], "mass_matrix (torchtree.inference.hmc.operator.hmcoperator property)": [[77, "torchtree.inference.hmc.operator.HMCOperator.mass_matrix", false]], "mass_matrix_adaptor (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.mass_matrix_adaptor", false]], "massmatrixadaptor (class in torchtree.inference.hmc.adaptation)": [[72, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor", false]], "maximize (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.maximize", false]], "maximum_likelihood() (torchtree.evolution.coalescent.abstractcoalescentdistribution class method)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.maximum_likelihood", false]], "maximum_likelihood() (torchtree.evolution.coalescent.constantcoalescent class method)": [[50, "torchtree.evolution.coalescent.ConstantCoalescent.maximum_likelihood", false]], "maximum_likelihood() (torchtree.evolution.coalescent.piecewiseconstantcoalescent class method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescent.maximum_likelihood", false]], "mcmc (class in torchtree.inference.mcmc.mcmc)": [[82, "torchtree.inference.mcmc.mcmc.MCMC", false]], "mcmcoperator (class in torchtree.inference.mcmc.operator)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator", false]], "mean() (torchtree.ops.welford.welfordvariance method)": [[96, "torchtree.ops.welford.WelfordVariance.mean", false]], "mg94 (class in torchtree.evolution.substitution_model.codon)": [[61, "torchtree.evolution.substitution_model.codon.MG94", false]], "model (class in torchtree.core.model)": [[21, "torchtree.core.model.Model", false]], "model (torchtree.inference.sampler.sampler attribute)": [[84, "torchtree.inference.sampler.Sampler.model", false]], "modellistener (class in torchtree.core.parametric)": [[25, "torchtree.core.parametric.ModelListener", false]], "models() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.models", false]], "module": [[0, "module-torchtree.cli.advi", false], [1, "module-torchtree.cli.argparse_utils", false], [2, "module-torchtree.cli.cli", false], [3, "module-torchtree.cli.evolution", false], [4, "module-torchtree.cli.hmc", false], [5, "module-torchtree.cli", false], [6, "module-torchtree.cli.jacobians", false], [7, "module-torchtree.cli.loggers", false], [8, "module-torchtree.cli.map", false], [9, "module-torchtree.cli.mcmc", false], [10, "module-torchtree.cli.operators", false], [11, "module-torchtree.cli.plugin", false], [12, "module-torchtree.cli.plugin_manager", false], [13, "module-torchtree.cli.priors", false], [14, "module-torchtree.cli.utils", false], [15, "module-torchtree.core.abstractparameter", false], [16, "module-torchtree.core.classproperty_decorator", false], [17, "module-torchtree.core.container", false], [18, "module-torchtree.core.identifiable", false], [19, "module-torchtree.core", false], [20, "module-torchtree.core.logger", false], [21, "module-torchtree.core.model", false], [22, "module-torchtree.core.parameter", false], [23, "module-torchtree.core.parameter_encoder", false], [24, "module-torchtree.core.parameter_utils", false], [25, "module-torchtree.core.parametric", false], [26, "module-torchtree.core.runnable", false], [27, "module-torchtree.core.serializable", false], [28, "module-torchtree.core.utils", false], [29, "module-torchtree.distributions.bayesian_bridge", false], [30, "module-torchtree.distributions.ctmc_scale", false], [31, "module-torchtree.distributions.deterministic_normal", false], [32, "module-torchtree.distributions.distributions", false], [33, "module-torchtree.distributions.gmrf", false], [34, "module-torchtree.distributions.gmrf_integrated", false], [35, "module-torchtree.distributions", false], [36, "module-torchtree.distributions.inverse_gamma", false], [37, "module-torchtree.distributions.joint_distribution", false], [38, "module-torchtree.distributions.log_normal", false], [39, "module-torchtree.distributions.multivariate_normal", false], [40, "module-torchtree.distributions.normal", false], [41, "module-torchtree.distributions.one_on_x", false], [42, "module-torchtree.distributions.scale_mixture", false], [43, "module-torchtree.distributions.transforms", false], [44, "module-torchtree.distributions.tree_prior", false], [45, "module-torchtree.evolution.alignment", false], [46, "module-torchtree.evolution.attribute_pattern", false], [47, "module-torchtree.evolution.bdsk", false], [48, "module-torchtree.evolution.birth_death", false], [49, "module-torchtree.evolution.branch_model", false], [50, "module-torchtree.evolution.coalescent", false], [51, "module-torchtree.evolution.datatype", false], [52, "module-torchtree.evolution", false], [53, "module-torchtree.evolution.io", false], [54, "module-torchtree.evolution.poisson_tree_likelihood", false], [55, "module-torchtree.evolution.rate_transform", false], [56, "module-torchtree.evolution.root_transform", false], [57, "module-torchtree.evolution.site_model", false], [58, "module-torchtree.evolution.site_pattern", false], [59, "module-torchtree.evolution.substitution_model.abstract", false], [60, "module-torchtree.evolution.substitution_model.amino_acid", false], [61, "module-torchtree.evolution.substitution_model.codon", false], [62, "module-torchtree.evolution.substitution_model.general", false], [63, "module-torchtree.evolution.substitution_model", false], [64, "module-torchtree.evolution.substitution_model.nucleotide", false], [65, "module-torchtree.evolution.taxa", false], [66, "module-torchtree.evolution.tree_height_transform", false], [67, "module-torchtree.evolution.tree_likelihood", false], [68, "module-torchtree.evolution.tree_model", false], [69, "module-torchtree.evolution.tree_model_flexible", false], [70, "module-torchtree.evolution.tree_regression", false], [71, "module-torchtree", false], [72, "module-torchtree.inference.hmc.adaptation", false], [73, "module-torchtree.inference.hmc.hamiltonian", false], [74, "module-torchtree.inference.hmc.hmc", false], [75, "module-torchtree.inference.hmc", false], [76, "module-torchtree.inference.hmc.integrator", false], [77, "module-torchtree.inference.hmc.operator", false], [78, "module-torchtree.inference.hmc.stan_adaptation", false], [79, "module-torchtree.inference", false], [80, "module-torchtree.inference.mcmc.gmrf_block_updating", false], [81, "module-torchtree.inference.mcmc", false], [82, "module-torchtree.inference.mcmc.mcmc", false], [83, "module-torchtree.inference.mcmc.operator", false], [84, "module-torchtree.inference.sampler", false], [85, "module-torchtree.inference.utils", false], [86, "module-torchtree.nf.energy_functions", false], [87, "module-torchtree.nf.flow", false], [88, "module-torchtree.nf", false], [89, "module-torchtree.nf.planar", false], [90, "module-torchtree.nf.realnvp", false], [91, "module-torchtree.nn", false], [92, "module-torchtree.nn.module", false], [93, "module-torchtree.ops.dual_averaging", false], [94, "module-torchtree.ops", false], [95, "module-torchtree.ops.smooth", false], [96, "module-torchtree.ops.welford", false], [97, "module-torchtree.optim.convergence", false], [98, "module-torchtree.optim", false], [99, "module-torchtree.optim.lr_scheduler", false], [100, "module-torchtree.optim.optimizer", false], [101, "module-torchtree.torchtree", false], [102, "module-torchtree.typing", false], [103, "module-torchtree.variational.chi", false], [104, "module-torchtree.variational", false], [105, "module-torchtree.variational.kl", false], [106, "module-torchtree.variational.renyi", false]], "module (class in torchtree.nn.module)": [[92, "torchtree.nn.module.Module", false]], "module (torchtree.core.parameter.moduleparameter attribute)": [[22, "torchtree.core.parameter.ModuleParameter.module", false]], "module (torchtree.nn.module.module property)": [[92, "torchtree.nn.module.Module.module", false]], "moduleparameter (class in torchtree.core.parameter)": [[22, "torchtree.core.parameter.ModuleParameter", false]], "modules (torchtree.nf.flow.normalizingflow attribute)": [[87, "torchtree.nf.flow.NormalizingFlow.modules", false]], "momentum (torchtree.nf.realnvp.batchnorm attribute)": [[90, "torchtree.nf.realnvp.BatchNorm.momentum", false]], "mu (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.mu", false]], "mu (torchtree.evolution.birth_death.birthdeath attribute)": [[48, "torchtree.evolution.birth_death.BirthDeath.mu", false]], "mu (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.mu", false]], "multivariatenormal (class in torchtree.distributions.multivariate_normal)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal", false]], "n (torchtree.variational.chi.cubo attribute)": [[103, "torchtree.variational.chi.CUBO.n", false]], "name (torchtree.evolution.datatype.codondatatype attribute)": [[51, "torchtree.evolution.datatype.CodonDataType.name", false]], "name (torchtree.evolution.io.node attribute)": [[53, "torchtree.evolution.io.Node.name", false]], "need_update (torchtree.core.parameter.moduleparameter attribute)": [[22, "torchtree.core.parameter.ModuleParameter.need_update", false]], "need_update (torchtree.core.parameter.transformedparameter attribute)": [[22, "torchtree.core.parameter.TransformedParameter.need_update", false]], "need_update (torchtree.evolution.root_transform.rootparameter attribute)": [[56, "torchtree.evolution.root_transform.RootParameter.need_update", false]], "needs_update (torchtree.evolution.site_model.sitemodel attribute)": [[57, "torchtree.evolution.site_model.SiteModel.needs_update", false]], "net (torchtree.nf.realnvp.realnvp attribute)": [[90, "torchtree.nf.realnvp.RealNVP.net", false]], "net_parameters (torchtree.nf.realnvp.realnvp attribute)": [[90, "torchtree.nf.realnvp.RealNVP.net_parameters", false]], "newton_raphson() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.newton_raphson", false]], "node (class in torchtree.evolution.io)": [[53, "torchtree.evolution.io.Node", false]], "node_heights (torchtree.evolution.coalescent.faketreemodel property)": [[50, "torchtree.evolution.coalescent.FakeTreeModel.node_heights", false]], "node_heights (torchtree.evolution.tree_model.reparameterizedtimetreemodel property)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.node_heights", false]], "node_heights (torchtree.evolution.tree_model.timetreemodel property)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.node_heights", false]], "non_synonymous (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[61, "torchtree.evolution.substitution_model.codon.MG94.non_synonymous", false]], "nonsymmetricsubstitutionmodel (class in torchtree.evolution.substitution_model.abstract)": [[59, "torchtree.evolution.substitution_model.abstract.NonSymmetricSubstitutionModel", false]], "norm() (torchtree.evolution.substitution_model.abstract.abstractsubstitutionmodel method)": [[59, "torchtree.evolution.substitution_model.abstract.AbstractSubstitutionModel.norm", false]], "normal (class in torchtree.distributions.normal)": [[40, "torchtree.distributions.normal.Normal", false]], "normalize (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.normalize", false]], "normalizingflow (class in torchtree.nf.flow)": [[87, "torchtree.nf.flow.NormalizingFlow", false]], "nucleotide_ambiguity_states (torchtree.evolution.datatype.nucleotidedatatype attribute)": [[51, "torchtree.evolution.datatype.NucleotideDataType.NUCLEOTIDE_AMBIGUITY_STATES", false]], "nucleotide_states (torchtree.evolution.datatype.nucleotidedatatype attribute)": [[51, "torchtree.evolution.datatype.NucleotideDataType.NUCLEOTIDE_STATES", false]], "nucleotidedatatype (class in torchtree.evolution.datatype)": [[51, "torchtree.evolution.datatype.NucleotideDataType", false]], "nucleotides (torchtree.evolution.datatype.nucleotidedatatype attribute)": [[51, "torchtree.evolution.datatype.NucleotideDataType.NUCLEOTIDES", false]], "num_warmup (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.num_warmup", false]], "number_of_codons (torchtree.evolution.datatype.codondatatype attribute)": [[51, "torchtree.evolution.datatype.CodonDataType.NUMBER_OF_CODONS", false]], "object_hook() (torchtree.core.utils.tensordecoder method)": [[28, "torchtree.core.utils.TensorDecoder.object_hook", false]], "objs (torchtree.core.logger.csv attribute)": [[20, "torchtree.core.logger.CSV.objs", false]], "objs (torchtree.core.logger.logger attribute)": [[20, "torchtree.core.logger.Logger.objs", false]], "oneonx (class in torchtree.distributions.one_on_x)": [[41, "torchtree.distributions.one_on_x.OneOnX", false]], "optimizer (class in torchtree.optim.optimizer)": [[100, "torchtree.optim.optimizer.Optimizer", false]], "optimizer (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.optimizer", false]], "ordereddicttype (in module torchtree.typing)": [[102, "torchtree.typing.OrderedDictType", false]], "origin (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.origin", false]], "origin (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.origin", false]], "origin (torchtree.evolution.birth_death.birthdeath attribute)": [[48, "torchtree.evolution.birth_death.BirthDeath.origin", false]], "origin (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.origin", false]], "origin_is_root_edge (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.origin_is_root_edge", false]], "origin_is_root_edge (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.origin_is_root_edge", false]], "p (torchtree.variational.chi.cubo attribute)": [[103, "torchtree.variational.chi.CUBO.p", false]], "p (torchtree.variational.kl.elbo attribute)": [[105, "torchtree.variational.kl.ELBO.p", false]], "p (torchtree.variational.kl.klpq attribute)": [[105, "torchtree.variational.kl.KLpq.p", false]], "p (torchtree.variational.kl.klpqimportance attribute)": [[105, "torchtree.variational.kl.KLpqImportance.p", false]], "p (torchtree.variational.kl.selbo attribute)": [[105, "torchtree.variational.kl.SELBO.p", false]], "p (torchtree.variational.renyi.vr attribute)": [[106, "torchtree.variational.renyi.VR.p", false]], "p0() (torchtree.evolution.bdsk.piecewiseconstantbirthdeath method)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.p0", false]], "p_t() (torchtree.evolution.substitution_model.abstract.nonsymmetricsubstitutionmodel method)": [[59, "torchtree.evolution.substitution_model.abstract.NonSymmetricSubstitutionModel.p_t", false]], "p_t() (torchtree.evolution.substitution_model.abstract.substitutionmodel method)": [[59, "torchtree.evolution.substitution_model.abstract.SubstitutionModel.p_t", false]], "p_t() (torchtree.evolution.substitution_model.abstract.symmetricsubstitutionmodel method)": [[59, "torchtree.evolution.substitution_model.abstract.SymmetricSubstitutionModel.p_t", false]], "p_t() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.p_t", false]], "p_t() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.p_t", false]], "p_t() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.p_t", false]], "p_t_analytical() (torchtree.evolution.substitution_model.nucleotide.hky method)": [[64, "torchtree.evolution.substitution_model.nucleotide.HKY.p_t_analytical", false]], "pack_tensor() (in module torchtree.core.parameter_utils)": [[24, "torchtree.core.parameter_utils.pack_tensor", false]], "package_contents() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.package_contents", false]], "parameter (class in torchtree.core.parameter)": [[22, "torchtree.core.parameter.Parameter", false]], "parameter (torchtree.core.parameter.viewparameter attribute)": [[22, "torchtree.core.parameter.ViewParameter.parameter", false]], "parameter.to() (in module torchtree.core.parameter)": [[22, "id0", false], [22, "id5", false], [22, "id6", false]], "parameterencoder (class in torchtree.core.parameter_encoder)": [[23, "torchtree.core.parameter_encoder.ParameterEncoder", false]], "parameterlistener (class in torchtree.core.parametric)": [[25, "torchtree.core.parametric.ParameterListener", false]], "parameters (torchtree.core.logger.dumper attribute)": [[20, "torchtree.core.logger.Dumper.parameters", false]], "parameters (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.parameters", false]], "parameters (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.parameters", false]], "parameters (torchtree.inference.mcmc.operator.mcmcoperator attribute)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.parameters", false]], "parameters (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.parameters", false]], "parameters() (torchtree.core.abstractparameter.abstractparameter method)": [[15, "torchtree.core.abstractparameter.AbstractParameter.parameters", false]], "parameters() (torchtree.core.parameter.moduleparameter method)": [[22, "torchtree.core.parameter.ModuleParameter.parameters", false]], "parameters() (torchtree.core.parameter.transformedparameter method)": [[22, "torchtree.core.parameter.TransformedParameter.parameters", false]], "parameters() (torchtree.core.parametric.parametric method)": [[25, "torchtree.core.parametric.Parametric.parameters", false]], "parameters() (torchtree.evolution.root_transform.rootparameter method)": [[56, "torchtree.evolution.root_transform.RootParameter.parameters", false]], "parameters() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.parameters", false]], "parameters() (torchtree.nf.realnvp.realnvp method)": [[90, "torchtree.nf.realnvp.RealNVP.parameters", false]], "parametric (class in torchtree.core.parametric)": [[25, "torchtree.core.parametric.Parametric", false]], "params() (torchtree.core.container.container method)": [[17, "torchtree.core.container.Container.params", false]], "parent (torchtree.evolution.io.node attribute)": [[53, "torchtree.evolution.io.Node.parent", false]], "parse_distribution() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.parse_distribution", false]], "parse_taxa() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.parse_taxa", false]], "parse_translate() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.parse_translate", false]], "parse_tree() (in module torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.parse_tree", false]], "parse_trees() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.parse_trees", false]], "partial() (torchtree.evolution.datatype.aminoaciddatatype method)": [[51, "torchtree.evolution.datatype.AminoAcidDataType.partial", false]], "partial() (torchtree.evolution.datatype.codondatatype method)": [[51, "torchtree.evolution.datatype.CodonDataType.partial", false]], "partial() (torchtree.evolution.datatype.datatype method)": [[51, "torchtree.evolution.datatype.DataType.partial", false]], "partial() (torchtree.evolution.datatype.generaldatatype method)": [[51, "torchtree.evolution.datatype.GeneralDataType.partial", false]], "partial() (torchtree.evolution.datatype.nucleotidedatatype method)": [[51, "torchtree.evolution.datatype.NucleotideDataType.partial", false]], "piecewiseconstantbirthdeath (class in torchtree.evolution.bdsk)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath", false]], "piecewiseconstantcoalescent (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescent", false]], "piecewiseconstantcoalescentgrid (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid", false]], "piecewiseconstantcoalescentgridmodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel", false]], "piecewiseconstantcoalescentmodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentModel", false]], "piecewiseexponentialcoalescentgrid (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid", false]], "piecewiseexponentialcoalescentgridmodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel", false]], "piecewiselinearcoalescentgrid (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid", false]], "piecewiselinearcoalescentgridmodel (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel", false]], "planartransform (class in torchtree.nf.planar)": [[89, "torchtree.nf.planar.PlanarTransform", false]], "plugin (class in torchtree.cli.plugin)": [[11, "torchtree.cli.plugin.Plugin", false]], "plugin_manager (in module torchtree.cli)": [[5, "torchtree.cli.PLUGIN_MANAGER", false]], "pluginmanager (class in torchtree.cli.plugin_manager)": [[12, "torchtree.cli.plugin_manager.PluginManager", false]], "plugins() (torchtree.cli.plugin_manager.pluginmanager method)": [[12, "torchtree.cli.plugin_manager.PluginManager.plugins", false]], "poissontreelikelihood (class in torchtree.evolution.poisson_tree_likelihood)": [[54, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood", false]], "postorder (torchtree.evolution.tree_model.abstracttreemodel property)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel.postorder", false]], "postorder (torchtree.evolution.tree_model.treemodel property)": [[68, "torchtree.evolution.tree_model.TreeModel.postorder", false]], "potential_energy() (torchtree.inference.hmc.hamiltonian.hamiltonian method)": [[73, "torchtree.inference.hmc.hamiltonian.Hamiltonian.potential_energy", false]], "precision (torchtree.distributions.gmrf.gmrf attribute)": [[33, "torchtree.distributions.gmrf.GMRF.precision", false]], "precision_matrix() (torchtree.distributions.gmrf.gmrf method)": [[33, "torchtree.distributions.gmrf.GMRF.precision_matrix", false]], "print_graph() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.print_graph", false]], "probabilities() (torchtree.evolution.site_model.constantsitemodel method)": [[57, "torchtree.evolution.site_model.ConstantSiteModel.probabilities", false]], "probabilities() (torchtree.evolution.site_model.invariantsitemodel method)": [[57, "torchtree.evolution.site_model.InvariantSiteModel.probabilities", false]], "probabilities() (torchtree.evolution.site_model.sitemodel method)": [[57, "torchtree.evolution.site_model.SiteModel.probabilities", false]], "probabilities() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.probabilities", false]], "process_all() (torchtree.cli.plugin.plugin method)": [[11, "torchtree.cli.plugin.Plugin.process_all", false]], "process_coalescent() (torchtree.cli.plugin.plugin method)": [[11, "torchtree.cli.plugin.Plugin.process_coalescent", false]], "process_data_coalesent() (in module torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.process_data_coalesent", false]], "process_object() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.process_object", false]], "process_object_number() (in module torchtree.distributions.bayesian_bridge)": [[29, "torchtree.distributions.bayesian_bridge.process_object_number", false]], "process_object_with_key() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.process_object_with_key", false]], "process_objects() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.process_objects", false]], "process_tree_likelihood() (torchtree.cli.plugin.plugin method)": [[11, "torchtree.cli.plugin.Plugin.process_tree_likelihood", false]], "propose_precision() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.propose_precision", false]], "psi (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.psi", false]], "psi (torchtree.evolution.birth_death.birthdeath attribute)": [[48, "torchtree.evolution.birth_death.BirthDeath.psi", false]], "psi (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.psi", false]], "q (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.Q", false]], "q (torchtree.variational.chi.cubo attribute)": [[103, "torchtree.variational.chi.CUBO.q", false]], "q (torchtree.variational.kl.elbo attribute)": [[105, "torchtree.variational.kl.ELBO.q", false]], "q (torchtree.variational.kl.klpq attribute)": [[105, "torchtree.variational.kl.KLpq.q", false]], "q (torchtree.variational.kl.klpqimportance attribute)": [[105, "torchtree.variational.kl.KLpqImportance.q", false]], "q (torchtree.variational.renyi.vr attribute)": [[106, "torchtree.variational.renyi.VR.q", false]], "q() (torchtree.evolution.substitution_model.abstract.substitutionmodel method)": [[59, "torchtree.evolution.substitution_model.abstract.SubstitutionModel.q", false]], "q() (torchtree.evolution.substitution_model.codon.mg94 method)": [[61, "torchtree.evolution.substitution_model.codon.MG94.q", false]], "q() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.q", false]], "q() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.q", false]], "q() (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.q", false]], "q() (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.q", false]], "q() (torchtree.evolution.substitution_model.nucleotide.gtr method)": [[64, "torchtree.evolution.substitution_model.nucleotide.GTR.q", false]], "q() (torchtree.evolution.substitution_model.nucleotide.hky method)": [[64, "torchtree.evolution.substitution_model.nucleotide.HKY.q", false]], "q() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.q", false]], "r (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.R", false]], "random_tree_from_heights() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.random_tree_from_heights", false]], "rate (torchtree.distributions.inverse_gamma.inversegamma property)": [[36, "torchtree.distributions.inverse_gamma.InverseGamma.rate", false]], "rate (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[44, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.rate", false]], "rate (torchtree.evolution.root_transform.rootparameter attribute)": [[56, "torchtree.evolution.root_transform.RootParameter.rate", false]], "rates (torchtree.evolution.branch_model.branchmodel property)": [[49, "torchtree.evolution.branch_model.BranchModel.rates", false]], "rates (torchtree.evolution.branch_model.simpleclockmodel property)": [[49, "torchtree.evolution.branch_model.SimpleClockModel.rates", false]], "rates (torchtree.evolution.branch_model.strictclockmodel property)": [[49, "torchtree.evolution.branch_model.StrictClockModel.rates", false]], "rates (torchtree.evolution.substitution_model.abstract.substitutionmodel property)": [[59, "torchtree.evolution.substitution_model.abstract.SubstitutionModel.rates", false]], "rates (torchtree.evolution.substitution_model.amino_acid.lg property)": [[60, "torchtree.evolution.substitution_model.amino_acid.LG.rates", false]], "rates (torchtree.evolution.substitution_model.amino_acid.wag property)": [[60, "torchtree.evolution.substitution_model.amino_acid.WAG.rates", false]], "rates (torchtree.evolution.substitution_model.codon.mg94 property)": [[61, "torchtree.evolution.substitution_model.codon.MG94.rates", false]], "rates (torchtree.evolution.substitution_model.general.generaljc69 property)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.rates", false]], "rates (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel property)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.rates", false]], "rates (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel property)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.rates", false]], "rates (torchtree.evolution.substitution_model.nucleotide.gtr property)": [[64, "torchtree.evolution.substitution_model.nucleotide.GTR.rates", false]], "rates (torchtree.evolution.substitution_model.nucleotide.hky property)": [[64, "torchtree.evolution.substitution_model.nucleotide.HKY.rates", false]], "rates (torchtree.evolution.substitution_model.nucleotide.jc69 property)": [[64, "torchtree.evolution.substitution_model.nucleotide.JC69.rates", false]], "rates() (torchtree.evolution.site_model.constantsitemodel method)": [[57, "torchtree.evolution.site_model.ConstantSiteModel.rates", false]], "rates() (torchtree.evolution.site_model.invariantsitemodel method)": [[57, "torchtree.evolution.site_model.InvariantSiteModel.rates", false]], "rates() (torchtree.evolution.site_model.sitemodel method)": [[57, "torchtree.evolution.site_model.SiteModel.rates", false]], "rates() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.rates", false]], "read_dates_from_csv() (in module torchtree.cli.utils)": [[14, "torchtree.cli.utils.read_dates_from_csv", false]], "read_fasta_sequences() (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.read_fasta_sequences", false]], "read_tree() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.read_tree", false]], "read_tree_and_alignment() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.read_tree_and_alignment", false]], "realnvp (class in torchtree.nf.realnvp)": [[90, "torchtree.nf.realnvp.RealNVP", false]], "register_class() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.register_class", false]], "register_model() (torchtree.core.parametric.parametric method)": [[25, "torchtree.core.parametric.Parametric.register_model", false]], "register_parameter() (torchtree.core.parametric.parametric method)": [[25, "torchtree.core.parametric.Parametric.register_parameter", false]], "registered_classes (in module torchtree.core.utils)": [[28, "torchtree.core.utils.REGISTERED_CLASSES", false]], "reject() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.reject", false]], "rel_difference() (torchtree.optim.convergence.stanvariationalconvergence static method)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.rel_difference", false]], "relative_times (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.relative_times", false]], "relative_times (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.relative_times", false]], "removal_probability (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.removal_probability", false]], "removal_probability (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.removal_probability", false]], "remove_comments() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.remove_comments", false]], "remove_constraints() (in module torchtree.cli.utils)": [[14, "torchtree.cli.utils.remove_constraints", false]], "remove_model_listener() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.remove_model_listener", false]], "remove_parameter_listener() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.remove_parameter_listener", false]], "remove_sample() (torchtree.ops.welford.welfordvariance method)": [[96, "torchtree.ops.welford.WelfordVariance.remove_sample", false]], "reparameterizedtimetreemodel (class in torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel", false]], "replace_star_with_str() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.replace_star_with_str", false]], "replace_wildcard_with_str() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.replace_wildcard_with_str", false]], "requires_grad (torchtree.core.abstractparameter.abstractparameter property)": [[15, "torchtree.core.abstractparameter.AbstractParameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.catparameter property)": [[22, "torchtree.core.parameter.CatParameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.moduleparameter property)": [[22, "torchtree.core.parameter.ModuleParameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.parameter property)": [[22, "torchtree.core.parameter.Parameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.transformedparameter property)": [[22, "torchtree.core.parameter.TransformedParameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.viewparameter property)": [[22, "torchtree.core.parameter.ViewParameter.requires_grad", false]], "rescale (torchtree.distributions.gmrf.gmrf attribute)": [[33, "torchtree.distributions.gmrf.GMRF.rescale", false]], "rescale (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.rescale", false]], "rescaledratetransform (class in torchtree.evolution.rate_transform)": [[55, "torchtree.evolution.rate_transform.RescaledRateTransform", false]], "reset() (torchtree.ops.welford.welfordvariance method)": [[96, "torchtree.ops.welford.WelfordVariance.reset", false]], "restart() (torchtree.inference.hmc.adaptation.adaptivestepsize method)": [[72, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.restart", false]], "restart() (torchtree.inference.hmc.adaptation.adaptor method)": [[72, "torchtree.inference.hmc.adaptation.Adaptor.restart", false]], "restart() (torchtree.inference.hmc.adaptation.dualaveragingstepsize method)": [[72, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.restart", false]], "restart() (torchtree.inference.hmc.adaptation.massmatrixadaptor method)": [[72, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.restart", false]], "restart() (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation method)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.restart", false]], "restart() (torchtree.ops.dual_averaging.dualaveraging method)": [[93, "torchtree.ops.dual_averaging.DualAveraging.restart", false]], "rho (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.rho", false]], "rho (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.rho", false]], "rho (torchtree.evolution.birth_death.birthdeath attribute)": [[48, "torchtree.evolution.birth_death.BirthDeath.rho", false]], "rho (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.rho", false]], "rootparameter (class in torchtree.evolution.root_transform)": [[56, "torchtree.evolution.root_transform.RootParameter", false]], "rsample() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.rsample", false]], "rsample() (torchtree.distributions.distributions.distribution method)": [[32, "torchtree.distributions.distributions.Distribution.rsample", false]], "rsample() (torchtree.distributions.distributions.distributionmodel method)": [[32, "torchtree.distributions.distributions.DistributionModel.rsample", false]], "rsample() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[37, "torchtree.distributions.joint_distribution.JointDistributionModel.rsample", false]], "rsample() (torchtree.distributions.multivariate_normal.multivariatenormal method)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal.rsample", false]], "rsample() (torchtree.evolution.coalescent.constantcoalescent method)": [[50, "torchtree.evolution.coalescent.ConstantCoalescent.rsample", false]], "rsample() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.rsample", false]], "rsample() (torchtree.nf.realnvp.realnvp method)": [[90, "torchtree.nf.realnvp.RealNVP.rsample", false]], "run() (torchtree.core.logger.csv method)": [[20, "torchtree.core.logger.CSV.run", false]], "run() (torchtree.core.logger.dumper method)": [[20, "torchtree.core.logger.Dumper.run", false]], "run() (torchtree.core.logger.loggerinterface method)": [[20, "torchtree.core.logger.LoggerInterface.run", false]], "run() (torchtree.core.runnable.runnable method)": [[26, "torchtree.core.runnable.Runnable.run", false]], "run() (torchtree.inference.hmc.hmc.hmc method)": [[74, "torchtree.inference.hmc.hmc.HMC.run", false]], "run() (torchtree.inference.mcmc.mcmc.mcmc method)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.run", false]], "run() (torchtree.inference.sampler.sampler method)": [[84, "torchtree.inference.sampler.Sampler.run", false]], "run() (torchtree.optim.optimizer.optimizer method)": [[100, "torchtree.optim.optimizer.Optimizer.run", false]], "run_tree_regression() (in module torchtree.cli.evolution)": [[3, "torchtree.cli.evolution.run_tree_regression", false]], "runnable (class in torchtree.core.runnable)": [[26, "torchtree.core.runnable.Runnable", false]], "s (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.s", false]], "s_net (torchtree.nf.realnvp.linearmaskedcoupling attribute)": [[90, "torchtree.nf.realnvp.LinearMaskedCoupling.s_net", false]], "sample (torchtree.core.logger.containerlogger attribute)": [[20, "torchtree.core.logger.ContainerLogger.sample", false]], "sample (torchtree.core.logger.logger attribute)": [[20, "torchtree.core.logger.Logger.sample", false]], "sample (torchtree.core.logger.treelogger attribute)": [[20, "torchtree.core.logger.TreeLogger.sample", false]], "sample() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.sample", false]], "sample() (torchtree.distributions.distributions.distribution method)": [[32, "torchtree.distributions.distributions.Distribution.sample", false]], "sample() (torchtree.distributions.distributions.distributionmodel method)": [[32, "torchtree.distributions.distributions.DistributionModel.sample", false]], "sample() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[37, "torchtree.distributions.joint_distribution.JointDistributionModel.sample", false]], "sample() (torchtree.distributions.multivariate_normal.multivariatenormal method)": [[39, "torchtree.distributions.multivariate_normal.MultivariateNormal.sample", false]], "sample() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.sample", false]], "sample() (torchtree.nf.realnvp.realnvp method)": [[90, "torchtree.nf.realnvp.RealNVP.sample", false]], "sample_momentum() (torchtree.inference.hmc.hamiltonian.hamiltonian method)": [[73, "torchtree.inference.hmc.hamiltonian.Hamiltonian.sample_momentum", false]], "sample_momentum() (torchtree.inference.hmc.hmc.hmc method)": [[74, "torchtree.inference.hmc.hmc.HMC.sample_momentum", false]], "sample_shape (torchtree.core.model.model property)": [[21, "torchtree.core.model.Model.sample_shape", false]], "sample_shape (torchtree.core.parameter.moduleparameter property)": [[22, "torchtree.core.parameter.ModuleParameter.sample_shape", false]], "sample_shape (torchtree.core.parameter.transformedparameter property)": [[22, "torchtree.core.parameter.TransformedParameter.sample_shape", false]], "sample_shape (torchtree.evolution.coalescent.faketreemodel property)": [[50, "torchtree.evolution.coalescent.FakeTreeModel.sample_shape", false]], "sampler (class in torchtree.inference.sampler)": [[84, "torchtree.inference.sampler.Sampler", false]], "samples (torchtree.inference.sampler.sampler attribute)": [[84, "torchtree.inference.sampler.Sampler.samples", false]], "samples (torchtree.ops.welford.welfordvariance attribute)": [[96, "torchtree.ops.welford.WelfordVariance.samples", false]], "samples (torchtree.optim.convergence.variationalconvergence attribute)": [[97, "torchtree.optim.convergence.VariationalConvergence.samples", false]], "samples (torchtree.variational.chi.cubo attribute)": [[103, "torchtree.variational.chi.CUBO.samples", false]], "samples (torchtree.variational.kl.elbo attribute)": [[105, "torchtree.variational.kl.ELBO.samples", false]], "samples (torchtree.variational.kl.klpq attribute)": [[105, "torchtree.variational.kl.KLpq.samples", false]], "samples (torchtree.variational.kl.klpqimportance attribute)": [[105, "torchtree.variational.kl.KLpqImportance.samples", false]], "samples (torchtree.variational.kl.selbo attribute)": [[105, "torchtree.variational.kl.SELBO.samples", false]], "samples (torchtree.variational.renyi.vr attribute)": [[106, "torchtree.variational.renyi.VR.samples", false]], "sampling_times (torchtree.evolution.tree_model.timetreemodel attribute)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.sampling_times", false]], "save_full_state() (torchtree.inference.mcmc.mcmc.mcmc method)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.save_full_state", false]], "save_full_state() (torchtree.optim.optimizer.optimizer method)": [[100, "torchtree.optim.optimizer.Optimizer.save_full_state", false]], "save_parameters() (in module torchtree.core.parameter_utils)": [[24, "torchtree.core.parameter_utils.save_parameters", false]], "scale (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge.scale", false]], "scale (torchtree.distributions.deterministic_normal.deterministicnormal attribute)": [[31, "torchtree.distributions.deterministic_normal.DeterministicNormal.scale", false]], "scalemixturenormal (class in torchtree.distributions.scale_mixture)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal", false]], "scaleroperator (class in torchtree.inference.mcmc.operator)": [[83, "torchtree.inference.mcmc.operator.ScalerOperator", false]], "scheduler (class in torchtree.optim.lr_scheduler)": [[99, "torchtree.optim.lr_scheduler.Scheduler", false]], "scheduler (torchtree.optim.lr_scheduler.scheduler attribute)": [[99, "torchtree.optim.lr_scheduler.Scheduler.scheduler", false]], "scheduler (torchtree.optim.optimizer.optimizer attribute)": [[100, "torchtree.optim.optimizer.Optimizer.scheduler", false]], "score (torchtree.variational.kl.elbo attribute)": [[105, "torchtree.variational.kl.ELBO.score", false]], "selbo (class in torchtree.variational.kl)": [[105, "torchtree.variational.kl.SELBO", false]], "sequence (in module torchtree.evolution.alignment)": [[45, "torchtree.evolution.alignment.Sequence", false]], "sequence_size (torchtree.evolution.alignment.alignment property)": [[45, "torchtree.evolution.alignment.Alignment.sequence_size", false]], "set_adaptable_parameter() (torchtree.inference.hmc.operator.hmcoperator method)": [[77, "torchtree.inference.hmc.operator.HMCOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.operator.dirichletoperator method)": [[83, "torchtree.inference.mcmc.operator.DirichletOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.operator.scaleroperator method)": [[83, "torchtree.inference.mcmc.operator.ScalerOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.operator.slidingwindowoperator method)": [[83, "torchtree.inference.mcmc.operator.SlidingWindowOperator.set_adaptable_parameter", false]], "set_tensor() (in module torchtree.inference.hmc.integrator)": [[76, "torchtree.inference.hmc.integrator.set_tensor", false]], "setup_dates() (in module torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.setup_dates", false]], "setup_indexes() (in module torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.setup_indexes", false]], "shape (torchtree.core.abstractparameter.abstractparameter property)": [[15, "torchtree.core.abstractparameter.AbstractParameter.shape", false]], "shape (torchtree.core.parameter.moduleparameter property)": [[22, "torchtree.core.parameter.ModuleParameter.shape", false]], "shape (torchtree.core.parameter.transformedparameter property)": [[22, "torchtree.core.parameter.TransformedParameter.shape", false]], "shape (torchtree.core.parameter.viewparameter property)": [[22, "torchtree.core.parameter.ViewParameter.shape", false]], "shape (torchtree.distributions.ctmc_scale.ctmcscale attribute)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.shape", false]], "shape (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[44, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.shape", false]], "shape (torchtree.evolution.site_model.weibullsitemodel property)": [[57, "torchtree.evolution.site_model.WeibullSiteModel.shape", false]], "shift (torchtree.evolution.root_transform.rootparameter attribute)": [[56, "torchtree.evolution.root_transform.RootParameter.shift", false]], "sign (torchtree.distributions.transforms.cumsumexptransform attribute)": [[43, "torchtree.distributions.transforms.CumSumExpTransform.sign", false]], "sign (torchtree.distributions.transforms.cumsumsoftplustransform attribute)": [[43, "torchtree.distributions.transforms.CumSumSoftPlusTransform.sign", false]], "sign (torchtree.distributions.transforms.cumsumtransform attribute)": [[43, "torchtree.distributions.transforms.CumSumTransform.sign", false]], "sign (torchtree.distributions.transforms.logtransform attribute)": [[43, "torchtree.distributions.transforms.LogTransform.sign", false]], "sign (torchtree.distributions.transforms.softplustransform attribute)": [[43, "torchtree.distributions.transforms.SoftPlusTransform.sign", false]], "sign (torchtree.distributions.transforms.trilexpdiagonaltransform attribute)": [[43, "torchtree.distributions.transforms.TrilExpDiagonalTransform.sign", false]], "sign (torchtree.evolution.rate_transform.logdifferenceratetransform attribute)": [[55, "torchtree.evolution.rate_transform.LogDifferenceRateTransform.sign", false]], "sign (torchtree.evolution.rate_transform.rescaledratetransform attribute)": [[55, "torchtree.evolution.rate_transform.RescaledRateTransform.sign", false]], "sign (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.sign", false]], "sign (torchtree.evolution.tree_height_transform.generalnodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.sign", false]], "signalhandler (class in torchtree.core.utils)": [[28, "torchtree.core.utils.SignalHandler", false]], "simpleclockmodel (class in torchtree.evolution.branch_model)": [[49, "torchtree.evolution.branch_model.SimpleClockModel", false]], "simplex (torchtree.cli.utils.constraint attribute)": [[14, "torchtree.cli.utils.CONSTRAINT.SIMPLEX", false]], "site_model (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.site_model", false]], "site_pattern (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.site_pattern", false]], "sitemodel (class in torchtree.evolution.site_model)": [[57, "torchtree.evolution.site_model.SiteModel", false]], "sitepattern (class in torchtree.evolution.site_pattern)": [[58, "torchtree.evolution.site_pattern.SitePattern", false]], "size (torchtree.evolution.datatype.abstractdatatype property)": [[51, "torchtree.evolution.datatype.AbstractDataType.size", false]], "size (torchtree.evolution.datatype.datatype property)": [[51, "torchtree.evolution.datatype.DataType.size", false]], "size() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.size", false]], "slab (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge.slab", false]], "slab (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.slab", false]], "slidingwindowoperator (class in torchtree.inference.mcmc.operator)": [[83, "torchtree.inference.mcmc.operator.SlidingWindowOperator", false]], "smooth_max() (in module torchtree.ops.smooth)": [[95, "torchtree.ops.smooth.smooth_max", false]], "smoothed_acceptance_rate() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.smoothed_acceptance_rate", false]], "soft_searchsorted() (in module torchtree.ops.smooth)": [[95, "torchtree.ops.smooth.soft_searchsorted", false]], "soft_sort() (in module torchtree.ops.smooth)": [[95, "torchtree.ops.smooth.soft_sort", false]], "softpiecewiseconstantcoalescentgrid (class in torchtree.evolution.coalescent)": [[50, "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid", false]], "softplustransform (class in torchtree.distributions.transforms)": [[43, "torchtree.distributions.transforms.SoftPlusTransform", false]], "sort_indices() (torchtree.evolution.tree_height_transform.generalnodeheighttransform method)": [[66, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.sort_indices", false]], "split_newick() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.split_newick", false]], "sqrt_mass_matrix (torchtree.inference.hmc.adaptation.warmupadaptation property)": [[72, "torchtree.inference.hmc.adaptation.WarmupAdaptation.sqrt_mass_matrix", false]], "sqrt_pi (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.sqrt_pi", false]], "sqrt_pi_inv (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.sqrt_pi_inv", false]], "stanvariationalconvergence (class in torchtree.optim.convergence)": [[97, "torchtree.optim.convergence.StanVariationalConvergence", false]], "stanwindowedadaptation (class in torchtree.inference.hmc.stan_adaptation)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation", false]], "start (torchtree.optim.convergence.variationalconvergence attribute)": [[97, "torchtree.optim.convergence.VariationalConvergence.start", false]], "state_count (torchtree.evolution.datatype.abstractdatatype property)": [[51, "torchtree.evolution.datatype.AbstractDataType.state_count", false]], "state_count (torchtree.evolution.datatype.datatype property)": [[51, "torchtree.evolution.datatype.DataType.state_count", false]], "state_count (torchtree.evolution.substitution_model.general.generaljc69 attribute)": [[62, "torchtree.evolution.substitution_model.general.GeneralJC69.state_count", false]], "state_count (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.state_count", false]], "state_count (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel attribute)": [[62, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.state_count", false]], "state_dict() (torchtree.inference.hmc.adaptation.adaptor method)": [[72, "torchtree.inference.hmc.adaptation.Adaptor.state_dict", false]], "state_dict() (torchtree.inference.hmc.integrator.integrator method)": [[76, "torchtree.inference.hmc.integrator.Integrator.state_dict", false]], "state_dict() (torchtree.inference.mcmc.mcmc.mcmc method)": [[82, "torchtree.inference.mcmc.mcmc.MCMC.state_dict", false]], "state_dict() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.state_dict", false]], "state_dict() (torchtree.optim.lr_scheduler.scheduler method)": [[99, "torchtree.optim.lr_scheduler.Scheduler.state_dict", false]], "state_dict() (torchtree.optim.optimizer.optimizer method)": [[100, "torchtree.optim.optimizer.Optimizer.state_dict", false]], "states (torchtree.evolution.datatype.abstractdatatype property)": [[51, "torchtree.evolution.datatype.AbstractDataType.states", false]], "states (torchtree.evolution.datatype.datatype property)": [[51, "torchtree.evolution.datatype.DataType.states", false]], "step() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.step", false]], "step() (torchtree.ops.dual_averaging.dualaveraging method)": [[93, "torchtree.ops.dual_averaging.DualAveraging.step", false]], "step() (torchtree.optim.lr_scheduler.scheduler method)": [[99, "torchtree.optim.lr_scheduler.Scheduler.step", false]], "step_size (torchtree.inference.hmc.adaptation.warmupadaptation property)": [[72, "torchtree.inference.hmc.adaptation.WarmupAdaptation.step_size", false]], "step_size (torchtree.inference.hmc.integrator.leapfrogintegrator attribute)": [[76, "torchtree.inference.hmc.integrator.LeapfrogIntegrator.step_size", false]], "step_size_adaptor (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[78, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.step_size_adaptor", false]], "steps (torchtree.inference.hmc.integrator.leapfrogintegrator attribute)": [[76, "torchtree.inference.hmc.integrator.LeapfrogIntegrator.steps", false]], "stop (torchtree.core.utils.signalhandler attribute)": [[28, "torchtree.core.utils.SignalHandler.stop", false]], "stop_count (torchtree.evolution.datatype.codondatatype attribute)": [[51, "torchtree.evolution.datatype.CodonDataType.stop_count", false]], "str_or_float() (in module torchtree.cli.argparse_utils)": [[1, "torchtree.cli.argparse_utils.str_or_float", false]], "strictclockmodel (class in torchtree.evolution.branch_model)": [[49, "torchtree.evolution.branch_model.StrictClockModel", false]], "string_to_list_index() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.string_to_list_index", false]], "subst_model (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.subst_model", false]], "substitutionmodel (class in torchtree.evolution.substitution_model.abstract)": [[59, "torchtree.evolution.substitution_model.abstract.SubstitutionModel", false]], "sufficient_statistics() (torchtree.evolution.coalescent.piecewiseconstantcoalescent method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescent.sufficient_statistics", false]], "sufficient_statistics() (torchtree.evolution.coalescent.piecewiseconstantcoalescentgrid method)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid.sufficient_statistics", false]], "sum_log_abs_det_jacobians (torchtree.nf.flow.normalizingflow attribute)": [[87, "torchtree.nf.flow.NormalizingFlow.sum_log_abs_det_jacobians", false]], "sum_log_abs_det_jacobians (torchtree.nf.realnvp.realnvp attribute)": [[90, "torchtree.nf.realnvp.RealNVP.sum_log_abs_det_jacobians", false]], "support (torchtree.distributions.inverse_gamma.inversegamma attribute)": [[36, "torchtree.distributions.inverse_gamma.InverseGamma.support", false]], "support (torchtree.distributions.one_on_x.oneonx attribute)": [[41, "torchtree.distributions.one_on_x.OneOnX.support", false]], "support (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.support", false]], "support (torchtree.evolution.coalescent.abstractcoalescentdistribution attribute)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.support", false]], "support (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.support", false]], "support (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescent.support", false]], "support (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.support", false]], "support (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.support", false]], "survival (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.survival", false]], "survival (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.survival", false]], "survival (torchtree.evolution.birth_death.birthdeath attribute)": [[48, "torchtree.evolution.birth_death.BirthDeath.survival", false]], "survival (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.survival", false]], "symmetricsubstitutionmodel (class in torchtree.evolution.substitution_model.abstract)": [[59, "torchtree.evolution.substitution_model.abstract.SymmetricSubstitutionModel", false]], "synonymous (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[61, "torchtree.evolution.substitution_model.codon.MG94.synonymous", false]], "t_net (torchtree.nf.realnvp.linearmaskedcoupling attribute)": [[90, "torchtree.nf.realnvp.LinearMaskedCoupling.t_net", false]], "table (torchtree.evolution.datatype.codondatatype attribute)": [[51, "torchtree.evolution.datatype.CodonDataType.table", false]], "tag (torchtree.core.model.model property)": [[21, "torchtree.core.model.Model.tag", false]], "target_acceptance_probability (torchtree.inference.hmc.adaptation.adaptivestepsize attribute)": [[72, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.target_acceptance_probability", false]], "target_acceptance_probability (torchtree.inference.mcmc.operator.mcmcoperator attribute)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.target_acceptance_probability", false]], "taxa (class in torchtree.evolution.taxa)": [[65, "torchtree.evolution.taxa.Taxa", false]], "taxa (torchtree.evolution.alignment.alignment property)": [[45, "torchtree.evolution.alignment.Alignment.taxa", false]], "taxa (torchtree.evolution.attribute_pattern.attributepattern attribute)": [[46, "torchtree.evolution.attribute_pattern.AttributePattern.taxa", false]], "taxa (torchtree.evolution.tree_model.abstracttreemodel property)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel.taxa", false]], "taxa (torchtree.evolution.tree_model.treemodel property)": [[68, "torchtree.evolution.tree_model.TreeModel.taxa", false]], "taxa_count (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.taxa_count", false]], "taxa_count (torchtree.evolution.tree_height_transform.generalnodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.taxa_count", false]], "taxa_count (torchtree.evolution.tree_model.abstracttreemodel attribute)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel.taxa_count", false]], "taxa_count (torchtree.evolution.tree_model.timetreemodel attribute)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.taxa_count", false]], "taxon (class in torchtree.evolution.taxa)": [[65, "torchtree.evolution.taxa.Taxon", false]], "temperature (torchtree.evolution.coalescent.piecewiseconstantcoalescentgridmodel attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel.temperature", false]], "temperature (torchtree.evolution.coalescent.softpiecewiseconstantcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid.temperature", false]], "tensor (torchtree.core.abstractparameter.abstractparameter property)": [[15, "torchtree.core.abstractparameter.AbstractParameter.tensor", false]], "tensor (torchtree.core.parameter.catparameter property)": [[22, "torchtree.core.parameter.CatParameter.tensor", false]], "tensor (torchtree.core.parameter.moduleparameter property)": [[22, "torchtree.core.parameter.ModuleParameter.tensor", false]], "tensor (torchtree.core.parameter.parameter property)": [[22, "torchtree.core.parameter.Parameter.tensor", false]], "tensor (torchtree.core.parameter.transformedparameter property)": [[22, "torchtree.core.parameter.TransformedParameter.tensor", false]], "tensor (torchtree.core.parameter.viewparameter property)": [[22, "torchtree.core.parameter.ViewParameter.tensor", false]], "tensor (torchtree.evolution.root_transform.rootparameter property)": [[56, "torchtree.evolution.root_transform.RootParameter.tensor", false]], "tensor_rand() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.tensor_rand", false]], "tensordecoder (class in torchtree.core.utils)": [[28, "torchtree.core.utils.TensorDecoder", false]], "tensorencoder (class in torchtree.core.utils)": [[28, "torchtree.core.utils.TensorEncoder", false]], "theta (torchtree.evolution.coalescent.abstractcoalescentdistribution attribute)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.theta", false]], "theta (torchtree.evolution.coalescent.abstractcoalescentmodel attribute)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentModel.theta", false]], "theta (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[50, "torchtree.evolution.coalescent.ExponentialCoalescent.theta", false]], "theta (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.theta", false]], "theta (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[50, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.theta", false]], "threshold (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.threshold", false]], "times (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.times", false]], "times (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[47, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.times", false]], "timetreemodel (class in torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.TimeTreeModel", false]], "to() (torchtree.core.abstractparameter.device method)": [[15, "torchtree.core.abstractparameter.Device.to", false]], "to() (torchtree.core.model.model method)": [[21, "torchtree.core.model.Model.to", false]], "to() (torchtree.core.parameter.catparameter method)": [[22, "torchtree.core.parameter.CatParameter.to", false]], "to() (torchtree.core.parameter.moduleparameter method)": [[22, "torchtree.core.parameter.ModuleParameter.to", false]], "to() (torchtree.core.parameter.parameter method)": [[22, "torchtree.core.parameter.Parameter.to", false]], "to() (torchtree.core.parameter.transformedparameter method)": [[22, "torchtree.core.parameter.TransformedParameter.to", false]], "to() (torchtree.core.parameter.viewparameter method)": [[22, "torchtree.core.parameter.ViewParameter.to", false]], "to() (torchtree.distributions.ctmc_scale.ctmcscale method)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.to", false]], "to() (torchtree.evolution.site_model.constantsitemodel method)": [[57, "torchtree.evolution.site_model.ConstantSiteModel.to", false]], "to() (torchtree.evolution.site_model.invariantsitemodel method)": [[57, "torchtree.evolution.site_model.InvariantSiteModel.to", false]], "to() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.to", false]], "to() (torchtree.nf.flow.normalizingflow method)": [[87, "torchtree.nf.flow.NormalizingFlow.to", false]], "to() (torchtree.nn.module.module method)": [[92, "torchtree.nn.module.Module.to", false]], "to_nexus() (in module torchtree.evolution.io)": [[53, "torchtree.evolution.io.to_nexus", false]], "tol_rel_obj (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[97, "torchtree.optim.convergence.StanVariationalConvergence.tol_rel_obj", false]], "torchtree": [[71, "module-torchtree", false]], "torchtree.cli": [[5, "module-torchtree.cli", false]], "torchtree.cli.advi": [[0, "module-torchtree.cli.advi", false]], "torchtree.cli.argparse_utils": [[1, "module-torchtree.cli.argparse_utils", false]], "torchtree.cli.cli": [[2, "module-torchtree.cli.cli", false]], "torchtree.cli.evolution": [[3, "module-torchtree.cli.evolution", false]], "torchtree.cli.hmc": [[4, "module-torchtree.cli.hmc", false]], "torchtree.cli.jacobians": [[6, "module-torchtree.cli.jacobians", false]], "torchtree.cli.loggers": [[7, "module-torchtree.cli.loggers", false]], "torchtree.cli.map": [[8, "module-torchtree.cli.map", false]], "torchtree.cli.mcmc": [[9, "module-torchtree.cli.mcmc", false]], "torchtree.cli.operators": [[10, "module-torchtree.cli.operators", false]], "torchtree.cli.plugin": [[11, "module-torchtree.cli.plugin", false]], "torchtree.cli.plugin_manager": [[12, "module-torchtree.cli.plugin_manager", false]], "torchtree.cli.priors": [[13, "module-torchtree.cli.priors", false]], "torchtree.cli.utils": [[14, "module-torchtree.cli.utils", false]], "torchtree.core": [[19, "module-torchtree.core", false]], "torchtree.core.abstractparameter": [[15, "module-torchtree.core.abstractparameter", false]], "torchtree.core.classproperty_decorator": [[16, "module-torchtree.core.classproperty_decorator", false]], "torchtree.core.container": [[17, "module-torchtree.core.container", false]], "torchtree.core.identifiable": [[18, "module-torchtree.core.identifiable", false]], "torchtree.core.logger": [[20, "module-torchtree.core.logger", false]], "torchtree.core.model": [[21, "module-torchtree.core.model", false]], "torchtree.core.parameter": [[22, "module-torchtree.core.parameter", false]], "torchtree.core.parameter_encoder": [[23, "module-torchtree.core.parameter_encoder", false]], "torchtree.core.parameter_utils": [[24, "module-torchtree.core.parameter_utils", false]], "torchtree.core.parametric": [[25, "module-torchtree.core.parametric", false]], "torchtree.core.runnable": [[26, "module-torchtree.core.runnable", false]], "torchtree.core.serializable": [[27, "module-torchtree.core.serializable", false]], "torchtree.core.utils": [[28, "module-torchtree.core.utils", false]], "torchtree.distributions": [[35, "module-torchtree.distributions", false]], "torchtree.distributions.bayesian_bridge": [[29, "module-torchtree.distributions.bayesian_bridge", false]], "torchtree.distributions.ctmc_scale": [[30, "module-torchtree.distributions.ctmc_scale", false]], "torchtree.distributions.deterministic_normal": [[31, "module-torchtree.distributions.deterministic_normal", false]], "torchtree.distributions.distributions": [[32, "module-torchtree.distributions.distributions", false]], "torchtree.distributions.gmrf": [[33, "module-torchtree.distributions.gmrf", false]], "torchtree.distributions.gmrf_integrated": [[34, "module-torchtree.distributions.gmrf_integrated", false]], "torchtree.distributions.inverse_gamma": [[36, "module-torchtree.distributions.inverse_gamma", false]], "torchtree.distributions.joint_distribution": [[37, "module-torchtree.distributions.joint_distribution", false]], "torchtree.distributions.log_normal": [[38, "module-torchtree.distributions.log_normal", false]], "torchtree.distributions.multivariate_normal": [[39, "module-torchtree.distributions.multivariate_normal", false]], "torchtree.distributions.normal": [[40, "module-torchtree.distributions.normal", false]], "torchtree.distributions.one_on_x": [[41, "module-torchtree.distributions.one_on_x", false]], "torchtree.distributions.scale_mixture": [[42, "module-torchtree.distributions.scale_mixture", false]], "torchtree.distributions.transforms": [[43, "module-torchtree.distributions.transforms", false]], "torchtree.distributions.tree_prior": [[44, "module-torchtree.distributions.tree_prior", false]], "torchtree.evolution": [[52, "module-torchtree.evolution", false]], "torchtree.evolution.alignment": [[45, "module-torchtree.evolution.alignment", false]], "torchtree.evolution.attribute_pattern": [[46, "module-torchtree.evolution.attribute_pattern", false]], "torchtree.evolution.bdsk": [[47, "module-torchtree.evolution.bdsk", false]], "torchtree.evolution.birth_death": [[48, "module-torchtree.evolution.birth_death", false]], "torchtree.evolution.branch_model": [[49, "module-torchtree.evolution.branch_model", false]], "torchtree.evolution.coalescent": [[50, "module-torchtree.evolution.coalescent", false]], "torchtree.evolution.datatype": [[51, "module-torchtree.evolution.datatype", false]], "torchtree.evolution.io": [[53, "module-torchtree.evolution.io", false]], "torchtree.evolution.poisson_tree_likelihood": [[54, "module-torchtree.evolution.poisson_tree_likelihood", false]], "torchtree.evolution.rate_transform": [[55, "module-torchtree.evolution.rate_transform", false]], "torchtree.evolution.root_transform": [[56, "module-torchtree.evolution.root_transform", false]], "torchtree.evolution.site_model": [[57, "module-torchtree.evolution.site_model", false]], "torchtree.evolution.site_pattern": [[58, "module-torchtree.evolution.site_pattern", false]], "torchtree.evolution.substitution_model": [[63, "module-torchtree.evolution.substitution_model", false]], "torchtree.evolution.substitution_model.abstract": [[59, "module-torchtree.evolution.substitution_model.abstract", false]], "torchtree.evolution.substitution_model.amino_acid": [[60, "module-torchtree.evolution.substitution_model.amino_acid", false]], "torchtree.evolution.substitution_model.codon": [[61, "module-torchtree.evolution.substitution_model.codon", false]], "torchtree.evolution.substitution_model.general": [[62, "module-torchtree.evolution.substitution_model.general", false]], "torchtree.evolution.substitution_model.nucleotide": [[64, "module-torchtree.evolution.substitution_model.nucleotide", false]], "torchtree.evolution.taxa": [[65, "module-torchtree.evolution.taxa", false]], "torchtree.evolution.tree_height_transform": [[66, "module-torchtree.evolution.tree_height_transform", false]], "torchtree.evolution.tree_likelihood": [[67, "module-torchtree.evolution.tree_likelihood", false]], "torchtree.evolution.tree_model": [[68, "module-torchtree.evolution.tree_model", false]], "torchtree.evolution.tree_model_flexible": [[69, "module-torchtree.evolution.tree_model_flexible", false]], "torchtree.evolution.tree_regression": [[70, "module-torchtree.evolution.tree_regression", false]], "torchtree.inference": [[79, "module-torchtree.inference", false]], "torchtree.inference.hmc": [[75, "module-torchtree.inference.hmc", false]], "torchtree.inference.hmc.adaptation": [[72, "module-torchtree.inference.hmc.adaptation", false]], "torchtree.inference.hmc.hamiltonian": [[73, "module-torchtree.inference.hmc.hamiltonian", false]], "torchtree.inference.hmc.hmc": [[74, "module-torchtree.inference.hmc.hmc", false]], "torchtree.inference.hmc.integrator": [[76, "module-torchtree.inference.hmc.integrator", false]], "torchtree.inference.hmc.operator": [[77, "module-torchtree.inference.hmc.operator", false]], "torchtree.inference.hmc.stan_adaptation": [[78, "module-torchtree.inference.hmc.stan_adaptation", false]], "torchtree.inference.mcmc": [[81, "module-torchtree.inference.mcmc", false]], "torchtree.inference.mcmc.gmrf_block_updating": [[80, "module-torchtree.inference.mcmc.gmrf_block_updating", false]], "torchtree.inference.mcmc.mcmc": [[82, "module-torchtree.inference.mcmc.mcmc", false]], "torchtree.inference.mcmc.operator": [[83, "module-torchtree.inference.mcmc.operator", false]], "torchtree.inference.sampler": [[84, "module-torchtree.inference.sampler", false]], "torchtree.inference.utils": [[85, "module-torchtree.inference.utils", false]], "torchtree.nf": [[88, "module-torchtree.nf", false]], "torchtree.nf.energy_functions": [[86, "module-torchtree.nf.energy_functions", false]], "torchtree.nf.flow": [[87, "module-torchtree.nf.flow", false]], "torchtree.nf.planar": [[89, "module-torchtree.nf.planar", false]], "torchtree.nf.realnvp": [[90, "module-torchtree.nf.realnvp", false]], "torchtree.nn": [[91, "module-torchtree.nn", false]], "torchtree.nn.module": [[92, "module-torchtree.nn.module", false]], "torchtree.ops": [[94, "module-torchtree.ops", false]], "torchtree.ops.dual_averaging": [[93, "module-torchtree.ops.dual_averaging", false]], "torchtree.ops.smooth": [[95, "module-torchtree.ops.smooth", false]], "torchtree.ops.welford": [[96, "module-torchtree.ops.welford", false]], "torchtree.optim": [[98, "module-torchtree.optim", false]], "torchtree.optim.convergence": [[97, "module-torchtree.optim.convergence", false]], "torchtree.optim.lr_scheduler": [[99, "module-torchtree.optim.lr_scheduler", false]], "torchtree.optim.optimizer": [[100, "module-torchtree.optim.optimizer", false]], "torchtree.torchtree": [[101, "module-torchtree.torchtree", false]], "torchtree.typing": [[102, "module-torchtree.typing", false]], "torchtree.variational": [[104, "module-torchtree.variational", false]], "torchtree.variational.chi": [[103, "module-torchtree.variational.chi", false]], "torchtree.variational.kl": [[105, "module-torchtree.variational.kl", false]], "torchtree.variational.renyi": [[106, "module-torchtree.variational.renyi", false]], "transform (torchtree.core.parameter.transformedparameter attribute)": [[22, "torchtree.core.parameter.TransformedParameter.transform", false]], "transform() (torchtree.evolution.root_transform.rootparameter method)": [[56, "torchtree.evolution.root_transform.RootParameter.transform", false]], "transformedparameter (class in torchtree.core.parameter)": [[22, "torchtree.core.parameter.TransformedParameter", false]], "transitions (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[61, "torchtree.evolution.substitution_model.codon.MG94.transitions", false]], "tree (torchtree.evolution.branch_model.abstractclockmodel attribute)": [[49, "torchtree.evolution.branch_model.AbstractClockModel.tree", false]], "tree (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.tree", false]], "tree (torchtree.evolution.tree_height_transform.generalnodeheighttransform attribute)": [[66, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.tree", false]], "tree (torchtree.evolution.tree_model.abstracttreemodel attribute)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel.tree", false]], "tree_model (torchtree.core.logger.treelogger attribute)": [[20, "torchtree.core.logger.TreeLogger.tree_model", false]], "tree_model (torchtree.distributions.ctmc_scale.ctmcscale attribute)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.tree_model", false]], "tree_model (torchtree.distributions.gmrf.gmrf attribute)": [[33, "torchtree.distributions.gmrf.GMRF.tree_model", false]], "tree_model (torchtree.distributions.gmrf_integrated.gmrfgammaintegrated attribute)": [[34, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated.tree_model", false]], "tree_model (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[44, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.tree_model", false]], "tree_model (torchtree.evolution.bdsk.bdskmodel attribute)": [[47, "torchtree.evolution.bdsk.BDSKModel.tree_model", false]], "tree_model (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[48, "torchtree.evolution.birth_death.BirthDeathModel.tree_model", false]], "tree_model (torchtree.evolution.coalescent.abstractcoalescentmodel attribute)": [[50, "torchtree.evolution.coalescent.AbstractCoalescentModel.tree_model", false]], "tree_model (torchtree.evolution.coalescent.constantcoalescentintegratedmodel attribute)": [[50, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.tree_model", false]], "tree_model (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood attribute)": [[54, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.tree_model", false]], "tree_model (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.tree_model", false]], "treelikelihoodmodel (class in torchtree.evolution.tree_likelihood)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel", false]], "treelogger (class in torchtree.core.logger)": [[20, "torchtree.core.logger.TreeLogger", false]], "treemodel (class in torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.TreeModel", false]], "trilexpdiagonaltransform (class in torchtree.distributions.transforms)": [[43, "torchtree.distributions.transforms.TrilExpDiagonalTransform", false]], "triplets (torchtree.evolution.datatype.codondatatype attribute)": [[51, "torchtree.evolution.datatype.CodonDataType.triplets", false]], "tune() (torchtree.inference.hmc.operator.hmcoperator method)": [[77, "torchtree.inference.hmc.operator.HMCOperator.tune", false]], "tune() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.tune", false]], "tuning_parameter (torchtree.inference.hmc.operator.hmcoperator property)": [[77, "torchtree.inference.hmc.operator.HMCOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator property)": [[80, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.operator.dirichletoperator property)": [[83, "torchtree.inference.mcmc.operator.DirichletOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.operator.mcmcoperator property)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.operator.scaleroperator property)": [[83, "torchtree.inference.mcmc.operator.ScalerOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.operator.slidingwindowoperator property)": [[83, "torchtree.inference.mcmc.operator.SlidingWindowOperator.tuning_parameter", false]], "u (torchtree.nf.planar.planartransform attribute)": [[89, "torchtree.nf.planar.PlanarTransform.u", false]], "u_hat() (torchtree.nf.planar.planartransform method)": [[89, "torchtree.nf.planar.PlanarTransform.u_hat", false]], "univariatediscretizedsitemodel (class in torchtree.evolution.site_model)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel", false]], "unrootedtreemodel (class in torchtree.evolution.tree_model)": [[68, "torchtree.evolution.tree_model.UnRootedTreeModel", false]], "update() (torchtree.core.parameter.catparameter method)": [[22, "torchtree.core.parameter.CatParameter.update", false]], "update_bounds() (torchtree.evolution.tree_height_transform.generalnodeheighttransform method)": [[66, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.update_bounds", false]], "update_leaf_heights() (torchtree.evolution.tree_model.timetreemodel method)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.update_leaf_heights", false]], "update_mass_matrices() (torchtree.inference.hmc.operator.hmcoperator method)": [[77, "torchtree.inference.hmc.operator.HMCOperator.update_mass_matrices", false]], "update_node_heights() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[68, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.update_node_heights", false]], "update_parameters() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.update_parameters", false]], "update_rates() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[57, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.update_rates", false]], "update_rates_probs() (torchtree.evolution.site_model.invariantsitemodel method)": [[57, "torchtree.evolution.site_model.InvariantSiteModel.update_rates_probs", false]], "update_traversals() (torchtree.evolution.tree_model.abstracttreemodel method)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel.update_traversals", false]], "update_traversals() (torchtree.evolution.tree_model.timetreemodel method)": [[68, "torchtree.evolution.tree_model.TimeTreeModel.update_traversals", false]], "upper (torchtree.cli.utils.constraint attribute)": [[14, "torchtree.cli.utils.CONSTRAINT.UPPER", false]], "use_tip_states (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[67, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.use_tip_states", false]], "validate() (in module torchtree.core.utils)": [[28, "torchtree.core.utils.validate", false]], "variance() (torchtree.ops.welford.welfordvariance method)": [[96, "torchtree.ops.welford.WelfordVariance.variance", false]], "variance_estimator (torchtree.inference.hmc.adaptation.massmatrixadaptor attribute)": [[72, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.variance_estimator", false]], "variance_estimator2 (torchtree.inference.hmc.adaptation.massmatrixadaptor attribute)": [[72, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.variance_estimator2", false]], "variationalconvergence (class in torchtree.optim.convergence)": [[97, "torchtree.optim.convergence.VariationalConvergence", false]], "viewparameter (class in torchtree.core.parameter)": [[22, "torchtree.core.parameter.ViewParameter", false]], "vr (class in torchtree.variational.renyi)": [[106, "torchtree.variational.renyi.VR", false]], "w (torchtree.nf.planar.planartransform attribute)": [[89, "torchtree.nf.planar.PlanarTransform.w", false]], "w1() (in module torchtree.nf.energy_functions)": [[86, "torchtree.nf.energy_functions.w1", false]], "w2() (in module torchtree.nf.energy_functions)": [[86, "torchtree.nf.energy_functions.w2", false]], "w3() (in module torchtree.nf.energy_functions)": [[86, "torchtree.nf.energy_functions.w3", false]], "wag (class in torchtree.evolution.substitution_model.amino_acid)": [[60, "torchtree.evolution.substitution_model.amino_acid.WAG", false]], "warmup_adaptor (torchtree.inference.hmc.hmc.hmc attribute)": [[74, "torchtree.inference.hmc.hmc.HMC.warmup_adaptor", false]], "warmupadaptation (class in torchtree.inference.hmc.adaptation)": [[72, "torchtree.inference.hmc.adaptation.WarmupAdaptation", false]], "weibullsitemodel (class in torchtree.evolution.site_model)": [[57, "torchtree.evolution.site_model.WeibullSiteModel", false]], "weight (torchtree.distributions.transforms.lineartransform attribute)": [[43, "torchtree.distributions.transforms.LinearTransform.weight", false]], "weight (torchtree.inference.mcmc.operator.mcmcoperator attribute)": [[83, "torchtree.inference.mcmc.operator.MCMCOperator.weight", false]], "weights (torchtree.distributions.gmrf.gmrf attribute)": [[33, "torchtree.distributions.gmrf.GMRF.weights", false]], "weights (torchtree.variational.kl.selbo attribute)": [[105, "torchtree.variational.kl.SELBO.weights", false]], "welfordvariance (class in torchtree.ops.welford)": [[96, "torchtree.ops.welford.WelfordVariance", false]], "wrapper() (torchtree.core.utils.alternativeattributeerror class method)": [[28, "torchtree.core.utils.AlternativeAttributeError.wrapper", false]], "write_newick() (torchtree.evolution.tree_model.abstracttreemodel method)": [[68, "torchtree.evolution.tree_model.AbstractTreeModel.write_newick", false]], "write_newick() (torchtree.evolution.tree_model.treemodel method)": [[68, "torchtree.evolution.tree_model.TreeModel.write_newick", false]], "writer (torchtree.core.logger.logger attribute)": [[20, "torchtree.core.logger.Logger.writer", false]], "x (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[29, "torchtree.distributions.bayesian_bridge.BayesianBridge.x", false]], "x (torchtree.distributions.ctmc_scale.ctmcscale attribute)": [[30, "torchtree.distributions.ctmc_scale.CTMCScale.x", false]], "x (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[42, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.x", false]], "x (torchtree.nf.energy_functions.energyfunctionmodel attribute)": [[86, "torchtree.nf.energy_functions.EnergyFunctionModel.x", false]], "x (torchtree.nf.flow.normalizingflow attribute)": [[87, "torchtree.nf.flow.NormalizingFlow.x", false]], "x (torchtree.nf.realnvp.realnvp attribute)": [[90, "torchtree.nf.realnvp.RealNVP.x", false]], "x (torchtree.nn.module.module attribute)": [[92, "torchtree.nn.module.Module.x", false]], "x (torchtree.ops.dual_averaging.dualaveraging attribute)": [[93, "torchtree.ops.dual_averaging.DualAveraging.x", false]], "zero_or_path() (in module torchtree.cli.argparse_utils)": [[1, "torchtree.cli.argparse_utils.zero_or_path", false]]}, "objects": {"": [[71, 0, 0, "-", "torchtree"]], "torchtree": [[5, 0, 0, "-", "cli"], [19, 0, 0, "-", "core"], [35, 0, 0, "-", "distributions"], [52, 0, 0, "-", "evolution"], [79, 0, 0, "-", "inference"], [88, 0, 0, "-", "nf"], [91, 0, 0, "-", "nn"], [94, 0, 0, "-", "ops"], [98, 0, 0, "-", "optim"], [101, 0, 0, "-", "torchtree"], [102, 0, 0, "-", "typing"], [104, 0, 0, "-", "variational"]], "torchtree.cli": [[5, 1, 1, "", "PLUGIN_MANAGER"], [0, 0, 0, "-", "advi"], [1, 0, 0, "-", "argparse_utils"], [2, 0, 0, "-", "cli"], [3, 0, 0, "-", "evolution"], [4, 0, 0, "-", "hmc"], [6, 0, 0, "-", "jacobians"], [7, 0, 0, "-", "loggers"], [8, 0, 0, "-", "map"], [9, 0, 0, "-", "mcmc"], [10, 0, 0, "-", "operators"], [11, 0, 0, "-", "plugin"], [12, 0, 0, "-", "plugin_manager"], [13, 0, 0, "-", "priors"], [14, 0, 0, "-", "utils"]], "torchtree.cli.advi": [[0, 2, 1, "", "apply_affine_transform"], [0, 2, 1, "", "apply_exp_transform"], [0, 2, 1, "", "apply_sigmoid_transformed"], [0, 2, 1, "", "apply_simplex_transform"], [0, 2, 1, "", "apply_transforms_for_fullrank"], [0, 2, 1, "", "build_advi"], [0, 2, 1, "", "create_advi"], [0, 2, 1, "", "create_flexible_variational"], [0, 2, 1, "", "create_fullrank"], [0, 2, 1, "", "create_fullrank_from_meanfield"], [0, 2, 1, "", "create_gamma_distribution"], [0, 2, 1, "", "create_logger"], [0, 2, 1, "", "create_meanfield"], [0, 2, 1, "", "create_normal_distribution"], [0, 2, 1, "", "create_realnp_distribution"], [0, 2, 1, "", "create_realnvp"], [0, 2, 1, "", "create_sampler"], [0, 2, 1, "", "create_tril"], [0, 2, 1, "", "create_variational_model"], [0, 2, 1, "", "create_variational_parser"], [0, 2, 1, "", "create_weibull_distribution"], [0, 2, 1, "", "gather_parameters"], [0, 1, 1, "", "logger"]], "torchtree.cli.argparse_utils": [[1, 2, 1, "", "list_of_float"], [1, 2, 1, "", "list_or_int"], [1, 2, 1, "", "str_or_float"], [1, 2, 1, "", "zero_or_path"]], "torchtree.cli.cli": [[2, 2, 1, "", "create_show_parser"], [2, 2, 1, "", "main"]], "torchtree.cli.evolution": [[3, 1, 1, "", "COALESCENT_PIECEWISE"], [3, 2, 1, "", "add_birth_death"], [3, 2, 1, "", "add_coalescent"], [3, 2, 1, "", "build_alignment"], [3, 2, 1, "", "check_arguments"], [3, 2, 1, "", "create_alignment"], [3, 2, 1, "", "create_bd_prior"], [3, 2, 1, "", "create_bdsk"], [3, 2, 1, "", "create_bdsk_prior"], [3, 2, 1, "", "create_birth_death"], [3, 2, 1, "", "create_branch_model"], [3, 2, 1, "", "create_clock_prior"], [3, 2, 1, "", "create_coalesent"], [3, 2, 1, "", "create_constant_bd_prior"], [3, 2, 1, "", "create_constant_birth_death"], [3, 2, 1, "", "create_data_type"], [3, 2, 1, "", "create_evolution_joint"], [3, 2, 1, "", "create_evolution_parser"], [3, 2, 1, "", "create_evolution_priors"], [3, 2, 1, "", "create_general_data_type"], [3, 2, 1, "", "create_poisson_evolution_joint"], [3, 2, 1, "", "create_poisson_tree_likelihood"], [3, 2, 1, "", "create_site_model"], [3, 2, 1, "", "create_site_model_srd06_mus"], [3, 2, 1, "", "create_site_pattern"], [3, 2, 1, "", "create_substitution_model"], [3, 2, 1, "", "create_substitution_model_priors"], [3, 2, 1, "", "create_taxa"], [3, 2, 1, "", "create_time_tree_prior"], [3, 2, 1, "", "create_tree_likelihood"], [3, 2, 1, "", "create_tree_likelihood_general"], [3, 2, 1, "", "create_tree_likelihood_single"], [3, 2, 1, "", "create_tree_model"], [3, 2, 1, "", "create_ucln_prior"], [3, 2, 1, "", "distribution_type"], [3, 2, 1, "", "get_engine"], [3, 2, 1, "", "is_float"], [3, 1, 1, "", "logger"], [3, 2, 1, "", "parse_distribution"], [3, 2, 1, "", "run_tree_regression"]], "torchtree.cli.hmc": [[4, 2, 1, "", "build_hmc"], [4, 2, 1, "", "create_hmc"], [4, 2, 1, "", "create_hmc_operator"], [4, 2, 1, "", "create_hmc_parser"], [4, 2, 1, "", "create_stan_windowed_adaptation"]], "torchtree.cli.jacobians": [[6, 2, 1, "", "create_jacobians"]], "torchtree.cli.loggers": [[7, 2, 1, "", "create_loggers"]], "torchtree.cli.map": [[8, 2, 1, "", "build_optimizer"], [8, 2, 1, "", "create_logger"], [8, 2, 1, "", "create_map_parser"], [8, 2, 1, "", "create_optimizer"], [8, 2, 1, "", "create_tree_logger"]], "torchtree.cli.mcmc": [[9, 2, 1, "", "build_mcmc"], [9, 2, 1, "", "create_mcmc"], [9, 2, 1, "", "create_mcmc_parser"]], "torchtree.cli.operators": [[10, 2, 1, "", "create_block_updating_operator"], [10, 2, 1, "", "create_scaler_operator"], [10, 2, 1, "", "create_sliding_window_operator"]], "torchtree.cli.plugin": [[11, 3, 1, "", "Plugin"]], "torchtree.cli.plugin.Plugin": [[11, 4, 1, "", "load_arguments"], [11, 4, 1, "", "process_all"], [11, 4, 1, "", "process_coalescent"], [11, 4, 1, "", "process_tree_likelihood"]], "torchtree.cli.plugin_manager": [[12, 3, 1, "", "PluginManager"]], "torchtree.cli.plugin_manager.PluginManager": [[12, 4, 1, "", "disable_plugins"], [12, 4, 1, "", "load_arguments"], [12, 4, 1, "", "load_plugins"], [12, 4, 1, "", "plugins"]], "torchtree.cli.priors": [[13, 2, 1, "", "create_clock_horseshoe_prior"], [13, 2, 1, "", "create_one_on_x_prior"]], "torchtree.cli.utils": [[14, 3, 1, "", "CONSTRAINT"], [14, 1, 1, "", "CONSTRAINT_PREFIX"], [14, 2, 1, "", "convert_date_to_real"], [14, 2, 1, "", "length_of_tensor_in_dict_parameter"], [14, 2, 1, "", "make_unconstrained"], [14, 2, 1, "", "read_dates_from_csv"], [14, 2, 1, "", "remove_constraints"]], "torchtree.cli.utils.CONSTRAINT": [[14, 5, 1, "", "LOWER"], [14, 5, 1, "", "SIMPLEX"], [14, 5, 1, "", "UPPER"]], "torchtree.core": [[15, 0, 0, "-", "abstractparameter"], [16, 0, 0, "-", "classproperty_decorator"], [17, 0, 0, "-", "container"], [18, 0, 0, "-", "identifiable"], [20, 0, 0, "-", "logger"], [21, 0, 0, "-", "model"], [22, 0, 0, "-", "parameter"], [23, 0, 0, "-", "parameter_encoder"], [24, 0, 0, "-", "parameter_utils"], [25, 0, 0, "-", "parametric"], [26, 0, 0, "-", "runnable"], [27, 0, 0, "-", "serializable"], [28, 0, 0, "-", "utils"]], "torchtree.core.abstractparameter": [[15, 3, 1, "", "AbstractParameter"], [15, 3, 1, "", "Device"]], "torchtree.core.abstractparameter.AbstractParameter": [[15, 4, 1, "", "add_parameter_listener"], [15, 6, 1, "", "device"], [15, 4, 1, "", "dim"], [15, 6, 1, "", "dtype"], [15, 4, 1, "", "fire_parameter_changed"], [15, 4, 1, "", "parameters"], [15, 6, 1, "", "requires_grad"], [15, 6, 1, "", "shape"], [15, 6, 1, "", "tensor"]], "torchtree.core.abstractparameter.Device": [[15, 4, 1, "", "cpu"], [15, 4, 1, "", "cuda"], [15, 6, 1, "", "device"], [15, 4, 1, "", "to"]], "torchtree.core.classproperty_decorator": [[16, 3, 1, "", "classproperty"]], "torchtree.core.container": [[17, 3, 1, "", "Container"]], "torchtree.core.container.Container": [[17, 4, 1, "", "callables"], [17, 4, 1, "", "from_json"], [17, 4, 1, "", "handle_model_changed"], [17, 4, 1, "", "handle_parameter_changed"], [17, 4, 1, "", "params"]], "torchtree.core.identifiable": [[18, 3, 1, "", "Identifiable"]], "torchtree.core.identifiable.Identifiable": [[18, 6, 1, "", "id"]], "torchtree.core.logger": [[20, 3, 1, "", "CSV"], [20, 3, 1, "", "ContainerLogger"], [20, 3, 1, "", "Dumper"], [20, 3, 1, "", "Logger"], [20, 3, 1, "", "LoggerInterface"], [20, 3, 1, "", "TreeLogger"]], "torchtree.core.logger.CSV": [[20, 5, 1, "", "file_name"], [20, 4, 1, "", "from_json"], [20, 5, 1, "", "kwargs"], [20, 5, 1, "", "objs"], [20, 4, 1, "", "run"]], "torchtree.core.logger.ContainerLogger": [[20, 4, 1, "", "close"], [20, 5, 1, "", "container"], [20, 5, 1, "", "every"], [20, 4, 1, "", "from_json"], [20, 4, 1, "", "initialize"], [20, 5, 1, "", "inputs"], [20, 4, 1, "", "log"], [20, 5, 1, "", "sample"]], "torchtree.core.logger.Dumper": [[20, 4, 1, "", "from_json"], [20, 5, 1, "", "kwargs"], [20, 5, 1, "", "parameters"], [20, 4, 1, "", "run"]], "torchtree.core.logger.Logger": [[20, 4, 1, "", "close"], [20, 5, 1, "", "every"], [20, 5, 1, "", "f"], [20, 4, 1, "", "from_json"], [20, 4, 1, "", "initialize"], [20, 5, 1, "", "kwargs"], [20, 4, 1, "", "log"], [20, 5, 1, "", "objs"], [20, 5, 1, "", "sample"], [20, 5, 1, "", "writer"]], "torchtree.core.logger.LoggerInterface": [[20, 4, 1, "", "close"], [20, 4, 1, "", "initialize"], [20, 4, 1, "", "log"], [20, 4, 1, "", "run"]], "torchtree.core.logger.TreeLogger": [[20, 4, 1, "", "close"], [20, 5, 1, "", "every"], [20, 5, 1, "", "f"], [20, 5, 1, "", "file_name"], [20, 4, 1, "", "from_json"], [20, 4, 1, "", "initialize"], [20, 5, 1, "", "kwargs"], [20, 4, 1, "", "log"], [20, 5, 1, "", "sample"], [20, 5, 1, "", "tree_model"]], "torchtree.core.model": [[21, 3, 1, "", "CallableModel"], [21, 3, 1, "", "Model"]], "torchtree.core.model.CallableModel": [[21, 4, 1, "", "handle_model_changed"], [21, 4, 1, "", "handle_parameter_changed"], [21, 5, 1, "", "lp"], [21, 5, 1, "", "lp_needs_update"]], "torchtree.core.model.Model": [[21, 4, 1, "", "add_model_listener"], [21, 4, 1, "", "add_parameter_listener"], [21, 4, 1, "", "cpu"], [21, 4, 1, "", "cuda"], [21, 4, 1, "", "fire_model_changed"], [21, 5, 1, "", "listeners"], [21, 4, 1, "", "models"], [21, 4, 1, "", "remove_model_listener"], [21, 4, 1, "", "remove_parameter_listener"], [21, 6, 1, "", "sample_shape"], [21, 6, 1, "", "tag"], [21, 4, 1, "", "to"]], "torchtree.core.parameter": [[22, 3, 1, "", "CatParameter"], [22, 3, 1, "", "ModuleParameter"], [22, 3, 1, "", "Parameter"], [22, 3, 1, "", "TransformedParameter"], [22, 3, 1, "", "ViewParameter"]], "torchtree.core.parameter.CatParameter": [[22, 4, 1, "", "add_parameter_listener"], [22, 4, 1, "", "cpu"], [22, 4, 1, "", "cuda"], [22, 6, 1, "", "device"], [22, 4, 1, "", "fire_parameter_changed"], [22, 4, 1, "", "from_json"], [22, 4, 1, "", "handle_model_changed"], [22, 4, 1, "", "handle_parameter_changed"], [22, 6, 1, "", "requires_grad"], [22, 6, 1, "", "tensor"], [22, 4, 1, "", "to"], [22, 4, 1, "", "update"]], "torchtree.core.parameter.ModuleParameter": [[22, 4, 1, "", "add_parameter_listener"], [22, 4, 1, "", "cpu"], [22, 4, 1, "", "cuda"], [22, 4, 1, "", "fire_parameter_changed"], [22, 4, 1, "", "from_json"], [22, 4, 1, "", "handle_model_changed"], [22, 4, 1, "", "handle_parameter_changed"], [22, 5, 1, "", "listeners"], [22, 5, 1, "", "module"], [22, 5, 1, "", "need_update"], [22, 4, 1, "", "parameters"], [22, 6, 1, "", "requires_grad"], [22, 6, 1, "", "sample_shape"], [22, 6, 1, "", "shape"], [22, 6, 1, "", "tensor"], [22, 4, 1, "", "to"]], "torchtree.core.parameter.Parameter": [[22, 4, 1, "", "add_parameter_listener"], [22, 4, 1, "", "clone"], [22, 4, 1, "", "copy_"], [22, 4, 1, "", "cpu"], [22, 4, 1, "", "cuda"], [22, 4, 1, "", "detach"], [22, 4, 1, "", "fire_parameter_changed"], [22, 4, 1, "", "from_json"], [22, 6, 1, "", "grad"], [22, 6, 1, "", "grad_fn"], [22, 4, 1, "", "json_factory"], [22, 5, 1, "", "listeners"], [22, 6, 1, "", "requires_grad"], [22, 4, 1, "", "size"], [22, 6, 1, "", "tensor"], [22, 2, 1, "id6", "to"]], "torchtree.core.parameter.TransformedParameter": [[22, 4, 1, "", "add_parameter_listener"], [22, 4, 1, "", "cpu"], [22, 4, 1, "", "cuda"], [22, 4, 1, "", "fire_parameter_changed"], [22, 4, 1, "", "from_json"], [22, 4, 1, "", "handle_model_changed"], [22, 4, 1, "", "handle_parameter_changed"], [22, 5, 1, "", "listeners"], [22, 5, 1, "", "need_update"], [22, 4, 1, "", "parameters"], [22, 6, 1, "", "requires_grad"], [22, 6, 1, "", "sample_shape"], [22, 6, 1, "", "shape"], [22, 6, 1, "", "tensor"], [22, 4, 1, "", "to"], [22, 5, 1, "", "transform"]], "torchtree.core.parameter.ViewParameter": [[22, 4, 1, "", "add_parameter_listener"], [22, 4, 1, "", "assign"], [22, 4, 1, "", "clone"], [22, 4, 1, "", "cpu"], [22, 4, 1, "", "cuda"], [22, 6, 1, "", "dtype"], [22, 4, 1, "", "fire_parameter_changed"], [22, 4, 1, "", "from_json"], [22, 4, 1, "", "handle_parameter_changed"], [22, 5, 1, "", "indices"], [22, 4, 1, "", "json_factory"], [22, 5, 1, "", "listeners"], [22, 5, 1, "", "parameter"], [22, 6, 1, "", "requires_grad"], [22, 6, 1, "", "shape"], [22, 6, 1, "", "tensor"], [22, 4, 1, "", "to"]], "torchtree.core.parameter_encoder": [[23, 3, 1, "", "ParameterEncoder"]], "torchtree.core.parameter_encoder.ParameterEncoder": [[23, 4, 1, "", "default"]], "torchtree.core.parameter_utils": [[24, 2, 1, "", "pack_tensor"], [24, 2, 1, "", "save_parameters"]], "torchtree.core.parametric": [[25, 3, 1, "", "ModelListener"], [25, 3, 1, "", "ParameterListener"], [25, 3, 1, "", "Parametric"]], "torchtree.core.parametric.ModelListener": [[25, 4, 1, "", "handle_model_changed"]], "torchtree.core.parametric.ParameterListener": [[25, 4, 1, "", "handle_parameter_changed"]], "torchtree.core.parametric.Parametric": [[25, 4, 1, "", "parameters"], [25, 4, 1, "", "register_model"], [25, 4, 1, "", "register_parameter"]], "torchtree.core.runnable": [[26, 3, 1, "", "Runnable"]], "torchtree.core.runnable.Runnable": [[26, 4, 1, "", "run"]], "torchtree.core.serializable": [[27, 3, 1, "", "JSONSerializable"]], "torchtree.core.serializable.JSONSerializable": [[27, 4, 1, "", "from_json"], [27, 4, 1, "", "from_json_safe"]], "torchtree.core.utils": [[28, 7, 1, "", "AlternativeAttributeError"], [28, 7, 1, "", "JSONParseError"], [28, 1, 1, "", "REGISTERED_CLASSES"], [28, 3, 1, "", "SignalHandler"], [28, 3, 1, "", "TensorDecoder"], [28, 3, 1, "", "TensorEncoder"], [28, 2, 1, "", "as_tensor"], [28, 2, 1, "", "expand_plates"], [28, 2, 1, "", "get_class"], [28, 2, 1, "", "package_contents"], [28, 2, 1, "", "print_graph"], [28, 2, 1, "", "process_object"], [28, 2, 1, "", "process_object_with_key"], [28, 2, 1, "", "process_objects"], [28, 2, 1, "", "register_class"], [28, 2, 1, "", "remove_comments"], [28, 2, 1, "", "replace_star_with_str"], [28, 2, 1, "", "replace_wildcard_with_str"], [28, 2, 1, "", "string_to_list_index"], [28, 2, 1, "", "tensor_rand"], [28, 2, 1, "", "update_parameters"], [28, 2, 1, "", "validate"]], "torchtree.core.utils.AlternativeAttributeError": [[28, 4, 1, "", "wrapper"]], "torchtree.core.utils.SignalHandler": [[28, 4, 1, "", "exit"], [28, 5, 1, "", "stop"]], "torchtree.core.utils.TensorDecoder": [[28, 4, 1, "", "object_hook"]], "torchtree.core.utils.TensorEncoder": [[28, 4, 1, "", "default"]], "torchtree.distributions": [[29, 0, 0, "-", "bayesian_bridge"], [30, 0, 0, "-", "ctmc_scale"], [31, 0, 0, "-", "deterministic_normal"], [32, 0, 0, "-", "distributions"], [33, 0, 0, "-", "gmrf"], [34, 0, 0, "-", "gmrf_integrated"], [36, 0, 0, "-", "inverse_gamma"], [37, 0, 0, "-", "joint_distribution"], [38, 0, 0, "-", "log_normal"], [39, 0, 0, "-", "multivariate_normal"], [40, 0, 0, "-", "normal"], [41, 0, 0, "-", "one_on_x"], [42, 0, 0, "-", "scale_mixture"], [43, 0, 0, "-", "transforms"], [44, 0, 0, "-", "tree_prior"]], "torchtree.distributions.bayesian_bridge": [[29, 3, 1, "", "BayesianBridge"], [29, 2, 1, "", "process_object_number"]], "torchtree.distributions.bayesian_bridge.BayesianBridge": [[29, 5, 1, "", "alpha"], [29, 4, 1, "", "from_json"], [29, 4, 1, "", "handle_model_changed"], [29, 4, 1, "", "json_factory"], [29, 5, 1, "", "local_scale"], [29, 5, 1, "", "scale"], [29, 5, 1, "", "slab"], [29, 5, 1, "", "x"]], "torchtree.distributions.ctmc_scale": [[30, 3, 1, "", "CTMCScale"]], "torchtree.distributions.ctmc_scale.CTMCScale": [[30, 4, 1, "", "cpu"], [30, 4, 1, "", "cuda"], [30, 4, 1, "", "from_json"], [30, 4, 1, "", "json_factory"], [30, 5, 1, "", "log_gamma_one_half"], [30, 5, 1, "", "shape"], [30, 4, 1, "", "to"], [30, 5, 1, "", "tree_model"], [30, 5, 1, "", "x"]], "torchtree.distributions.deterministic_normal": [[31, 3, 1, "", "DeterministicNormal"]], "torchtree.distributions.deterministic_normal.DeterministicNormal": [[31, 6, 1, "", "batch_shape"], [31, 4, 1, "", "entropy"], [31, 5, 1, "", "eps"], [31, 6, 1, "", "event_shape"], [31, 4, 1, "", "from_json"], [31, 4, 1, "", "handle_model_changed"], [31, 4, 1, "", "json_factory"], [31, 5, 1, "", "loc"], [31, 4, 1, "", "log_prob"], [31, 4, 1, "", "rsample"], [31, 4, 1, "", "sample"], [31, 5, 1, "", "scale"]], "torchtree.distributions.distributions": [[32, 3, 1, "", "Distribution"], [32, 3, 1, "", "DistributionModel"]], "torchtree.distributions.distributions.Distribution": [[32, 6, 1, "", "batch_shape"], [32, 5, 1, "", "dict_parameters"], [32, 5, 1, "", "dist"], [32, 6, 1, "", "distribution"], [32, 5, 1, "", "distribution_parameters"], [32, 4, 1, "", "entropy"], [32, 6, 1, "", "event_shape"], [32, 4, 1, "", "from_json"], [32, 4, 1, "", "json_factory"], [32, 5, 1, "", "kwargs"], [32, 4, 1, "", "log_prob"], [32, 4, 1, "", "rsample"], [32, 4, 1, "", "sample"]], "torchtree.distributions.distributions.DistributionModel": [[32, 4, 1, "", "entropy"], [32, 4, 1, "", "log_prob"], [32, 4, 1, "", "rsample"], [32, 4, 1, "", "sample"]], "torchtree.distributions.gmrf": [[33, 3, 1, "", "GMRF"], [33, 3, 1, "", "GMRFCovariate"]], "torchtree.distributions.gmrf.GMRF": [[33, 5, 1, "", "field"], [33, 4, 1, "", "from_json"], [33, 5, 1, "", "precision"], [33, 4, 1, "", "precision_matrix"], [33, 5, 1, "", "rescale"], [33, 5, 1, "", "tree_model"], [33, 5, 1, "", "weights"]], "torchtree.distributions.gmrf.GMRFCovariate": [[33, 5, 1, "", "beta"], [33, 5, 1, "", "covariates"], [33, 4, 1, "", "from_json"]], "torchtree.distributions.gmrf_integrated": [[34, 3, 1, "", "GMRFGammaIntegrated"]], "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated": [[34, 5, 1, "", "constant_term"], [34, 5, 1, "", "field"], [34, 4, 1, "", "from_json"], [34, 5, 1, "", "tree_model"]], "torchtree.distributions.inverse_gamma": [[36, 3, 1, "", "InverseGamma"]], "torchtree.distributions.inverse_gamma.InverseGamma": [[36, 5, 1, "", "arg_constraints"], [36, 6, 1, "", "concentration"], [36, 4, 1, "", "expand"], [36, 5, 1, "", "has_rsample"], [36, 6, 1, "", "rate"], [36, 5, 1, "", "support"]], "torchtree.distributions.joint_distribution": [[37, 3, 1, "", "JointDistributionModel"]], "torchtree.distributions.joint_distribution.JointDistributionModel": [[37, 4, 1, "", "entropy"], [37, 4, 1, "", "from_json"], [37, 4, 1, "", "handle_parameter_changed"], [37, 4, 1, "", "log_prob"], [37, 4, 1, "", "rsample"], [37, 4, 1, "", "sample"]], "torchtree.distributions.log_normal": [[38, 3, 1, "", "LogNormal"]], "torchtree.distributions.multivariate_normal": [[39, 3, 1, "", "MultivariateNormal"]], "torchtree.distributions.multivariate_normal.MultivariateNormal": [[39, 6, 1, "", "batch_shape"], [39, 4, 1, "", "entropy"], [39, 6, 1, "", "event_shape"], [39, 4, 1, "", "from_json"], [39, 5, 1, "", "loc"], [39, 4, 1, "", "log_prob"], [39, 4, 1, "", "rsample"], [39, 4, 1, "", "sample"]], "torchtree.distributions.normal": [[40, 3, 1, "", "Normal"]], "torchtree.distributions.one_on_x": [[41, 3, 1, "", "OneOnX"]], "torchtree.distributions.one_on_x.OneOnX": [[41, 5, 1, "", "arg_constraints"], [41, 4, 1, "", "log_prob"], [41, 5, 1, "", "support"]], "torchtree.distributions.scale_mixture": [[42, 3, 1, "", "ScaleMixtureNormal"]], "torchtree.distributions.scale_mixture.ScaleMixtureNormal": [[42, 4, 1, "", "from_json"], [42, 5, 1, "", "gobal_scale"], [42, 4, 1, "", "handle_model_changed"], [42, 4, 1, "", "json_factory"], [42, 5, 1, "", "loc"], [42, 5, 1, "", "local_scale"], [42, 5, 1, "", "slab"], [42, 5, 1, "", "x"]], "torchtree.distributions.transforms": [[43, 3, 1, "", "ConvexCombinationTransform"], [43, 3, 1, "", "CumSumExpTransform"], [43, 3, 1, "", "CumSumSoftPlusTransform"], [43, 3, 1, "", "CumSumTransform"], [43, 3, 1, "", "LinearTransform"], [43, 3, 1, "", "LogTransform"], [43, 3, 1, "", "SoftPlusTransform"], [43, 3, 1, "", "TrilExpDiagonalTransform"]], "torchtree.distributions.transforms.ConvexCombinationTransform": [[43, 5, 1, "", "codomain"], [43, 5, 1, "", "domain"], [43, 4, 1, "", "log_abs_det_jacobian"]], "torchtree.distributions.transforms.CumSumExpTransform": [[43, 5, 1, "", "bijective"], [43, 5, 1, "", "codomain"], [43, 5, 1, "", "domain"], [43, 4, 1, "", "log_abs_det_jacobian"], [43, 5, 1, "", "sign"]], "torchtree.distributions.transforms.CumSumSoftPlusTransform": [[43, 5, 1, "", "bijective"], [43, 5, 1, "", "codomain"], [43, 5, 1, "", "domain"], [43, 4, 1, "", "log_abs_det_jacobian"], [43, 5, 1, "", "sign"]], "torchtree.distributions.transforms.CumSumTransform": [[43, 5, 1, "", "bijective"], [43, 5, 1, "", "codomain"], [43, 5, 1, "", "domain"], [43, 4, 1, "", "log_abs_det_jacobian"], [43, 5, 1, "", "sign"]], "torchtree.distributions.transforms.LinearTransform": [[43, 5, 1, "", "bias"], [43, 5, 1, "", "codomain"], [43, 5, 1, "", "domain"], [43, 5, 1, "", "weight"]], "torchtree.distributions.transforms.LogTransform": [[43, 5, 1, "", "bijective"], [43, 5, 1, "", "codomain"], [43, 5, 1, "", "domain"], [43, 4, 1, "", "log_abs_det_jacobian"], [43, 5, 1, "", "sign"]], "torchtree.distributions.transforms.SoftPlusTransform": [[43, 5, 1, "", "bijective"], [43, 5, 1, "", "codomain"], [43, 5, 1, "", "domain"], [43, 4, 1, "", "log_abs_det_jacobian"], [43, 5, 1, "", "sign"]], "torchtree.distributions.transforms.TrilExpDiagonalTransform": [[43, 5, 1, "", "bijective"], [43, 4, 1, "", "log_abs_det_jacobian"], [43, 5, 1, "", "sign"]], "torchtree.distributions.tree_prior": [[44, 3, 1, "", "CompoundGammaDirichletPrior"]], "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior": [[44, 5, 1, "", "alpha"], [44, 5, 1, "", "c"], [44, 4, 1, "", "from_json"], [44, 4, 1, "", "handle_parameter_changed"], [44, 5, 1, "", "rate"], [44, 5, 1, "", "shape"], [44, 5, 1, "", "tree_model"]], "torchtree.evolution": [[45, 0, 0, "-", "alignment"], [46, 0, 0, "-", "attribute_pattern"], [47, 0, 0, "-", "bdsk"], [48, 0, 0, "-", "birth_death"], [49, 0, 0, "-", "branch_model"], [50, 0, 0, "-", "coalescent"], [51, 0, 0, "-", "datatype"], [53, 0, 0, "-", "io"], [54, 0, 0, "-", "poisson_tree_likelihood"], [55, 0, 0, "-", "rate_transform"], [56, 0, 0, "-", "root_transform"], [57, 0, 0, "-", "site_model"], [58, 0, 0, "-", "site_pattern"], [63, 0, 0, "-", "substitution_model"], [65, 0, 0, "-", "taxa"], [66, 0, 0, "-", "tree_height_transform"], [67, 0, 0, "-", "tree_likelihood"], [68, 0, 0, "-", "tree_model"], [69, 0, 0, "-", "tree_model_flexible"], [70, 0, 0, "-", "tree_regression"]], "torchtree.evolution.alignment": [[45, 3, 1, "", "Alignment"], [45, 1, 1, "", "Sequence"], [45, 2, 1, "", "calculate_F3x4"], [45, 2, 1, "", "calculate_F3x4_from_nucleotide"], [45, 2, 1, "", "calculate_frequencies"], [45, 2, 1, "", "calculate_frequencies_per_codon_position"], [45, 2, 1, "", "calculate_kappa"], [45, 2, 1, "", "calculate_substitutions"], [45, 2, 1, "", "calculate_ts_tv"], [45, 2, 1, "", "read_fasta_sequences"]], "torchtree.evolution.alignment.Alignment": [[45, 6, 1, "", "data_type"], [45, 4, 1, "", "from_json"], [45, 4, 1, "", "get"], [45, 6, 1, "", "sequence_size"], [45, 6, 1, "", "taxa"]], "torchtree.evolution.attribute_pattern": [[46, 3, 1, "", "AttributePattern"]], "torchtree.evolution.attribute_pattern.AttributePattern": [[46, 5, 1, "", "attribute"], [46, 4, 1, "", "compute_tips_partials"], [46, 4, 1, "", "compute_tips_states"], [46, 4, 1, "", "cpu"], [46, 4, 1, "", "cuda"], [46, 5, 1, "", "data_type"], [46, 4, 1, "", "from_json"], [46, 4, 1, "", "handle_model_changed"], [46, 4, 1, "", "handle_parameter_changed"], [46, 5, 1, "", "taxa"]], "torchtree.evolution.bdsk": [[47, 3, 1, "", "BDSKModel"], [47, 3, 1, "", "PiecewiseConstantBirthDeath"], [47, 2, 1, "", "epidemiology_to_birth_death"]], "torchtree.evolution.bdsk.BDSKModel": [[47, 5, 1, "", "R"], [47, 5, 1, "", "delta"], [47, 4, 1, "", "from_json"], [47, 5, 1, "", "origin"], [47, 5, 1, "", "origin_is_root_edge"], [47, 5, 1, "", "relative_times"], [47, 5, 1, "", "removal_probability"], [47, 5, 1, "", "rho"], [47, 5, 1, "", "s"], [47, 5, 1, "", "survival"], [47, 5, 1, "", "times"], [47, 5, 1, "", "tree_model"]], "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath": [[47, 5, 1, "", "arg_constraints"], [47, 5, 1, "", "lambda_"], [47, 4, 1, "", "log_p"], [47, 4, 1, "", "log_prob"], [47, 4, 1, "", "log_q"], [47, 5, 1, "", "mu"], [47, 5, 1, "", "origin"], [47, 5, 1, "", "origin_is_root_edge"], [47, 4, 1, "", "p0"], [47, 5, 1, "", "psi"], [47, 5, 1, "", "relative_times"], [47, 5, 1, "", "removal_probability"], [47, 5, 1, "", "rho"], [47, 5, 1, "", "support"], [47, 5, 1, "", "survival"], [47, 5, 1, "", "times"]], "torchtree.evolution.birth_death": [[48, 3, 1, "", "BirthDeath"], [48, 3, 1, "", "BirthDeathModel"]], "torchtree.evolution.birth_death.BirthDeath": [[48, 5, 1, "", "arg_constraints"], [48, 5, 1, "", "lambda_"], [48, 4, 1, "", "log_p"], [48, 4, 1, "", "log_prob"], [48, 4, 1, "", "log_q"], [48, 5, 1, "", "mu"], [48, 5, 1, "", "origin"], [48, 5, 1, "", "psi"], [48, 5, 1, "", "rho"], [48, 5, 1, "", "survival"]], "torchtree.evolution.birth_death.BirthDeathModel": [[48, 4, 1, "", "from_json"], [48, 4, 1, "", "handle_model_changed"], [48, 5, 1, "", "lambda_"], [48, 5, 1, "", "mu"], [48, 5, 1, "", "origin"], [48, 5, 1, "", "psi"], [48, 5, 1, "", "rho"], [48, 5, 1, "", "survival"], [48, 5, 1, "", "tree_model"]], "torchtree.evolution.branch_model": [[49, 3, 1, "", "AbstractClockModel"], [49, 3, 1, "", "BranchModel"], [49, 3, 1, "", "SimpleClockModel"], [49, 3, 1, "", "StrictClockModel"]], "torchtree.evolution.branch_model.AbstractClockModel": [[49, 4, 1, "", "handle_model_changed"], [49, 4, 1, "", "handle_parameter_changed"], [49, 5, 1, "", "tree"]], "torchtree.evolution.branch_model.BranchModel": [[49, 6, 1, "", "rates"]], "torchtree.evolution.branch_model.SimpleClockModel": [[49, 4, 1, "", "from_json"], [49, 4, 1, "", "json_factory"], [49, 6, 1, "", "rates"]], "torchtree.evolution.branch_model.StrictClockModel": [[49, 5, 1, "", "branch_count"], [49, 4, 1, "", "from_json"], [49, 6, 1, "", "rates"]], "torchtree.evolution.coalescent": [[50, 3, 1, "", "AbstractCoalescentDistribution"], [50, 3, 1, "", "AbstractCoalescentModel"], [50, 3, 1, "", "ConstantCoalescent"], [50, 3, 1, "", "ConstantCoalescentIntegrated"], [50, 3, 1, "", "ConstantCoalescentIntegratedModel"], [50, 3, 1, "", "ConstantCoalescentModel"], [50, 3, 1, "", "ExponentialCoalescent"], [50, 3, 1, "", "ExponentialCoalescentModel"], [50, 3, 1, "", "FakeTreeModel"], [50, 3, 1, "", "PiecewiseConstantCoalescent"], [50, 3, 1, "", "PiecewiseConstantCoalescentGrid"], [50, 3, 1, "", "PiecewiseConstantCoalescentGridModel"], [50, 3, 1, "", "PiecewiseConstantCoalescentModel"], [50, 3, 1, "", "PiecewiseExponentialCoalescentGrid"], [50, 3, 1, "", "PiecewiseExponentialCoalescentGridModel"], [50, 3, 1, "", "PiecewiseLinearCoalescentGrid"], [50, 3, 1, "", "PiecewiseLinearCoalescentGridModel"], [50, 3, 1, "", "SoftPiecewiseConstantCoalescentGrid"], [50, 2, 1, "", "process_data_coalesent"]], "torchtree.evolution.coalescent.AbstractCoalescentDistribution": [[50, 5, 1, "", "arg_constraints"], [50, 5, 1, "", "has_rsample"], [50, 4, 1, "", "maximum_likelihood"], [50, 5, 1, "", "support"], [50, 5, 1, "", "theta"]], "torchtree.evolution.coalescent.AbstractCoalescentModel": [[50, 4, 1, "", "distribution"], [50, 5, 1, "", "theta"], [50, 5, 1, "", "tree_model"]], "torchtree.evolution.coalescent.ConstantCoalescent": [[50, 5, 1, "", "has_rsample"], [50, 4, 1, "", "log_prob"], [50, 4, 1, "", "maximum_likelihood"], [50, 4, 1, "", "rsample"]], "torchtree.evolution.coalescent.ConstantCoalescentIntegrated": [[50, 5, 1, "", "alpha"], [50, 5, 1, "", "arg_constraints"], [50, 5, 1, "", "beta"], [50, 5, 1, "", "has_rsample"], [50, 4, 1, "", "log_prob"], [50, 5, 1, "", "support"]], "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel": [[50, 5, 1, "", "alpha"], [50, 5, 1, "", "beta"], [50, 4, 1, "", "distribution"], [50, 4, 1, "", "from_json"], [50, 5, 1, "", "tree_model"]], "torchtree.evolution.coalescent.ConstantCoalescentModel": [[50, 4, 1, "", "distribution"], [50, 4, 1, "", "from_json"]], "torchtree.evolution.coalescent.ExponentialCoalescent": [[50, 5, 1, "", "arg_constraints"], [50, 5, 1, "", "growth"], [50, 5, 1, "", "has_rsample"], [50, 4, 1, "", "log_prob"], [50, 5, 1, "", "support"], [50, 5, 1, "", "theta"]], "torchtree.evolution.coalescent.ExponentialCoalescentModel": [[50, 4, 1, "", "distribution"], [50, 4, 1, "", "from_json"], [50, 5, 1, "", "growth"]], "torchtree.evolution.coalescent.FakeTreeModel": [[50, 6, 1, "", "node_heights"], [50, 6, 1, "", "sample_shape"]], "torchtree.evolution.coalescent.PiecewiseConstantCoalescent": [[50, 4, 1, "", "log_prob"], [50, 4, 1, "", "maximum_likelihood"], [50, 4, 1, "", "sufficient_statistics"]], "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid": [[50, 5, 1, "", "grid"], [50, 4, 1, "", "log_prob"], [50, 4, 1, "", "sufficient_statistics"]], "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel": [[50, 4, 1, "", "distribution"], [50, 4, 1, "", "from_json"], [50, 5, 1, "", "grid"], [50, 5, 1, "", "temperature"]], "torchtree.evolution.coalescent.PiecewiseConstantCoalescentModel": [[50, 4, 1, "", "distribution"], [50, 4, 1, "", "from_json"]], "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid": [[50, 5, 1, "", "arg_constraints"], [50, 5, 1, "", "grid"], [50, 5, 1, "", "growth"], [50, 5, 1, "", "has_rsample"], [50, 4, 1, "", "log_prob"], [50, 5, 1, "", "support"], [50, 5, 1, "", "theta"]], "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel": [[50, 4, 1, "", "distribution"], [50, 4, 1, "", "from_json"], [50, 5, 1, "", "grid"], [50, 5, 1, "", "growth"]], "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid": [[50, 5, 1, "", "arg_constraints"], [50, 5, 1, "", "grid"], [50, 5, 1, "", "has_rsample"], [50, 4, 1, "", "log_prob"], [50, 5, 1, "", "support"], [50, 5, 1, "", "theta"]], "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel": [[50, 4, 1, "", "distribution"], [50, 4, 1, "", "from_json"], [50, 5, 1, "", "grid"]], "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid": [[50, 5, 1, "", "grid"], [50, 4, 1, "", "log_prob"], [50, 5, 1, "", "temperature"]], "torchtree.evolution.datatype": [[51, 3, 1, "", "AbstractDataType"], [51, 3, 1, "", "AminoAcidDataType"], [51, 3, 1, "", "CodonDataType"], [51, 3, 1, "", "DataType"], [51, 3, 1, "", "GeneralDataType"], [51, 3, 1, "", "NucleotideDataType"]], "torchtree.evolution.datatype.AbstractDataType": [[51, 6, 1, "", "size"], [51, 6, 1, "", "state_count"], [51, 6, 1, "", "states"]], "torchtree.evolution.datatype.AminoAcidDataType": [[51, 5, 1, "", "AMINO_ACIDS"], [51, 5, 1, "", "AMINO_ACIDS_AMBIGUITY_STATES"], [51, 5, 1, "", "AMINO_ACIDS_STATES"], [51, 4, 1, "", "encoding"], [51, 4, 1, "", "from_json"], [51, 4, 1, "", "partial"]], "torchtree.evolution.datatype.CodonDataType": [[51, 5, 1, "", "CODON_TRIPLETS"], [51, 5, 1, "", "GENETIC_CODE_NAMES"], [51, 5, 1, "", "GENETIC_CODE_TABLES"], [51, 5, 1, "", "NUMBER_OF_CODONS"], [51, 4, 1, "", "encoding"], [51, 4, 1, "", "from_json"], [51, 5, 1, "", "name"], [51, 4, 1, "", "partial"], [51, 5, 1, "", "stop_count"], [51, 5, 1, "", "table"], [51, 5, 1, "", "triplets"]], "torchtree.evolution.datatype.DataType": [[51, 4, 1, "", "encoding"], [51, 4, 1, "", "partial"], [51, 6, 1, "", "size"], [51, 6, 1, "", "state_count"], [51, 6, 1, "", "states"]], "torchtree.evolution.datatype.GeneralDataType": [[51, 5, 1, "", "ambiguities"], [51, 5, 1, "", "codes"], [51, 4, 1, "", "encoding"], [51, 4, 1, "", "from_json"], [51, 4, 1, "", "partial"]], "torchtree.evolution.datatype.NucleotideDataType": [[51, 5, 1, "", "NUCLEOTIDES"], [51, 5, 1, "", "NUCLEOTIDE_AMBIGUITY_STATES"], [51, 5, 1, "", "NUCLEOTIDE_STATES"], [51, 4, 1, "", "encoding"], [51, 4, 1, "", "from_json"], [51, 4, 1, "", "partial"]], "torchtree.evolution.io": [[53, 3, 1, "", "Node"], [53, 2, 1, "", "convert_samples_to_nexus"], [53, 2, 1, "", "extract_taxa"], [53, 2, 1, "", "parse_taxa"], [53, 2, 1, "", "parse_translate"], [53, 2, 1, "", "parse_trees"], [53, 2, 1, "", "random_tree_from_heights"], [53, 2, 1, "", "read_tree"], [53, 2, 1, "", "read_tree_and_alignment"], [53, 2, 1, "", "split_newick"], [53, 2, 1, "", "to_nexus"]], "torchtree.evolution.io.Node": [[53, 5, 1, "", "children"], [53, 5, 1, "", "height"], [53, 5, 1, "", "name"], [53, 5, 1, "", "parent"]], "torchtree.evolution.poisson_tree_likelihood": [[54, 3, 1, "", "PoissonTreeLikelihood"]], "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood": [[54, 5, 1, "", "clock_model"], [54, 5, 1, "", "edge_lengths"], [54, 4, 1, "", "from_json"], [54, 4, 1, "", "handle_parameter_changed"], [54, 5, 1, "", "tree_model"]], "torchtree.evolution.rate_transform": [[55, 3, 1, "", "LogDifferenceRateTransform"], [55, 3, 1, "", "RescaledRateTransform"]], "torchtree.evolution.rate_transform.LogDifferenceRateTransform": [[55, 5, 1, "", "bijective"], [55, 4, 1, "", "log_abs_det_jacobian"], [55, 5, 1, "", "sign"]], "torchtree.evolution.rate_transform.RescaledRateTransform": [[55, 5, 1, "", "bijective"], [55, 4, 1, "", "log_abs_det_jacobian"], [55, 5, 1, "", "sign"]], "torchtree.evolution.root_transform": [[56, 3, 1, "", "RootParameter"]], "torchtree.evolution.root_transform.RootParameter": [[56, 4, 1, "", "add_parameter_listener"], [56, 5, 1, "", "distance"], [56, 4, 1, "", "fire_parameter_changed"], [56, 4, 1, "", "from_json"], [56, 4, 1, "", "handle_model_changed"], [56, 4, 1, "", "handle_parameter_changed"], [56, 5, 1, "", "listeners"], [56, 5, 1, "", "need_update"], [56, 4, 1, "", "parameters"], [56, 5, 1, "", "rate"], [56, 5, 1, "", "shift"], [56, 6, 1, "", "tensor"], [56, 4, 1, "", "transform"]], "torchtree.evolution.site_model": [[57, 3, 1, "", "ConstantSiteModel"], [57, 3, 1, "", "InvariantSiteModel"], [57, 3, 1, "", "SiteModel"], [57, 3, 1, "", "UnivariateDiscretizedSiteModel"], [57, 3, 1, "", "WeibullSiteModel"]], "torchtree.evolution.site_model.ConstantSiteModel": [[57, 4, 1, "", "cpu"], [57, 4, 1, "", "cuda"], [57, 4, 1, "", "from_json"], [57, 4, 1, "", "probabilities"], [57, 4, 1, "", "rates"], [57, 4, 1, "", "to"]], "torchtree.evolution.site_model.InvariantSiteModel": [[57, 4, 1, "", "cpu"], [57, 4, 1, "", "cuda"], [57, 4, 1, "", "from_json"], [57, 6, 1, "", "invariant"], [57, 4, 1, "", "probabilities"], [57, 4, 1, "", "rates"], [57, 4, 1, "", "to"], [57, 4, 1, "", "update_rates_probs"]], "torchtree.evolution.site_model.SiteModel": [[57, 4, 1, "", "handle_model_changed"], [57, 4, 1, "", "handle_parameter_changed"], [57, 5, 1, "", "needs_update"], [57, 4, 1, "", "probabilities"], [57, 4, 1, "", "rates"]], "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel": [[57, 4, 1, "", "cpu"], [57, 4, 1, "", "cuda"], [57, 6, 1, "", "invariant"], [57, 4, 1, "", "inverse_cdf"], [57, 4, 1, "", "probabilities"], [57, 4, 1, "", "rates"], [57, 4, 1, "", "to"], [57, 4, 1, "", "update_rates"]], "torchtree.evolution.site_model.WeibullSiteModel": [[57, 4, 1, "", "from_json"], [57, 4, 1, "", "inverse_cdf"], [57, 6, 1, "", "shape"]], "torchtree.evolution.site_pattern": [[58, 3, 1, "", "SitePattern"], [58, 2, 1, "", "compress"], [58, 2, 1, "", "compress_alignment"], [58, 2, 1, "", "compress_alignment_states"]], "torchtree.evolution.site_pattern.SitePattern": [[58, 5, 1, "", "alignment"], [58, 4, 1, "", "compute_tips_partials"], [58, 4, 1, "", "compute_tips_states"], [58, 4, 1, "", "cpu"], [58, 4, 1, "", "cuda"], [58, 4, 1, "", "from_json"], [58, 4, 1, "", "handle_model_changed"], [58, 4, 1, "", "handle_parameter_changed"], [58, 5, 1, "", "indices"]], "torchtree.evolution.substitution_model": [[59, 0, 0, "-", "abstract"], [60, 0, 0, "-", "amino_acid"], [61, 0, 0, "-", "codon"], [62, 0, 0, "-", "general"], [64, 0, 0, "-", "nucleotide"]], "torchtree.evolution.substitution_model.abstract": [[59, 3, 1, "", "AbstractSubstitutionModel"], [59, 3, 1, "", "NonSymmetricSubstitutionModel"], [59, 3, 1, "", "SubstitutionModel"], [59, 3, 1, "", "SymmetricSubstitutionModel"]], "torchtree.evolution.substitution_model.abstract.AbstractSubstitutionModel": [[59, 6, 1, "", "frequencies"], [59, 4, 1, "", "norm"]], "torchtree.evolution.substitution_model.abstract.NonSymmetricSubstitutionModel": [[59, 4, 1, "", "eigen"], [59, 4, 1, "", "p_t"]], "torchtree.evolution.substitution_model.abstract.SubstitutionModel": [[59, 6, 1, "", "frequencies"], [59, 4, 1, "", "p_t"], [59, 4, 1, "", "q"], [59, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.abstract.SymmetricSubstitutionModel": [[59, 4, 1, "", "eigen"], [59, 4, 1, "", "p_t"]], "torchtree.evolution.substitution_model.amino_acid": [[60, 3, 1, "", "LG"], [60, 3, 1, "", "WAG"]], "torchtree.evolution.substitution_model.amino_acid.LG": [[60, 4, 1, "", "from_json"], [60, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.amino_acid.WAG": [[60, 4, 1, "", "from_json"], [60, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.codon": [[61, 3, 1, "", "MG94"]], "torchtree.evolution.substitution_model.codon.MG94": [[61, 5, 1, "", "alpha"], [61, 5, 1, "", "beta"], [61, 5, 1, "", "data_type"], [61, 4, 1, "", "from_json"], [61, 4, 1, "", "handle_model_changed"], [61, 4, 1, "", "handle_parameter_changed"], [61, 5, 1, "", "kappa"], [61, 5, 1, "", "non_synonymous"], [61, 4, 1, "", "q"], [61, 6, 1, "", "rates"], [61, 5, 1, "", "synonymous"], [61, 5, 1, "", "transitions"]], "torchtree.evolution.substitution_model.general": [[62, 3, 1, "", "EmpiricalSubstitutionModel"], [62, 3, 1, "", "GeneralJC69"], [62, 3, 1, "", "GeneralNonSymmetricSubstitutionModel"], [62, 3, 1, "", "GeneralSymmetricSubstitutionModel"]], "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel": [[62, 5, 1, "", "Q"], [62, 4, 1, "", "create_rate_matrix"], [62, 4, 1, "", "eigen"], [62, 6, 1, "", "frequencies"], [62, 4, 1, "", "from_json"], [62, 4, 1, "", "handle_model_changed"], [62, 4, 1, "", "handle_parameter_changed"], [62, 4, 1, "", "p_t"], [62, 4, 1, "", "q"], [62, 5, 1, "", "sqrt_pi"], [62, 5, 1, "", "sqrt_pi_inv"]], "torchtree.evolution.substitution_model.general.GeneralJC69": [[62, 4, 1, "", "cpu"], [62, 4, 1, "", "cuda"], [62, 6, 1, "", "frequencies"], [62, 4, 1, "", "from_json"], [62, 4, 1, "", "handle_model_changed"], [62, 4, 1, "", "handle_parameter_changed"], [62, 4, 1, "", "p_t"], [62, 4, 1, "", "q"], [62, 6, 1, "", "rates"], [62, 5, 1, "", "state_count"]], "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel": [[62, 5, 1, "", "data_type"], [62, 4, 1, "", "from_json"], [62, 4, 1, "", "handle_model_changed"], [62, 4, 1, "", "handle_parameter_changed"], [62, 5, 1, "", "mapping"], [62, 5, 1, "", "normalize"], [62, 4, 1, "", "q"], [62, 6, 1, "", "rates"], [62, 5, 1, "", "state_count"]], "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel": [[62, 5, 1, "", "data_type"], [62, 4, 1, "", "from_json"], [62, 4, 1, "", "handle_model_changed"], [62, 4, 1, "", "handle_parameter_changed"], [62, 5, 1, "", "mapping"], [62, 4, 1, "", "q"], [62, 6, 1, "", "rates"], [62, 5, 1, "", "state_count"]], "torchtree.evolution.substitution_model.nucleotide": [[64, 3, 1, "", "GTR"], [64, 3, 1, "", "HKY"], [64, 3, 1, "", "JC69"]], "torchtree.evolution.substitution_model.nucleotide.GTR": [[64, 4, 1, "", "from_json"], [64, 4, 1, "", "handle_model_changed"], [64, 4, 1, "", "handle_parameter_changed"], [64, 4, 1, "", "q"], [64, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.nucleotide.HKY": [[64, 4, 1, "", "from_json"], [64, 4, 1, "", "handle_model_changed"], [64, 4, 1, "", "handle_parameter_changed"], [64, 6, 1, "", "kappa"], [64, 4, 1, "", "p_t_analytical"], [64, 4, 1, "", "q"], [64, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.nucleotide.JC69": [[64, 4, 1, "", "cpu"], [64, 4, 1, "", "cuda"], [64, 6, 1, "", "frequencies"], [64, 4, 1, "", "from_json"], [64, 4, 1, "", "handle_model_changed"], [64, 4, 1, "", "handle_parameter_changed"], [64, 4, 1, "", "p_t"], [64, 4, 1, "", "q"], [64, 6, 1, "", "rates"]], "torchtree.evolution.taxa": [[65, 3, 1, "", "Taxa"], [65, 3, 1, "", "Taxon"]], "torchtree.evolution.taxa.Taxa": [[65, 4, 1, "", "from_json"]], "torchtree.evolution.taxa.Taxon": [[65, 4, 1, "", "from_json"]], "torchtree.evolution.tree_height_transform": [[66, 3, 1, "", "DifferenceNodeHeightTransform"], [66, 3, 1, "", "GeneralNodeHeightTransform"]], "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform": [[66, 5, 1, "", "bijective"], [66, 5, 1, "", "k"], [66, 4, 1, "", "log_abs_det_jacobian"], [66, 5, 1, "", "sign"], [66, 5, 1, "", "taxa_count"], [66, 5, 1, "", "tree"]], "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform": [[66, 5, 1, "", "bijective"], [66, 4, 1, "", "log_abs_det_jacobian"], [66, 5, 1, "", "sign"], [66, 4, 1, "", "sort_indices"], [66, 5, 1, "", "taxa_count"], [66, 5, 1, "", "tree"], [66, 4, 1, "", "update_bounds"]], "torchtree.evolution.tree_likelihood": [[67, 3, 1, "", "TreeLikelihoodModel"], [67, 2, 1, "", "calculate_treelikelihood"], [67, 2, 1, "", "calculate_treelikelihood_discrete"], [67, 2, 1, "", "calculate_treelikelihood_discrete_rescaled"], [67, 2, 1, "", "calculate_treelikelihood_discrete_safe"], [67, 2, 1, "", "calculate_treelikelihood_tip_states_discrete"], [67, 2, 1, "", "calculate_treelikelihood_tip_states_discrete_rescaled"]], "torchtree.evolution.tree_likelihood.TreeLikelihoodModel": [[67, 4, 1, "", "calculate_with_tip_partials"], [67, 4, 1, "", "calculate_with_tip_states"], [67, 5, 1, "", "clock_model"], [67, 4, 1, "", "from_json"], [67, 4, 1, "", "handle_parameter_changed"], [67, 5, 1, "", "rescale"], [67, 5, 1, "", "site_model"], [67, 5, 1, "", "site_pattern"], [67, 5, 1, "", "subst_model"], [67, 5, 1, "", "threshold"], [67, 5, 1, "", "tree_model"], [67, 5, 1, "", "use_tip_states"]], "torchtree.evolution.tree_model": [[68, 3, 1, "", "AbstractTreeModel"], [68, 3, 1, "", "ReparameterizedTimeTreeModel"], [68, 3, 1, "", "TimeTreeModel"], [68, 3, 1, "", "TreeModel"], [68, 3, 1, "", "UnRootedTreeModel"], [68, 2, 1, "", "heights_from_branch_lengths"], [68, 2, 1, "", "heights_to_branch_lengths"], [68, 2, 1, "", "initialize_dates_from_taxa"], [68, 2, 1, "", "parse_tree"], [68, 2, 1, "", "setup_dates"], [68, 2, 1, "", "setup_indexes"]], "torchtree.evolution.tree_model.AbstractTreeModel": [[68, 4, 1, "", "as_newick"], [68, 4, 1, "", "handle_model_changed"], [68, 6, 1, "", "postorder"], [68, 6, 1, "", "taxa"], [68, 5, 1, "", "taxa_count"], [68, 5, 1, "", "tree"], [68, 4, 1, "", "update_traversals"], [68, 4, 1, "", "write_newick"]], "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel": [[68, 4, 1, "", "cpu"], [68, 4, 1, "", "cuda"], [68, 4, 1, "", "from_json"], [68, 4, 1, "", "handle_model_changed"], [68, 4, 1, "", "handle_parameter_changed"], [68, 4, 1, "", "json_factory"], [68, 6, 1, "", "node_heights"], [68, 4, 1, "", "update_node_heights"]], "torchtree.evolution.tree_model.TimeTreeModel": [[68, 4, 1, "", "branch_lengths"], [68, 5, 1, "", "branch_lengths_need_update"], [68, 4, 1, "", "cpu"], [68, 4, 1, "", "cuda"], [68, 4, 1, "", "from_json"], [68, 4, 1, "", "handle_parameter_changed"], [68, 5, 1, "", "heights_need_update"], [68, 4, 1, "", "json_factory"], [68, 6, 1, "", "node_heights"], [68, 5, 1, "", "sampling_times"], [68, 5, 1, "", "taxa_count"], [68, 4, 1, "", "update_leaf_heights"], [68, 4, 1, "", "update_traversals"]], "torchtree.evolution.tree_model.TreeModel": [[68, 4, 1, "", "branch_lengths"], [68, 6, 1, "", "postorder"], [68, 6, 1, "", "taxa"], [68, 4, 1, "", "write_newick"]], "torchtree.evolution.tree_model.UnRootedTreeModel": [[68, 4, 1, "", "branch_lengths"], [68, 4, 1, "", "from_json"], [68, 4, 1, "", "handle_parameter_changed"], [68, 4, 1, "", "json_factory"]], "torchtree.evolution.tree_model_flexible": [[69, 3, 1, "", "FlexibleTimeTreeModel"]], "torchtree.evolution.tree_model_flexible.FlexibleTimeTreeModel": [[69, 4, 1, "", "from_json"], [69, 4, 1, "", "json_factory"]], "torchtree.evolution.tree_regression": [[70, 2, 1, "", "linear_regression"]], "torchtree.inference": [[75, 0, 0, "-", "hmc"], [81, 0, 0, "-", "mcmc"], [84, 0, 0, "-", "sampler"], [85, 0, 0, "-", "utils"]], "torchtree.inference.hmc": [[72, 0, 0, "-", "adaptation"], [73, 0, 0, "-", "hamiltonian"], [74, 0, 0, "-", "hmc"], [76, 0, 0, "-", "integrator"], [77, 0, 0, "-", "operator"], [78, 0, 0, "-", "stan_adaptation"]], "torchtree.inference.hmc.adaptation": [[72, 3, 1, "", "AdaptiveStepSize"], [72, 3, 1, "", "Adaptor"], [72, 3, 1, "", "DualAveragingStepSize"], [72, 3, 1, "", "MassMatrixAdaptor"], [72, 3, 1, "", "WarmupAdaptation"], [72, 2, 1, "", "find_reasonable_step_size"]], "torchtree.inference.hmc.adaptation.AdaptiveStepSize": [[72, 4, 1, "", "from_json"], [72, 4, 1, "", "learn"], [72, 4, 1, "", "load_state_dict"], [72, 4, 1, "", "restart"], [72, 5, 1, "", "target_acceptance_probability"]], "torchtree.inference.hmc.adaptation.Adaptor": [[72, 4, 1, "", "learn"], [72, 4, 1, "", "load_state_dict"], [72, 4, 1, "", "restart"], [72, 4, 1, "", "state_dict"]], "torchtree.inference.hmc.adaptation.DualAveragingStepSize": [[72, 4, 1, "", "from_json"], [72, 5, 1, "", "integrator"], [72, 4, 1, "", "learn"], [72, 4, 1, "", "load_state_dict"], [72, 4, 1, "", "restart"]], "torchtree.inference.hmc.adaptation.MassMatrixAdaptor": [[72, 4, 1, "", "from_json"], [72, 4, 1, "", "learn"], [72, 4, 1, "", "load_state_dict"], [72, 6, 1, "", "mass_matrix"], [72, 4, 1, "", "restart"], [72, 5, 1, "", "variance_estimator"], [72, 5, 1, "", "variance_estimator2"]], "torchtree.inference.hmc.adaptation.WarmupAdaptation": [[72, 6, 1, "", "inverse_mass_matrix"], [72, 6, 1, "", "mass_matrix"], [72, 6, 1, "", "sqrt_mass_matrix"], [72, 6, 1, "", "step_size"]], "torchtree.inference.hmc.hamiltonian": [[73, 3, 1, "", "Hamiltonian"]], "torchtree.inference.hmc.hamiltonian.Hamiltonian": [[73, 4, 1, "", "from_json"], [73, 4, 1, "", "handle_parameter_changed"], [73, 5, 1, "", "joint"], [73, 4, 1, "", "kinetic_energy"], [73, 4, 1, "", "potential_energy"], [73, 4, 1, "", "sample_momentum"]], "torchtree.inference.hmc.hmc": [[74, 3, 1, "", "HMC"]], "torchtree.inference.hmc.hmc.HMC": [[74, 5, 1, "", "checkpoint"], [74, 5, 1, "", "checkpoint_frequency"], [74, 5, 1, "", "dimension"], [74, 5, 1, "", "every"], [74, 4, 1, "", "find_reasonable_step_size"], [74, 5, 1, "", "find_step_size"], [74, 4, 1, "", "from_json"], [74, 4, 1, "", "hamiltonian"], [74, 5, 1, "", "integrator"], [74, 5, 1, "", "iterations"], [74, 5, 1, "", "joint"], [74, 5, 1, "", "loggers"], [74, 5, 1, "", "parameters"], [74, 4, 1, "", "run"], [74, 4, 1, "", "sample_momentum"], [74, 5, 1, "", "warmup_adaptor"]], "torchtree.inference.hmc.integrator": [[76, 3, 1, "", "Integrator"], [76, 3, 1, "", "LeapfrogIntegrator"], [76, 2, 1, "", "set_tensor"]], "torchtree.inference.hmc.integrator.Integrator": [[76, 4, 1, "", "load_state_dict"], [76, 4, 1, "", "state_dict"]], "torchtree.inference.hmc.integrator.LeapfrogIntegrator": [[76, 4, 1, "", "from_json"], [76, 4, 1, "", "load_state_dict"], [76, 5, 1, "", "step_size"], [76, 5, 1, "", "steps"]], "torchtree.inference.hmc.operator": [[77, 3, 1, "", "HMCOperator"]], "torchtree.inference.hmc.operator.HMCOperator": [[77, 4, 1, "", "adaptable_parameter"], [77, 4, 1, "", "from_json"], [77, 4, 1, "", "handle_parameter_changed"], [77, 6, 1, "", "mass_matrix"], [77, 4, 1, "", "set_adaptable_parameter"], [77, 4, 1, "", "tune"], [77, 6, 1, "", "tuning_parameter"], [77, 4, 1, "", "update_mass_matrices"]], "torchtree.inference.hmc.stan_adaptation": [[78, 3, 1, "", "StanWindowedAdaptation"]], "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation": [[78, 5, 1, "", "adapt_base_window"], [78, 5, 1, "", "adapt_init_buffer"], [78, 5, 1, "", "adapt_term_buffer"], [78, 4, 1, "", "from_json"], [78, 4, 1, "", "learn"], [78, 5, 1, "", "mass_matrix_adaptor"], [78, 5, 1, "", "num_warmup"], [78, 4, 1, "", "restart"], [78, 5, 1, "", "step_size_adaptor"]], "torchtree.inference.mcmc": [[80, 0, 0, "-", "gmrf_block_updating"], [82, 0, 0, "-", "mcmc"], [83, 0, 0, "-", "operator"]], "torchtree.inference.mcmc.gmrf_block_updating": [[80, 3, 1, "", "GMRFPiecewiseCoalescentBlockUpdatingOperator"]], "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator": [[80, 4, 1, "", "adaptable_parameter"], [80, 5, 1, "", "coalescent"], [80, 4, 1, "", "from_json"], [80, 5, 1, "", "gmrf"], [80, 4, 1, "", "gradient"], [80, 4, 1, "", "jacobian"], [80, 4, 1, "", "newton_raphson"], [80, 4, 1, "", "propose_precision"], [80, 4, 1, "", "set_adaptable_parameter"], [80, 6, 1, "", "tuning_parameter"]], "torchtree.inference.mcmc.mcmc": [[82, 3, 1, "", "MCMC"]], "torchtree.inference.mcmc.mcmc.MCMC": [[82, 5, 1, "", "checkpoint"], [82, 5, 1, "", "checkpoint_frequency"], [82, 5, 1, "", "every"], [82, 4, 1, "", "from_json"], [82, 5, 1, "", "iterations"], [82, 5, 1, "", "joint"], [82, 4, 1, "", "load_state_dict"], [82, 5, 1, "", "loggers"], [82, 5, 1, "", "parameters"], [82, 4, 1, "", "run"], [82, 4, 1, "", "save_full_state"], [82, 4, 1, "", "state_dict"]], "torchtree.inference.mcmc.operator": [[83, 3, 1, "", "DirichletOperator"], [83, 3, 1, "", "MCMCOperator"], [83, 3, 1, "", "ScalerOperator"], [83, 3, 1, "", "SlidingWindowOperator"]], "torchtree.inference.mcmc.operator.DirichletOperator": [[83, 4, 1, "", "adaptable_parameter"], [83, 4, 1, "", "from_json"], [83, 4, 1, "", "set_adaptable_parameter"], [83, 6, 1, "", "tuning_parameter"]], "torchtree.inference.mcmc.operator.MCMCOperator": [[83, 4, 1, "", "accept"], [83, 6, 1, "", "adaptable_parameter"], [83, 4, 1, "", "load_state_dict"], [83, 5, 1, "", "parameters"], [83, 4, 1, "", "reject"], [83, 4, 1, "", "set_adaptable_parameter"], [83, 4, 1, "", "smoothed_acceptance_rate"], [83, 4, 1, "", "state_dict"], [83, 4, 1, "", "step"], [83, 5, 1, "", "target_acceptance_probability"], [83, 4, 1, "", "tune"], [83, 6, 1, "", "tuning_parameter"], [83, 5, 1, "", "weight"]], "torchtree.inference.mcmc.operator.ScalerOperator": [[83, 4, 1, "", "adaptable_parameter"], [83, 4, 1, "", "from_json"], [83, 4, 1, "", "set_adaptable_parameter"], [83, 6, 1, "", "tuning_parameter"]], "torchtree.inference.mcmc.operator.SlidingWindowOperator": [[83, 4, 1, "", "adaptable_parameter"], [83, 4, 1, "", "from_json"], [83, 4, 1, "", "set_adaptable_parameter"], [83, 6, 1, "", "tuning_parameter"]], "torchtree.inference.sampler": [[84, 3, 1, "", "Sampler"]], "torchtree.inference.sampler.Sampler": [[84, 4, 1, "", "from_json"], [84, 5, 1, "", "loggers"], [84, 5, 1, "", "model"], [84, 4, 1, "", "run"], [84, 5, 1, "", "samples"]], "torchtree.inference.utils": [[85, 2, 1, "", "extract_tensors_and_parameters"]], "torchtree.nf": [[86, 0, 0, "-", "energy_functions"], [87, 0, 0, "-", "flow"], [89, 0, 0, "-", "planar"], [90, 0, 0, "-", "realnvp"]], "torchtree.nf.energy_functions": [[86, 3, 1, "", "EnergyFunctionModel"], [86, 2, 1, "", "w1"], [86, 2, 1, "", "w2"], [86, 2, 1, "", "w3"]], "torchtree.nf.energy_functions.EnergyFunctionModel": [[86, 5, 1, "", "desc"], [86, 4, 1, "", "from_json"], [86, 4, 1, "", "handle_model_changed"], [86, 5, 1, "", "x"]], "torchtree.nf.flow": [[87, 3, 1, "", "NormalizingFlow"]], "torchtree.nf.flow.NormalizingFlow": [[87, 4, 1, "", "apply_flow"], [87, 5, 1, "", "base"], [87, 4, 1, "", "cpu"], [87, 4, 1, "", "cuda"], [87, 4, 1, "", "entropy"], [87, 4, 1, "", "forward"], [87, 4, 1, "", "from_json"], [87, 5, 1, "", "layers"], [87, 4, 1, "", "log_prob"], [87, 5, 1, "", "modules"], [87, 4, 1, "", "parameters"], [87, 4, 1, "", "rsample"], [87, 4, 1, "", "sample"], [87, 5, 1, "", "sum_log_abs_det_jacobians"], [87, 4, 1, "", "to"], [87, 5, 1, "", "x"]], "torchtree.nf.planar": [[89, 3, 1, "", "PlanarTransform"]], "torchtree.nf.planar.PlanarTransform": [[89, 5, 1, "", "b"], [89, 4, 1, "", "forward"], [89, 4, 1, "", "log_abs_det_jacobian"], [89, 5, 1, "", "u"], [89, 4, 1, "", "u_hat"], [89, 5, 1, "", "w"]], "torchtree.nf.realnvp": [[90, 3, 1, "", "BatchNorm"], [90, 3, 1, "", "FlowSequential"], [90, 3, 1, "", "LinearMaskedCoupling"], [90, 3, 1, "", "RealNVP"]], "torchtree.nf.realnvp.BatchNorm": [[90, 5, 1, "", "beta"], [90, 5, 1, "", "eps"], [90, 4, 1, "", "forward"], [90, 4, 1, "", "inverse"], [90, 5, 1, "", "log_gamma"], [90, 5, 1, "", "momentum"]], "torchtree.nf.realnvp.FlowSequential": [[90, 4, 1, "", "forward"], [90, 4, 1, "", "inverse"]], "torchtree.nf.realnvp.LinearMaskedCoupling": [[90, 4, 1, "", "forward"], [90, 4, 1, "", "inverse"], [90, 5, 1, "", "s_net"], [90, 5, 1, "", "t_net"]], "torchtree.nf.realnvp.RealNVP": [[90, 4, 1, "", "apply_flow"], [90, 5, 1, "", "base_dist"], [90, 6, 1, "", "batch_shape"], [90, 4, 1, "", "entropy"], [90, 4, 1, "", "forward"], [90, 4, 1, "", "from_json"], [90, 5, 1, "", "input_size"], [90, 4, 1, "", "inverse"], [90, 4, 1, "", "log_prob"], [90, 5, 1, "", "net"], [90, 5, 1, "", "net_parameters"], [90, 4, 1, "", "parameters"], [90, 4, 1, "", "rsample"], [90, 4, 1, "", "sample"], [90, 5, 1, "", "sum_log_abs_det_jacobians"], [90, 5, 1, "", "x"]], "torchtree.nn": [[92, 0, 0, "-", "module"]], "torchtree.nn.module": [[92, 3, 1, "", "Module"]], "torchtree.nn.module.Module": [[92, 4, 1, "", "cpu"], [92, 4, 1, "", "cuda"], [92, 4, 1, "", "from_json"], [92, 6, 1, "", "module"], [92, 4, 1, "", "to"], [92, 5, 1, "", "x"]], "torchtree.ops": [[93, 0, 0, "-", "dual_averaging"], [95, 0, 0, "-", "smooth"], [96, 0, 0, "-", "welford"]], "torchtree.ops.dual_averaging": [[93, 3, 1, "", "DualAveraging"]], "torchtree.ops.dual_averaging.DualAveraging": [[93, 4, 1, "", "restart"], [93, 4, 1, "", "step"], [93, 5, 1, "", "x"]], "torchtree.ops.smooth": [[95, 2, 1, "", "smooth_max"], [95, 2, 1, "", "soft_searchsorted"], [95, 2, 1, "", "soft_sort"]], "torchtree.ops.welford": [[96, 3, 1, "", "WelfordVariance"]], "torchtree.ops.welford.WelfordVariance": [[96, 4, 1, "", "add_sample"], [96, 4, 1, "", "mean"], [96, 4, 1, "", "remove_sample"], [96, 4, 1, "", "reset"], [96, 5, 1, "", "samples"], [96, 4, 1, "", "variance"]], "torchtree.optim": [[97, 0, 0, "-", "convergence"], [99, 0, 0, "-", "lr_scheduler"], [100, 0, 0, "-", "optimizer"]], "torchtree.optim.convergence": [[97, 3, 1, "", "BaseConvergence"], [97, 3, 1, "", "StanVariationalConvergence"], [97, 3, 1, "", "VariationalConvergence"]], "torchtree.optim.convergence.BaseConvergence": [[97, 4, 1, "", "check"]], "torchtree.optim.convergence.StanVariationalConvergence": [[97, 4, 1, "", "check"], [97, 5, 1, "", "delta_elbo"], [97, 5, 1, "", "delta_elbo_ave"], [97, 5, 1, "", "delta_elbo_med"], [97, 5, 1, "", "elbo"], [97, 5, 1, "", "elbo_best"], [97, 5, 1, "", "elbo_diff"], [97, 5, 1, "", "elbo_prev"], [97, 4, 1, "", "from_json"], [97, 4, 1, "", "rel_difference"], [97, 5, 1, "", "tol_rel_obj"]], "torchtree.optim.convergence.VariationalConvergence": [[97, 4, 1, "", "check"], [97, 5, 1, "", "every"], [97, 5, 1, "", "file_name"], [97, 4, 1, "", "from_json"], [97, 5, 1, "", "loss"], [97, 5, 1, "", "samples"], [97, 5, 1, "", "start"]], "torchtree.optim.lr_scheduler": [[99, 3, 1, "", "Scheduler"]], "torchtree.optim.lr_scheduler.Scheduler": [[99, 4, 1, "", "from_json"], [99, 4, 1, "", "load_state_dict"], [99, 5, 1, "", "scheduler"], [99, 4, 1, "", "state_dict"], [99, 4, 1, "", "step"]], "torchtree.optim.optimizer": [[100, 3, 1, "", "Optimizer"]], "torchtree.optim.optimizer.Optimizer": [[100, 5, 1, "", "checkpoint"], [100, 5, 1, "", "checkpoint_all"], [100, 5, 1, "", "checkpoint_frequency"], [100, 5, 1, "", "convergence"], [100, 5, 1, "", "distributions"], [100, 4, 1, "", "from_json"], [100, 5, 1, "", "iterations"], [100, 4, 1, "", "load_state_dict"], [100, 5, 1, "", "loggers"], [100, 5, 1, "", "loss"], [100, 5, 1, "", "maximize"], [100, 5, 1, "", "optimizer"], [100, 5, 1, "", "parameters"], [100, 4, 1, "", "run"], [100, 4, 1, "", "save_full_state"], [100, 5, 1, "", "scheduler"], [100, 4, 1, "", "state_dict"]], "torchtree.torchtree": [[101, 2, 1, "", "main"]], "torchtree.typing": [[102, 1, 1, "", "ID"], [102, 1, 1, "", "ListParameter"], [102, 1, 1, "", "ListTensor"], [102, 1, 1, "", "OrderedDictType"]], "torchtree.variational": [[103, 0, 0, "-", "chi"], [105, 0, 0, "-", "kl"], [106, 0, 0, "-", "renyi"]], "torchtree.variational.chi": [[103, 3, 1, "", "CUBO"]], "torchtree.variational.chi.CUBO": [[103, 4, 1, "", "from_json"], [103, 4, 1, "", "handle_parameter_changed"], [103, 5, 1, "", "n"], [103, 5, 1, "", "p"], [103, 5, 1, "", "q"], [103, 5, 1, "", "samples"]], "torchtree.variational.kl": [[105, 3, 1, "", "ELBO"], [105, 3, 1, "", "KLpq"], [105, 3, 1, "", "KLpqImportance"], [105, 3, 1, "", "SELBO"]], "torchtree.variational.kl.ELBO": [[105, 5, 1, "", "entropy"], [105, 4, 1, "", "from_json"], [105, 4, 1, "", "handle_parameter_changed"], [105, 5, 1, "", "p"], [105, 5, 1, "", "q"], [105, 5, 1, "", "samples"], [105, 5, 1, "", "score"]], "torchtree.variational.kl.KLpq": [[105, 4, 1, "", "from_json"], [105, 4, 1, "", "handle_parameter_changed"], [105, 5, 1, "", "p"], [105, 5, 1, "", "q"], [105, 5, 1, "", "samples"]], "torchtree.variational.kl.KLpqImportance": [[105, 4, 1, "", "from_json"], [105, 4, 1, "", "handle_parameter_changed"], [105, 5, 1, "", "p"], [105, 5, 1, "", "q"], [105, 5, 1, "", "samples"]], "torchtree.variational.kl.SELBO": [[105, 5, 1, "", "components"], [105, 5, 1, "", "entropy"], [105, 4, 1, "", "from_json"], [105, 4, 1, "", "handle_parameter_changed"], [105, 5, 1, "", "p"], [105, 5, 1, "", "samples"], [105, 5, 1, "", "weights"]], "torchtree.variational.renyi": [[106, 3, 1, "", "VR"]], "torchtree.variational.renyi.VR": [[106, 5, 1, "", "alpha"], [106, 4, 1, "", "from_json"], [106, 4, 1, "", "handle_parameter_changed"], [106, 5, 1, "", "p"], [106, 5, 1, "", "q"], [106, 5, 1, "", "samples"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:method", "5": "py:attribute", "6": "py:property", "7": "py:exception"}, "terms": {"": [22, 33, 36, 39, 41, 47, 50, 67, 95, 96, 97, 105, 106, 107], "0": [22, 28, 29, 32, 34, 40, 42, 43, 51, 53, 55, 66, 68, 72, 77, 78, 80, 90, 93, 95, 96, 97, 105, 106], "0000": 43, "0001": 95, "01": 97, "05": [72, 90, 93], "06": 68, "07057v4": 90, "0820": 28, "0855": 43, "1": [0, 1, 20, 22, 28, 29, 30, 32, 33, 34, 40, 41, 42, 43, 44, 47, 50, 51, 53, 66, 67, 77, 80, 89, 95, 103, 105, 106, 107], "10": [29, 33, 42, 72, 93, 95, 107], "100": [82, 95], "1000": 82, "1041": [33, 107], "1056": [33, 107], "1093": [33, 107], "11": [42, 95, 107], "1111": [29, 107], "12042": [29, 107], "1214": [29, 42, 107], "13": [105, 107], "130": [105, 107], "15": [105, 107], "16": 107, "17": [42, 51, 107], "1705": 90, "18": [29, 107], "1d": 43, "1e": [68, 90], "2": [0, 22, 28, 29, 32, 33, 34, 40, 42, 43, 53, 67, 80, 95, 105, 107], "20": 43, "2008": [30, 107], "2012": [44, 105, 107], "2014": [29, 107], "2016": [33, 106, 107], "2017": [42, 107], "2020": [95, 107], "2021": [105, 107], "2023": [29, 107], "21": 107, "22": [29, 107], "24": 80, "24th": [105, 107], "25": 51, "29": [44, 106, 107], "2d": 22, "2t": 67, "3": [22, 29, 30, 33, 34, 43, 95, 107], "30": 95, "325": [44, 107], "3250": [105, 107], "3258": [105, 107], "335": [44, 107], "355": [30, 107], "36": [30, 107], "36575068": 28, "367": [29, 107], "368": [30, 107], "390": [29, 107], "4": [28, 64], "4131": 28, "4ment": 108, "5": [40, 43, 72, 93], "5000": 95, "5018": [42, 107], "5051": [42, 107], "6": [33, 43, 107], "60": 51, "61": 51, "62": 51, "63": 51, "64": 51, "65": [33, 107], "713": [29, 107], "7183": 43, "733": [29, 107], "75": [72, 93], "7750ca3559e5b8e1f44210283368fc16": [106, 107], "7793": [95, 107], "7802": [95, 107], "8": [72, 77], "9": 90, "A": [0, 21, 22, 28, 29, 30, 33, 37, 46, 47, 48, 49, 57, 58, 59, 60, 61, 62, 64, 68, 69, 99, 100, 107], "As": 36, "For": [23, 28, 68], "If": [22, 33, 34], "In": [43, 55, 66, 95, 105, 106, 107], "It": [28, 108], "No": 82, "One": 41, "The": [5, 15, 19, 22, 29, 32, 33, 34, 35, 43, 50, 52, 56, 66, 67, 79, 80, 82, 89, 105, 107, 108], "There": 108, "To": [23, 28], "_": [28, 105], "__getattr__": 28, "__init__": 36, "_cl": 28, "_i": [55, 105], "_instanc": 36, "_lrschedul": 99, "_q": 105, "_x": 16, "aaa": 51, "aac": 51, "aag": 51, "aat": 51, "abc": [11, 15, 18, 21, 22, 25, 26, 27, 49, 50, 51, 59, 67, 68, 72, 73, 76, 83, 86], "abov": [47, 67], "absolut": 97, "abstract": [11, 15, 17, 18, 20, 21, 22, 25, 26, 27, 30, 31, 32, 37, 39, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 83, 86, 90, 97, 99, 100, 103, 105], "abstractclockmodel": 49, "abstractcoalescentdistribut": 50, "abstractcoalescentmodel": [50, 80], "abstractdatatyp": 51, "abstractmethod": [15, 17, 27, 50, 51, 59, 68, 83], "abstractparamet": [17, 19, 20, 21, 22, 25, 29, 30, 31, 32, 33, 34, 39, 42, 43, 44, 47, 48, 49, 50, 54, 55, 56, 57, 59, 61, 62, 64, 68, 69, 72, 77, 86, 87, 90, 92, 105], "abstractsubstitutionmodel": 59, "abstracttreemodel": 68, "aca": 51, "acc": 51, "accept": [72, 77, 78, 80, 83], "acceptance_prob": [72, 77, 78, 83], "acdefghiklmnpqrstvwybzx": 51, "acg": 51, "acgtukmrswybdhvn": 51, "act": 51, "adapt": [75, 77, 78, 80, 93, 97], "adapt_base_window": 78, "adapt_init_buff": 78, "adapt_term_buff": 78, "adaptable_paramet": [77, 80, 83], "adaptivesteps": 72, "adaptor": [72, 77, 78], "add": 96, "add_birth_death": 3, "add_coalesc": 3, "add_model_listen": 21, "add_parameter_listen": [15, 21, 22, 56], "add_sampl": 96, "addit": [20, 56, 82, 87, 92], "addition": 36, "adjac": 55, "adji": 103, "advanc": [106, 107], "advi": 5, "after": [47, 67], "aga": 51, "agc": 51, "agg": 51, "agt": 51, "aki": [42, 107], "akihiko": [29, 107], "al": [33, 44], "algorithm": [78, 82, 97, 108], "align": [3, 52, 53, 58], "aliv": [47, 48], "all": [22, 28, 43, 97], "allclos": 43, "alloc": [15, 36], "allow_nan": [23, 28], "alpha": [29, 34, 44, 50, 61, 106], "alpha_i": [43, 105], "also": [28, 29], "altern": 28, "alternativeattributeerror": 28, "am": 16, "ambigu": 51, "amino_acid": [51, 63], "amino_acids_ambiguity_st": 51, "amino_acids_st": 51, "aminoaciddatatyp": 51, "amount": 56, "an": [11, 16, 17, 18, 22, 25, 26, 27, 28, 36, 44, 47, 50, 51, 65, 67, 72, 74, 76, 77, 82, 83], "analysi": [29, 30, 107], "andrew": [105, 107], "ani": [6, 17, 20, 21, 22, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 90, 97, 99, 100, 103, 105, 106], "anoth": [22, 23, 28], "appear": [36, 41, 47, 48, 50], "applic": [43, 55, 66], "apply_affine_transform": 0, "apply_exp_transform": 0, "apply_flow": [87, 90], "apply_sigmoid_transform": 0, "apply_simplex_transform": 0, "apply_transforms_for_fullrank": 0, "approxim": [66, 105], "apr": [105, 107], "ar": [0, 21, 22, 29, 30, 31, 32, 33, 36, 37, 39, 41, 47, 48, 50, 67, 68, 73, 86, 87, 89, 90, 107], "arang": 22, "arbitrari": [23, 28], "arg": [0, 1, 3, 4, 7, 8, 9, 10, 11, 15, 20, 21, 22, 28, 30, 36, 41, 47, 48, 50, 57, 87, 90, 92, 97, 99], "arg_constraint": [36, 41, 47, 48, 50], "argmax": 95, "argpars": [1, 3], "argparse_util": 5, "argsort": [95, 107], "argument": [1, 3, 22, 32, 36, 41, 47, 48, 50, 82], "arindam": [105, 107], "around": 53, "arrai": [23, 28], "artifici": [105, 107], "arxiv": 90, "as_newick": 68, "as_tensor": 28, "assign": 22, "associ": [106, 107], "ata": 51, "attribut": [16, 20, 22, 29, 32, 33, 34, 42, 44, 46, 65, 68, 69, 80, 82, 106], "attribute_pattern": 52, "attributeerror": 28, "attributepattern": 46, "autograd": 22, "automat": [105, 107, 108], "autoregress": 90, "averag": [72, 93], "awar": [33, 34], "ayesian": [44, 107], "b": [29, 43, 44, 47, 48, 53, 55, 64, 67, 89, 107], "ba1308": [29, 107], "banerje": [105, 107], "base": [11, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 97, 99, 100, 103, 105, 106, 107, 108], "base_dist": 90, "base_window": 78, "baseconverg": 97, "batch": [31, 32, 36, 37, 39, 50, 67, 87, 90], "batch_norm": 90, "batch_shap": [31, 32, 36, 37, 39, 87, 90], "batch_siz": [36, 89], "batchnorm": 90, "bayesian": [29, 30, 33, 107], "bayesian_bridg": 35, "bayesianbridg": 29, "bdsk": 52, "bdskmodel": 47, "beagl": 108, "becom": 47, "being": 47, "bennett": [33, 107], "bernoulli": 28, "beta": [33, 34, 50, 61, 90], "beta_": 33, "beta_1": 33, "beta_n": 33, "between": [28, 47, 48, 97], "bia": [43, 89], "biek": [33, 107], "biject": [43, 55, 66], "biologi": [33, 44, 107], "birth": [47, 48], "birth_death": 52, "birth_death_id": 3, "birthdeath": 48, "birthdeathmodel": 48, "bito": 108, "blei": 103, "block": [21, 46, 49, 50, 53, 57, 58, 59, 60, 61, 62, 64, 68, 69, 80], "boldsymbol": 33, "bool": [15, 22, 24, 33, 34, 47, 48, 62, 72, 77, 78, 80, 82, 83, 95, 97, 105], "bound": [68, 103, 105, 106], "bousso": 103, "branch": [44, 47, 64, 67, 68, 107, 108], "branch_count": 49, "branch_length": [59, 62, 64, 68], "branch_lengths_id": 68, "branch_lengths_need_upd": 68, "branch_model": [3, 52, 54, 67], "branch_model_id": [3, 13], "branchmodel": [49, 54, 67], "bridg": [29, 107], "bridge_d": 29, "broadcast": 36, "bruce": [44, 107], "build": [21, 46, 49, 57, 58, 59, 60, 61, 62, 64, 68, 69], "build_advi": 0, "build_align": 3, "build_hmc": 4, "build_mcmc": 9, "build_optim": 8, "c": [16, 44, 53, 66], "c_i": 50, "cach": [21, 50, 67, 73, 86], "cache_s": [43, 55, 66], "calcul": [41, 56, 64, 67, 68, 70, 96, 97, 105, 108], "calculate_f3x4": 45, "calculate_f3x4_from_nucleotid": 45, "calculate_frequ": 45, "calculate_frequencies_per_codon_posit": 45, "calculate_kappa": 45, "calculate_substitut": 45, "calculate_treelikelihood": 67, "calculate_treelikelihood_discret": 67, "calculate_treelikelihood_discrete_resc": 67, "calculate_treelikelihood_discrete_saf": 67, "calculate_treelikelihood_tip_states_discret": 67, "calculate_treelikelihood_tip_states_discrete_resc": 67, "calculate_ts_tv": 45, "calculate_with_tip_parti": 67, "calculate_with_tip_st": 67, "call": [22, 23, 28, 36, 66], "callabl": [17, 21, 22, 50, 67, 73, 86], "callablemodel": [20, 21, 29, 30, 32, 33, 34, 37, 42, 44, 47, 48, 50, 54, 56, 67, 68, 73, 74, 77, 82, 86, 92, 97, 100, 103, 105, 106], "callableobject": 20, "can": [1, 20, 21, 22, 29, 46, 49, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69, 87, 92, 108], "canadian": [30, 107], "carlo": [80, 82, 105, 108], "case": [21, 50, 67, 73, 86], "cash": 3, "categori": [57, 67], "catparamet": 22, "cc": [106, 107], "chain": [30, 80, 82, 107, 108], "chang": [21, 46, 49, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69], "check": [36, 97], "check_argu": 3, "check_circular": [23, 28], "checkpoint": [74, 82, 100], "checkpoint_al": 100, "checkpoint_frequ": [74, 82, 100], "cheng": 34, "chi": 104, "child": 66, "children": 53, "choic": [1, 3], "choleski": 0, "clade": [47, 48], "classmethod": [17, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "classproperti": 16, "classproperty_decor": 19, "cli": 71, "clock": 54, "clock_model": [54, 67], "clone": [22, 108], "close": 20, "co": 96, "coalesc": [10, 33, 52, 80, 107, 108], "coalescent_piecewis": 3, "code": [51, 72, 78, 90, 93, 97, 108], "codomain": 43, "codon": [51, 63], "codon_triplet": 51, "codondatatyp": [51, 61], "coeffici": 33, "collect": [21, 22, 45, 50, 65, 67, 73, 86], "com": [28, 90, 108], "command": 5, "comment": 28, "common": 28, "compat": [68, 69], "complet": [22, 32], "complex": [21, 46, 49, 57, 58, 59, 60, 61, 62, 64, 68, 69], "compon": 105, "compound": 44, "compoundgammadirichletprior": 44, "compress": 58, "compress_align": 58, "compress_alignment_st": 58, "comput": [15, 22, 28, 43, 55, 66, 97], "compute_tips_parti": [46, 58], "compute_tips_st": [46, 58], "concaten": 22, "concentr": [0, 36, 44], "cond_i": 90, "cond_label_s": 90, "condit": [47, 48], "confer": [95, 105, 107], "configur": 5, "conflict": 28, "constant": [3, 47, 48, 50], "constant_term": 34, "constantcoalesc": 50, "constantcoalescentintegr": 50, "constantcoalescentintegratedmodel": 50, "constantcoalescentmodel": 50, "constantsitemodel": 57, "constrain": 14, "constrainst_prefix": 14, "constraint": [14, 36, 41, 47, 48, 50], "constraint_prefix": 14, "construct": 22, "contain": [0, 5, 6, 19, 20, 21, 22, 27, 29, 30, 31, 32, 33, 34, 35, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 97, 98, 99, 100, 103, 104, 105, 106], "containerlogg": 20, "continu": [28, 30, 95, 107], "converg": [29, 98, 100, 107], "convers": [15, 21, 22, 30, 57, 87, 92], "convert": 47, "convert_date_to_r": 14, "convert_samples_to_nexu": 53, "convexcombinationtransform": 43, "copy_": 22, "core": [29, 30, 31, 32, 33, 34, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 69, 71, 72, 73, 74, 76, 77, 80, 82, 83, 84, 85, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "correspond": [14, 28, 68, 69, 85, 108], "could": [23, 28], "count": 53, "coupl": 90, "covari": [0, 33, 39, 107], "covariance_matrix": 39, "cpu": [15, 21, 22, 30, 46, 57, 58, 62, 64, 68, 87, 92], "creat": [0, 5, 11, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "create_advi": 0, "create_align": 3, "create_bd_prior": 3, "create_bdsk": 3, "create_bdsk_prior": 3, "create_birth_death": 3, "create_block_updating_oper": 10, "create_branch_model": 3, "create_clock_horseshoe_prior": 13, "create_clock_prior": 3, "create_coales": 3, "create_constant_bd_prior": 3, "create_constant_birth_death": 3, "create_data_typ": 3, "create_evolution_joint": 3, "create_evolution_pars": 3, "create_evolution_prior": 3, "create_flexible_vari": 0, "create_fullrank": 0, "create_fullrank_from_meanfield": 0, "create_gamma_distribut": 0, "create_general_data_typ": 3, "create_hmc": 4, "create_hmc_oper": 4, "create_hmc_pars": 4, "create_jacobian": 6, "create_logg": [0, 7, 8], "create_map_pars": 8, "create_mcmc": 9, "create_mcmc_pars": 9, "create_meanfield": 0, "create_normal_distribut": 0, "create_one_on_x_prior": 13, "create_optim": 8, "create_poisson_evolution_joint": 3, "create_poisson_tree_likelihood": 3, "create_rate_matrix": 62, "create_realnp_distribut": 0, "create_realnvp": 0, "create_sampl": 0, "create_scaler_oper": 10, "create_show_pars": 2, "create_site_model": 3, "create_site_model_srd06_mu": 3, "create_site_pattern": 3, "create_sliding_window_oper": 10, "create_stan_windowed_adapt": 4, "create_substitution_model": 3, "create_substitution_model_prior": 3, "create_taxa": 3, "create_time_tree_prior": 3, "create_tree_likelihood": 3, "create_tree_likelihood_gener": 3, "create_tree_likelihood_singl": 3, "create_tree_logg": 8, "create_tree_model": 3, "create_tril": 0, "create_ucln_prior": 3, "create_variational_model": 0, "create_variational_pars": 0, "create_weibull_distribut": 0, "creation": 31, "csv": 20, "ctmc": 30, "ctmc_scale": 35, "ctmcscale": 30, "cubo": 103, "cuda": [15, 21, 22, 30, 46, 57, 58, 62, 64, 68, 87, 92], "cumsumexptransform": 43, "cumsumsoftplustransform": 43, "cumsumtransform": 43, "curr": 97, "curran": [106, 107], "current": [82, 97, 108], "custom": 28, "cusuh": [105, 107], "cwclflf": 51, "d": [22, 34, 50, 95, 105, 106, 107], "dai": 14, "data": [11, 17, 20, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "data_typ": [3, 45, 46, 58, 61, 62], "datatyp": [45, 46, 52, 61, 62], "date": [53, 68], "date_format": 14, "david": 103, "dct": 28, "death": [47, 48], "debug": 28, "decod": 28, "decomposit": 0, "decor": 16, "def": [16, 23, 28], "default": [22, 23, 28, 33, 34, 68, 80, 82, 97, 106], "defin": [14, 16, 105], "del": 16, "delet": 16, "delta": [47, 72], "delta_elbo": 97, "delta_elbo_av": 97, "delta_elbo_m": 97, "delx": 16, "dendropi": 70, "densiti": [31, 32, 37, 39, 41, 47, 48, 50, 87, 90], "deriv": [14, 36], "desc": [3, 86], "descend": [47, 48], "design": 91, "desir": [22, 36], "det": [43, 55, 66], "detach": 22, "detail": 78, "detect": 67, "determin": [22, 43, 55, 66], "determinist": 31, "deterministic_norm": 35, "deterministicnorm": 31, "dev": [72, 93, 97], "deviat": [0, 38, 40], "devic": [15, 21, 22, 28, 30, 46, 57, 58, 62, 64, 68, 86, 87, 92], "diagnost": 97, "diagon": [0, 22, 43], "dic": [17, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "dict": [0, 3, 6, 7, 14, 17, 20, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 90, 97, 99, 100, 103, 105, 106], "dict_def": 6, "dict_paramet": 32, "dictionari": [6, 17, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "dieng": 103, "differ": [55, 66, 97, 108], "differencenodeheighttransform": 66, "differenti": [105, 107, 108], "dillon": [105, 107], "dim": [15, 22, 95], "dimens": [15, 22, 36, 74, 95, 105], "dimension": 105, "diment": 0, "dirichlet": 44, "dirichletoper": 83, "disabl": 80, "disable_adapt": 80, "disable_plugin": 12, "discret": 28, "dist": 32, "distal": 68, "distanc": 56, "distribt": 50, "distribut": [0, 3, 22, 28, 47, 48, 50, 55, 66, 71, 80, 82, 84, 87, 90, 100, 103, 105, 106], "distribution_paramet": 32, "distribution_typ": 3, "distributionmodel": [31, 32, 37, 39, 84, 87, 90, 103, 105, 106], "diverg": [103, 105, 106, 107], "doc": [16, 22, 32, 78], "docstr": 16, "document": 108, "doe": [36, 97], "doi": [29, 33, 42, 107], "domain": 43, "dot": 89, "doubl": 97, "draw": 84, "drawn": 31, "dtype": [15, 21, 22, 28, 30, 50, 57, 86, 87, 92], "dual": [72, 93], "dual_averag": 94, "dualaverag": 93, "dualaveragingsteps": [72, 78], "dumper": 20, "dure": [31, 78], "dustin": 103, "dx": [43, 55, 66], "dy": [43, 55, 66], "dynam": [33, 107], "e": [28, 33, 34, 47, 48, 50, 67, 105, 106, 107], "each": [36, 41, 47, 48, 50], "easi": 16, "easili": 108, "edg": 54, "edge_length": 54, "editor": [105, 106, 107], "effect": [33, 47], "effort": [47, 48], "eigen": [59, 62], "eisenschlo": [95, 107], "either": 1, "ejs1337si": [42, 107], "elaps": [30, 107], "elbo": [97, 105], "elbo_best": 97, "elbo_diff": 97, "elbo_prev": 97, "electron": [42, 107], "element": 0, "ellipsi": [22, 51], "els": [23, 28], "elsewher": 22, "empiricalsubstitutionmodel": [60, 62], "emul": 22, "encod": [23, 28, 51], "energy_funct": 88, "energyfunctionmodel": 86, "engin": 3, "ensure_ascii": [23, 28], "entropi": [31, 32, 37, 39, 87, 90, 105], "enum": 14, "enumer": 14, "ep": [31, 68, 90], "epidemiologi": 47, "epidemiology_to_birth_death": 47, "equal": [28, 80], "equival": [22, 105], "error": 27, "establish": [27, 74], "estim": [90, 96, 103, 105, 106], "et": [33, 44], "evalu": [31, 32, 37, 39, 41, 47, 48, 50, 87, 90, 97], "event": [15, 17, 21, 22, 25, 37, 44, 46, 47, 49, 50, 54, 56, 57, 58, 61, 62, 64, 67, 68, 73, 77, 103, 105, 106], "event_shap": [31, 32, 39], "everi": [20, 74, 82, 85, 97], "evid": 105, "evolut": [5, 20, 30, 33, 34, 44, 71, 80, 107], "evolutionari": 52, "exampl": [22, 23, 28, 29, 32, 33, 34, 40, 42, 43, 53, 68, 95, 108], "except": 23, "exclus": 105, "exist": [16, 36], "exit": 28, "exp": [32, 43], "exp_dic": 32, "exp_transform": 22, "expand": 36, "expand_pl": 28, "expon": 29, "exponenti": [3, 32, 43], "exponentialcoalesc": 50, "exponentialcoalescentmodel": 50, "exptransform": 22, "extend": [23, 28, 106, 108], "extens": [23, 28], "extern": [44, 108], "extract": 53, "extract_taxa": 53, "extract_tensors_and_paramet": 85, "ey": 22, "eye_lik": 22, "f": [20, 28, 89], "factor": 89, "factori": [68, 69], "faketreemodel": 50, "fals": [15, 22, 23, 24, 28, 46, 47, 50, 56, 58, 67, 68, 80, 82, 90, 95, 100, 105], "fast": [78, 108], "fdel": 16, "ferreira": [30, 107], "fget": 16, "field": [33, 34, 80], "file": [5, 20, 24, 53, 82, 106, 107], "file_nam": [3, 20, 24, 53, 97], "filenam": 45, "fill": 22, "final": 78, "find_reasonable_step_s": [72, 74], "find_step_s": 74, "fire_model_chang": 21, "fire_parameter_chang": [15, 22, 56], "first": [36, 67], "flag": [15, 22], "flatten": 0, "flexibletimetreemodel": 69, "float": [1, 22, 23, 28, 29, 34, 36, 38, 40, 42, 44, 50, 51, 56, 66, 67, 68, 69, 72, 76, 77, 80, 83, 95, 97, 106], "float64": 28, "flow": [88, 89, 90], "flowsequenti": 90, "follow": [22, 23, 28, 91], "force_list": 28, "form": [103, 106], "format": [53, 68, 69], "forward": [87, 89, 90], "fp": 53, "frac": [33, 34, 43, 47, 50, 55, 105], "frame": 28, "framework": [19, 71], "freq": [45, 67], "frequenc": [20, 59, 61, 62, 64, 67, 82], "from": [1, 14, 17, 21, 22, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 90, 93, 97, 99, 100, 103, 105, 106, 108], "from_json": [17, 20, 22, 27, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "from_json_saf": 27, "fs08": 107, "fset": 16, "fukumizu": [105, 107], "full": [22, 82], "full_lik": 22, "full_nam": 28, "function": [16, 31, 32, 33, 37, 39, 41, 43, 48, 66, 87, 90, 97, 100, 105], "further": 78, "g": [28, 29, 107], "gallagh": [105, 107], "gamma": [34, 36, 42, 44, 50, 72, 80, 93], "garnett": [106, 107], "gather_paramet": 0, "gaussian": [33, 80], "gener": [14, 31, 32, 37, 39, 43, 50, 55, 60, 63, 66, 87, 90], "generaldatatyp": 51, "generaljc69": 62, "generalnodeheighttransform": 66, "generalnonsymmetricsubstitutionmodel": 62, "generalsymmetricsubstitutionmodel": 62, "genetic_cod": 51, "genetic_code_nam": 51, "genetic_code_t": 51, "geq": 43, "get": [16, 45, 53], "get_class": 28, "get_engin": 3, "getattr": 28, "getter": [15, 22, 56], "getx": 16, "gibb": [29, 107], "gill": [33, 107], "git": 108, "github": [90, 108], "give": [47, 48], "given": [28, 41, 43, 55, 66], "glb": 107, "global": [29, 42], "global_scal": 42, "gmrf": [10, 34, 35, 80], "gmrf_block_upd": 81, "gmrf_dic": [33, 34], "gmrf_integr": 35, "gmrfcovari": [33, 80], "gmrfgammaintegr": 34, "gmrfpiecewisecoalescentblockupdatingoper": 80, "gobal_scal": 42, "grad": 22, "grad_fn": 22, "gradient": [15, 22, 66, 80, 105, 108], "graph": [22, 28], "grid": 50, "group_map": 0, "growth": 50, "gtr": 64, "guarante": [29, 107], "guyon": [106, 107], "ha": [47, 48, 95], "ham": [105, 107], "hamiltonian": [72, 74, 75, 108], "handle_model_chang": [17, 21, 22, 25, 29, 31, 42, 46, 48, 49, 56, 57, 58, 61, 62, 64, 68, 86], "handle_parameter_chang": [17, 21, 22, 25, 37, 44, 46, 49, 54, 56, 57, 58, 61, 62, 64, 67, 68, 73, 77, 103, 105, 106], "has_rsampl": [36, 50], "height": [33, 34, 50, 53, 56, 66, 68, 69, 70, 80], "heights_from_branch_length": 68, "heights_need_upd": 68, "heights_to_branch_length": 68, "helper": [11, 25, 26], "heterochorn": 53, "heterochron": 68, "hidden_s": 90, "hky": 64, "hmc": [5, 79], "hmcoper": 77, "horsesho": [42, 107], "html": [22, 32, 78, 105, 107], "http": [22, 23, 28, 32, 78, 90, 105, 106, 107, 108], "i": [0, 3, 15, 16, 21, 22, 28, 29, 33, 34, 36, 42, 43, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 80, 82, 86, 89, 97, 105, 106, 107, 108], "id": [6, 14, 17, 18, 20, 22, 27, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 90, 92, 97, 99, 100, 102, 103, 105, 106], "id_": [0, 3, 4, 8, 10, 13, 15, 17, 18, 21, 22, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 76, 77, 80, 82, 83, 84, 86, 87, 90, 92, 100, 103, 105, 106], "idea": 34, "identifi": [15, 19, 20, 21, 22, 29, 32, 33, 34, 42, 44, 45, 51, 65, 72, 76, 77, 80, 82, 83, 84, 100, 103, 106, 107], "idx": 28, "ignor": [28, 33, 34], "immedi": 47, "implement": [22, 23, 28, 29, 30, 80, 82, 88, 89, 108], "import": [3, 105], "improp": 41, "inc": [106, 107], "includ": [22, 32, 108], "inclus": 105, "increas": 95, "indent": [23, 28], "independ": 37, "index": [15, 17, 21, 22, 25, 29, 31, 37, 42, 44, 46, 48, 49, 54, 56, 57, 58, 61, 62, 64, 67, 68, 73, 77, 86, 103, 105, 106], "index_str": 28, "indic": [3, 22, 58, 95], "indices_postord": 68, "individu": 47, "inf": [1, 67], "infecti": 47, "infer": [22, 43, 44, 71, 103, 105, 106, 107, 108], "infin": 28, "influenti": [44, 107], "inform": [42, 106, 107], "infti": 50, "ing": 16, "inherit": [11, 17, 21, 25, 26, 43, 50, 67, 73, 85, 86], "init_buff": 78, "initi": [20, 28, 78], "initialize_dates_from_taxa": 68, "innermost": 95, "input": [20, 43, 55, 66, 89, 95], "input_fil": 14, "input_s": [89, 90], "instanc": [22, 25, 36, 56, 82, 87, 90], "instanci": [32, 85], "instead": 105, "instrument": 105, "int": [1, 14, 15, 20, 21, 22, 23, 28, 30, 34, 45, 46, 51, 57, 58, 62, 64, 68, 72, 74, 76, 77, 78, 82, 83, 84, 87, 90, 92, 95, 97, 100, 106], "int_0": 50, "integ": 22, "integr": [34, 50, 72, 74, 75, 77], "intellig": [105, 107], "interact": [28, 108], "interest": 82, "interfac": [5, 15, 18, 20, 27, 74, 108], "intern": [44, 67, 68, 69, 95, 105, 107], "internal_height": [68, 69], "internal_heights_id": [68, 69], "interv": [50, 78], "inv": 43, "invari": 57, "invariantsitemodel": 57, "invers": [36, 50, 90], "inverse_cdf": 57, "inverse_gamma": 35, "inverse_mass_matrix": [72, 73], "inversegamma": 36, "invert": [22, 43], "io": 52, "ip": 33, "is_float": 3, "isinst": [22, 29, 32, 33, 34, 42], "iter": [23, 28, 74, 78, 82, 97, 100], "its": [28, 108], "j": [43, 66], "jacobian": [5, 22, 43, 55, 66, 80], "jame": [29, 107], "jan": [42, 107], "jc69": 64, "jess": [29, 107], "john": 103, "joint": [0, 4, 8, 9, 10, 31, 37, 73, 74, 77, 82, 103, 105, 106], "joint_distribut": 35, "jointdistributionmodel": 37, "joshua": [105, 107], "journal": [29, 30, 42, 107], "json": [5, 20, 22, 23, 24, 27, 28, 29, 32, 33, 34, 42, 44, 56, 68, 69, 74, 80, 82, 87, 92, 106], "json_factori": [22, 29, 30, 31, 32, 42, 49, 68, 69], "json_object": [0, 14, 28], "jsondecod": 28, "jsonencod": [23, 28], "jsonparseerror": [27, 28], "jsonserializ": [18, 20, 27, 74, 97, 99], "jth": 66, "juho": [42, 107], "julian": [95, 107], "k": [43, 64, 66, 67, 95, 105], "kamenbliznashki": 90, "kappa": [61, 64, 72, 93], "keep_branch_length": 68, "keepdim": 95, "kei": [14, 17, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 90, 92, 97, 99, 100, 103, 105, 106], "kenji": [105, 107], "kevin": [105, 107], "keyword": 82, "kinetic_energi": 73, "kl": 104, "klpq": 105, "klpqimport": 105, "klqp": 105, "knknttttrsrsiimiqhqhpppprrrrllllededaaaaggggvvvv": 51, "kullback": 105, "kwarg": [15, 20, 21, 22, 28, 30, 32, 57, 68, 69, 72, 74, 77, 80, 82, 83, 87, 92, 97, 99, 100], "l": 105, "lambda": [47, 48], "lambda_": [47, 48], "latest": 108, "layer": [87, 90], "ldot": 33, "leapfrogintegr": [72, 76], "learn": [72, 78, 95, 105, 107], "learnabl": 89, "least": [47, 48], "leav": 67, "lee": [106, 107], "left": [34, 50, 105], "leibler": 105, "lemei": [33, 107], "length": [1, 44, 54, 64, 68, 107], "length_of_tensor_in_dict_paramet": 14, "let": [23, 28, 33], "level": 28, "leverag": 108, "lg": 60, "li": [106, 107], "librari": 108, "like": [20, 23, 28], "likelihood": [54, 67, 108], "line": 5, "lineag": [47, 48], "linear": [3, 33, 43, 70], "linear_regress": 70, "linearmaskedcoupl": 90, "lineartransform": 43, "list": [0, 1, 6, 7, 14, 15, 17, 20, 22, 23, 24, 25, 28, 31, 32, 33, 37, 39, 45, 53, 56, 58, 59, 60, 61, 62, 64, 67, 68, 69, 77, 82, 83, 84, 85, 87, 90, 100, 105, 106], "list_of_float": 1, "list_or_int": 1, "listen": [15, 17, 21, 22, 56], "listparamet": [72, 74, 77, 85, 100, 102], "listtensor": [85, 102], "load": 82, "load_argu": [11, 12], "load_plugin": 12, "load_state_dict": [72, 76, 82, 83, 99, 100], "loc": [0, 31, 32, 39, 40, 42], "local": [29, 42], "local_scal": [29, 42], "locat": [31, 40, 42], "log": [0, 20, 22, 31, 32, 37, 38, 39, 41, 43, 47, 48, 50, 55, 66, 67, 82, 84, 87, 90, 105], "log_abs_det_jacobian": [22, 43, 55, 66, 89], "log_gamma": 90, "log_gamma_one_half": 30, "log_norm": [28, 35], "log_p": [47, 48], "log_prob": [31, 32, 37, 39, 40, 41, 47, 48, 50, 87, 90], "log_q": [47, 48], "logdifferenceratetransform": 55, "logger": [0, 3, 5, 19, 74, 82, 84, 100], "loggerinterfac": [20, 84], "lognorm": 38, "logsumexp": [66, 95], "logtransform": 43, "look": 6, "loos": [22, 91], "loss": [97, 100], "lower": [14, 43, 105], "lp": 21, "lp_needs_upd": 21, "lr_schedul": 98, "lt16": 107, "luxburg": [106, 107], "m": [16, 106, 107], "machin": [95, 105, 107], "maf": 90, "mai": 108, "main": [2, 101, 108], "make": [16, 18, 27, 43, 51, 55, 65, 66, 72, 74, 76, 77, 83], "make_unconstrain": 14, "manag": 16, "mandatori": [20, 22, 29, 32, 33, 34, 42, 44, 80, 82, 106], "mandev": [33, 107], "manual": 78, "manual_se": 28, "map": [5, 43, 45, 62], "marc": [29, 30, 33, 107], "marco": [30, 107], "markov": [30, 33, 34, 80, 82, 107, 108], "mask": 90, "mass": [31, 32, 37, 39, 41, 47, 48, 50, 78, 87, 90], "mass_matrix": [72, 73, 77], "mass_matrix_adaptor": 78, "massmatrixadaptor": 72, "mat": 67, "match": 32, "math": [1, 94], "mathbb": [66, 105], "mathcal": [40, 105], "matric": [64, 67], "matrix": [0, 43, 78, 95], "max": [1, 66], "max_iter": 97, "maxim": [100, 105], "maximum": [95, 97, 108], "maximum_likelihood": 50, "mc": 78, "mcmc": [5, 50, 77, 79], "mcmcoper": [77, 80, 82, 83], "mean": [33, 38, 39, 40, 42, 44, 96], "measur": 33, "memori": [15, 21, 22, 30, 36, 46, 57, 58, 62, 64, 68, 87, 92], "method": [17, 22, 23, 27, 28, 30, 31, 36, 37, 39, 45, 46, 47, 48, 49, 50, 51, 54, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 83, 86, 90, 95, 96, 97, 99, 100, 103, 105], "methodologi": [29, 107], "mg94": 61, "mid": [33, 34, 50], "min": 1, "minim": [103, 105], "mit": [105, 107], "mitochondri": 51, "mixtur": [42, 105, 107], "mixture_d": 42, "mlr": [105, 107], "model": [3, 6, 17, 19, 20, 22, 25, 29, 30, 31, 32, 33, 34, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 73, 74, 77, 80, 82, 84, 86, 92, 97, 100, 103, 105, 106, 107, 108], "modellisten": [17, 21, 25], "modifi": [16, 90, 108], "modul": [5, 19, 79, 91, 94, 98, 104], "modular": 108, "moduleparamet": 22, "mold": 51, "molecular": [44, 107, 108], "momentum": [73, 74, 90], "monitor": [21, 46, 49, 57, 58, 59, 60, 61, 62, 64, 68, 69], "monoton": 95, "mont": [80, 82, 105, 108], "month": 14, "more": [21, 46, 49, 57, 58, 59, 60, 61, 62, 64, 68, 69], "morningstar": [105, 107], "morningstar21b": [105, 107], "most": 105, "move": [15, 21, 22, 30, 46, 57, 58, 62, 64, 68, 87, 92], "mu": [40, 47, 48, 55, 57, 72, 93], "multi": 105, "multipl": [17, 21, 50, 67, 73, 86], "multivari": [39, 43], "multivariate_norm": 35, "multivariatenorm": 39, "mur12": 107, "murphi": [105, 107], "must": [29, 32, 33, 34], "mvh": 107, "mycoplasma": 51, "n": [33, 34, 40, 50, 67, 95, 103, 105, 107], "n_block": 90, "n_hidden": 90, "nabla": 105, "name": [22, 25, 28, 32, 36, 41, 47, 48, 50, 51, 53, 82], "nan": 28, "need": [15, 21, 22, 36, 41, 47, 48, 50, 67, 73, 86], "need_upd": [22, 56], "needs_upd": 57, "nesterov": [72, 93], "net": 90, "net_paramet": 90, "neural": [106, 107], "neurip": [106, 107], "new": [14, 16, 36], "newick": [53, 68, 69], "newton_raphson": 80, "nexu": 53, "nf": 71, "nichola": [29, 107], "nishimura": [29, 107], "nn": [22, 43, 71, 87, 89, 90], "node": [22, 50, 53, 55, 66, 67, 68, 69], "node_height": [47, 48, 50, 68], "non": [28, 47], "non_synonym": 61, "none": [0, 3, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 90, 92, 93, 96, 97, 99, 100, 103, 105], "noninfecti": 47, "nonsymmetricsubstitutionmodel": [59, 62], "norm": 59, "norm1": 40, "norm2": 40, "normal": [28, 31, 32, 35, 39, 42, 43, 62, 87, 88, 90, 105], "normal_d": 32, "normalizing_flow": 90, "normalizingflow": 87, "ns23": 107, "nuc_freq": 45, "nucleotid": [51, 63], "nucleotide_ambiguity_st": 51, "nucleotide_st": 51, "nucleotidedatatyp": 51, "null": [23, 28], "num_warmup": 78, "number": [1, 22, 23, 28, 29, 47, 50, 56, 67, 78, 82, 84, 97, 100, 103, 105, 106], "number_of_codon": 51, "numcoalev": 80, "nyi": [106, 107], "o": [23, 28], "obj": [14, 17, 20, 21, 22, 23, 25, 28, 29, 31, 42, 46, 48, 49, 56, 57, 58, 61, 62, 64, 68, 86], "object": [15, 16, 17, 18, 20, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 90, 92, 97, 99, 100, 103, 104, 105, 106], "object_hook": 28, "observ": [33, 47, 48], "one": [22, 29, 47, 48], "one_on_x": 35, "oneonx": 41, "ones": [16, 22], "ones_d": 22, "ones_lik": 22, "onli": [22, 29, 43, 55, 66], "onlin": [78, 96], "op": 71, "oper": [5, 22, 50, 75, 80, 81, 82, 95, 107], "optim": 71, "option": [1, 3, 20, 22, 29, 32, 33, 34, 42, 80, 82, 84, 100, 106], "order": [66, 103, 106], "ordereddict": [90, 92], "ordereddicttyp": [92, 102], "org": [22, 23, 28, 32, 78], "origin": [47, 48], "origin_is_root_edg": 47, "other": [17, 22, 23, 27, 28, 30, 31, 37, 39, 42, 45, 46, 47, 48, 49, 50, 51, 54, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 83, 86, 90, 97, 99, 100, 103, 105, 107], "otherwis": [15, 22, 23, 28], "output": [24, 43, 53, 55, 66, 95, 97], "outsid": 28, "over": [31, 32, 37, 39, 87, 90], "overrid": 36, "overwrit": [24, 100], "p": [33, 34, 50, 55, 103, 105, 106, 107], "p0": 47, "p_dic": 22, "p_t": [59, 62, 64], "p_t_analyt": 64, "pack": 24, "pack_tensor": 24, "packag": [19, 22, 32, 35, 52, 71, 79, 88, 91, 94, 98, 104, 108], "package_cont": 28, "package_nam": 28, "page": [29, 107], "pair": 28, "paislei": 103, "paper": [90, 106, 107], "paper_fil": [106, 107], "paradox": [44, 107], "param": [0, 14, 17, 22, 74, 85], "param2": 22, "paramet": [0, 3, 4, 6, 7, 8, 9, 10, 14, 15, 17, 18, 19, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 95, 97, 99, 100, 103, 105, 106], "parameter": [33, 34, 36, 38, 40, 43, 66], "parameter_encod": 19, "parameter_util": 19, "parameterencod": 23, "parameteriz": 35, "parameterlisten": [21, 22, 25, 77], "parameters_unr": [4, 9], "parametr": [19, 21, 22, 36, 38, 40, 46, 49, 57, 58, 59, 60, 61, 62, 64, 68, 69, 77, 85], "parent": [28, 53], "pars": [27, 85], "parse_distribut": 3, "parse_taxa": 53, "parse_transl": 53, "parse_tre": [53, 68], "parser": 3, "partial": [44, 51, 58, 67, 107], "pass": [23, 28], "past": [33, 107], "path": [0, 22, 24, 32, 53], "pathwis": 105, "pdf": [106, 107], "pe20": 107, "peel": 67, "per": [50, 90], "perform": [15, 21, 22, 28, 30, 57, 87, 92], "period": 78, "permut": 95, "perspect": [105, 107], "phi": 105, "philipp": [33, 107], "phylogenet": [44, 108], "physher": 108, "pi": [33, 34], "piecewis": [3, 47], "piecewiseconstantbirthdeath": 47, "piecewiseconstantcoalesc": 50, "piecewiseconstantcoalescentgrid": 50, "piecewiseconstantcoalescentgridmodel": 50, "piecewiseconstantcoalescentmodel": 50, "piecewiseexponentialcoalescentgrid": 50, "piecewiseexponentialcoalescentgridmodel": 50, "piecewiselinearcoalescentgrid": 50, "piecewiselinearcoalescentgridmodel": 50, "piironen": [42, 107], "pip": 108, "planar": 88, "planartransform": 89, "plot": 47, "plugin": [5, 12], "plugin_manag": 5, "pluginmanag": 12, "pmlr": [95, 105, 107], "point": 33, "poisson": 54, "poisson_tree_likelihood": 52, "poissontreelikelihood": 54, "polson": [29, 107], "popul": [33, 36, 47, 50, 107], "port": 90, "posit": [22, 43], "possibl": [23, 28], "post_index": 67, "posterior": [29, 50, 105, 107], "posteriori": 108, "postord": [67, 68], "potential_energi": 73, "precis": [33, 34, 39, 40, 80], "precision_matrix": [33, 39, 80], "predictor": 33, "present": [28, 47], "prespecifi": 1, "press": [105, 107], "prev": 97, "previou": 97, "prillo": [95, 107], "print": [28, 97], "print_graph": 28, "prior": [5, 29, 30, 33, 41, 42, 44, 107], "prob": 67, "probabilist": [105, 107], "probabl": [31, 32, 35, 37, 39, 41, 47, 48, 50, 57, 64, 67, 80, 87, 90], "proceed": [105, 106, 107], "process": [33, 47, 48, 106, 107], "process_al": 11, "process_coalesc": 11, "process_data_coales": 50, "process_object": 28, "process_object_numb": 29, "process_object_with_kei": 28, "process_tree_likelihood": 11, "prod_": [33, 34], "prod_i": 41, "product": [34, 50], "program": 108, "prop": 67, "propag": 66, "properti": [15, 16, 18, 21, 22, 28, 31, 32, 36, 39, 45, 49, 50, 51, 56, 57, 59, 60, 61, 62, 64, 68, 72, 77, 80, 83, 90, 92], "proport": [41, 67], "propos": [33, 80, 95], "propose_precis": 80, "propto": [33, 105], "protozoan": 51, "provid": [11, 22, 25, 26, 36, 42], "psi": [47, 48], "psw14": 107, "pv17": 107, "py": 36, "pypi": 108, "python": [20, 23, 28, 108], "pytorch": [22, 32, 108], "q": [33, 59, 61, 62, 64, 103, 105, 106], "q_i": 105, "quad": 105, "quantil": 57, "question": 28, "r": [47, 55, 66, 106, 107], "r_": 55, "r_i": 55, "rais": [23, 27, 28], "rajesh": 103, "rand": 43, "random": [28, 29, 31, 32, 33, 34, 39, 42, 80], "random_tree_from_height": 53, "ranganath": 103, "rannala": [44, 107], "rate": [0, 29, 30, 32, 34, 36, 44, 47, 48, 49, 50, 55, 56, 57, 59, 60, 61, 62, 64, 67, 70, 107], "rate_init": 3, "rate_transform": 52, "ratio": [44, 66, 68], "ratios_root_height": 68, "read_dates_from_csv": 14, "read_fasta_sequ": 45, "read_tre": 53, "read_tree_and_align": 53, "real": 28, "realnvp": 88, "recalcul": 67, "recogn": [23, 28], "recomput": [21, 50, 67, 73, 86], "record": 22, "recurs": 28, "reduc": 95, "refer": [30, 68, 69, 78], "referenc": [17, 20, 56, 87, 92], "register_class": 28, "register_model": 25, "register_paramet": 25, "registered_class": 28, "regress": 70, "regular": [29, 42, 72, 107], "reject": 83, "rel": [47, 97], "rel_differ": 97, "relative_tim": 47, "relax": [95, 107], "releas": 108, "remov": [14, 28, 47, 96], "removal_prob": 47, "remove_com": 28, "remove_constraint": 14, "remove_model_listen": 21, "remove_parameter_listen": 21, "remove_sampl": 96, "renyi": 104, "reparameter": [31, 32, 37, 39, 50, 87, 90], "reparameterizedtimetreemodel": 68, "repeat": 36, "replac": [0, 28], "replace_star_with_str": 28, "replace_wildcard_with_str": 28, "repres": [22, 33, 36, 41, 47, 50, 82, 103, 105, 106], "represent": [17, 20, 22, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "reproduct": 47, "requires_grad": [15, 22, 28], "rerais": 28, "rescal": [33, 34, 67, 80], "rescaledratetransform": 55, "research": [105, 107], "reset": 96, "respect": [34, 50], "restart": [72, 78, 93], "result": [22, 28], "retain": 95, "return": [0, 6, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 36, 37, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 82, 83, 84, 85, 86, 87, 90, 92, 95, 97, 99, 100, 103, 105], "rho": [47, 48], "richard": [106, 107], "right": [34, 50, 105], "rise": [47, 48], "roman": [33, 107], "root": [33, 34, 47, 56, 70, 71, 80], "root_height": [68, 70], "root_transform": 52, "rootparamet": 56, "royal": [29, 107], "rsampl": [31, 32, 37, 39, 50, 87, 90], "rssb": [29, 107], "rtype": 50, "rule": 28, "run": [20, 26, 74, 82, 84, 100, 101], "run_tree_regress": 3, "runnabl": [19, 20, 74, 82, 84, 100], "rzy12": 107, "r\u00e9nyi": 106, "s_net": 90, "safe": [24, 100], "sampl": [20, 21, 29, 31, 32, 37, 39, 47, 48, 50, 53, 56, 72, 77, 78, 80, 83, 84, 87, 90, 96, 97, 103, 105, 106, 107], "sample_momentum": [73, 74], "sample_shap": [21, 22, 31, 32, 37, 39, 50, 87, 90], "sampler": 79, "sampling_tim": 68, "satisfi": [36, 41, 43, 47, 48, 50], "save": [20, 24, 82], "save_full_st": [82, 100], "save_paramet": 24, "scalar": [22, 42, 95], "scale": [0, 29, 30, 31, 32, 38, 39, 40, 42, 55, 89], "scale_mixtur": 35, "scale_tril": [39, 43], "scalemixturenorm": 42, "scaler": [80, 83], "scaleroper": 83, "schedul": [99, 100], "scipi": 108, "score": 105, "scott": [29, 107], "screen": 82, "search": 95, "searchsort": 95, "sebastian": [95, 107], "see": [32, 78], "selbo": 105, "select": 95, "self": [16, 22, 23, 28, 105], "sens": [43, 55, 66], "separ": [23, 28], "sequec": 108, "sequenc": [28, 45, 58, 95], "sequence_s": 45, "sequenti": 90, "seri": [29, 107], "serial": 56, "serializ": [18, 19, 20, 23, 28, 74, 97, 99], "set": [0, 15, 16, 22, 28, 33, 56], "set_adaptable_paramet": [77, 80, 83], "set_tensor": 76, "setter": [15, 16, 22, 56], "setup_d": 68, "setup_index": 68, "setx": 16, "sgd": 97, "shannon": [33, 107], "shape": [15, 21, 22, 28, 30, 31, 32, 33, 34, 37, 39, 44, 50, 57, 67, 87, 89, 90, 105], "sharad": [105, 107], "shift": [47, 56, 68], "should": [1, 17, 22, 23, 28, 33, 34, 36, 41, 47, 48, 50], "shoulder": [29, 107], "shrinkag": [29, 42, 107], "shrunken": [29, 107], "side": 68, "sigma": [38, 40], "sign": [43, 55, 66], "signalhandl": 28, "signatur": 32, "signum": 28, "sim": [40, 105], "simpl": [28, 67], "simpleclockmodel": 49, "simplex": 14, "sinc": 67, "site": 67, "site_model": [3, 52, 67], "site_pattern": [3, 52, 67], "sitemodel": [57, 67], "sitepattern": [58, 67], "size": [15, 21, 22, 31, 32, 33, 36, 37, 39, 47, 50, 51, 72, 78, 87, 90, 97, 103, 105, 106], "skipkei": [23, 28], "skyglid": 3, "skygrid": [3, 33, 34], "skylin": 47, "skyrid": 3, "slab": [29, 42], "slice": [22, 28, 58], "slidingwindowoper": 83, "slow": 78, "smooth": 94, "smooth_max": 95, "smoothed_acceptance_r": 83, "so": 17, "societi": [29, 107], "soft_searchsort": 95, "soft_select": 95, "soft_sort": 95, "softpiecewiseconstantcoalescentgrid": 50, "softplustransform": 43, "softsort": [95, 107], "some": 108, "sort": 50, "sort_indic": 66, "sort_kei": [23, 28], "sorted_sequ": 95, "sourc": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 105, 106], "sparsiti": [42, 107], "spec": 28, "specif": [6, 22], "specifi": [3, 22, 29, 33, 34, 82], "split": 53, "split_newick": 53, "sqrt": [33, 34], "sqrt_mass_matrix": 72, "sqrt_pi": 62, "sqrt_pi_inv": 62, "stabl": [22, 32], "stackoverflow": 28, "stan": [72, 78, 93, 97], "stan_adapt": 75, "standard": [0, 11, 25, 26, 31, 38, 40, 105], "stanvariationalconverg": 97, "stanwindowedadapt": 78, "start": [14, 28, 47, 48, 68, 97], "state": [51, 67, 82, 108], "state_count": [51, 62], "state_dict": [72, 76, 82, 83, 99, 100], "static": [22, 29, 30, 31, 32, 42, 49, 62, 68, 69, 97], "statist": [29, 30, 41, 42, 50, 79, 93, 105, 107], "stdev": 38, "stdout": 97, "steam": 68, "step": [72, 76, 78, 83, 93, 99], "step_siz": [72, 76], "step_size_adaptor": 78, "stop": 28, "stop_count": 51, "str": [0, 3, 6, 7, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 90, 92, 97, 99, 100, 103, 105, 106], "str_or_float": 1, "stratifi": 105, "stream": 68, "strictclockmodel": 49, "string": [1, 23, 28, 29, 32, 33, 34, 42, 44, 51, 53, 80, 106], "string_to_list_index": 28, "structur": [23, 28], "sub": 21, "subclass": [23, 28, 36], "subpars": [11, 12], "subpras": [0, 2, 4, 8, 9], "subst_model": 67, "substitut": [30, 55, 56, 70], "substitution_model": [3, 52, 67], "substitutionmodel": [59, 62, 64, 67], "substmodel_id": 3, "suchard": [29, 30, 33, 107], "suffici": 50, "sufficient_statist": 50, "sugiyama": [106, 107], "sum": [33, 43, 55], "sum_": [34, 43, 50, 105], "sum_i": 105, "sum_log_abs_det_jacobian": [87, 90], "superclass": [23, 28], "support": [23, 28, 36, 41, 47, 50], "surviv": [47, 48], "sy": 97, "symmetricsubstitutionmodel": [59, 61, 62, 64], "synonym": 61, "sysbio": [33, 107], "system": [106, 107], "systemat": [33, 107], "syw050": [33, 107], "t": [22, 47, 48, 50, 67, 89], "t0": [72, 93], "t1": 28, "t2": 28, "t3": 28, "t_0": [47, 48], "t_dic": 22, "t_i": [47, 48, 50], "t_m": [47, 48], "t_net": 90, "tabl": 51, "tag": [21, 68], "tail": [44, 107], "tanh": 89, "target": 80, "target_acceptance_prob": [72, 77, 80, 83], "tau": [33, 34, 40, 95, 105], "taxa": [3, 45, 46, 52, 53, 68, 69], "taxa_count": [3, 66, 68], "taxa_id": 68, "taxon": [53, 65, 68], "temperatur": [50, 95], "temporari": 24, "tensor": [0, 15, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 70, 72, 73, 76, 77, 78, 83, 85, 87, 89, 90, 92, 95, 96, 103], "tensor2": 22, "tensor_rand": 28, "tensordecod": 28, "tensorencod": 28, "tensorflow": 108, "term_buff": 78, "text": 105, "thank": 108, "them": 29, "theta": [13, 50], "thi": [6, 14, 15, 17, 21, 22, 23, 28, 29, 31, 36, 41, 43, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 86, 88, 91, 94, 95, 98, 104], "thing": [20, 84], "threshold": 67, "through": 5, "tianqi": [44, 107], "tild": [55, 105], "time": [21, 29, 30, 33, 34, 47, 48, 50, 67, 73, 86, 107], "timetreemodel": [33, 34, 47, 48, 50, 54, 66, 68, 69], "tip": 67, "to_nexu": 53, "tol_rel_obj": 97, "toler": 97, "tolist": 22, "topologi": 66, "torch": [0, 15, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 72, 73, 76, 77, 78, 83, 87, 89, 90, 91, 92, 95, 96, 97, 99, 100, 103, 105, 106], "total": 47, "tradit": 106, "trait": 3, "tran": 103, "transform": [6, 22, 31, 35, 55, 56, 66, 68, 69, 87, 89], "transformeddistribut": 36, "transformedparamet": [6, 22], "transit": [61, 64], "translat": 28, "transmiss": 47, "tree": [20, 30, 33, 34, 44, 49, 53, 54, 56, 66, 67, 68, 69, 70, 108], "tree_height_transform": 52, "tree_id": [3, 8, 13], "tree_likelihood": 52, "tree_model": [3, 20, 30, 33, 34, 44, 47, 48, 49, 50, 52, 54, 55, 66, 67, 69], "tree_model_flex": 52, "tree_prior": 35, "tree_regress": 52, "treelikelihoodmodel": 67, "treelogg": 20, "treemodel": [20, 30, 49, 55, 67, 68], "triangular": 43, "tridiagon": 0, "tril": 39, "trilexpdiagonaltransform": 43, "triplet": 51, "true": [15, 21, 22, 23, 24, 28, 29, 32, 33, 34, 36, 40, 42, 43, 47, 48, 50, 51, 53, 55, 57, 58, 66, 68, 72, 95, 100], "try": [23, 28, 53], "tune": [77, 80, 83], "tuning_paramet": [77, 80, 83], "tupl": [0, 14, 22, 23, 28, 50, 51, 58, 70, 85, 87, 95], "turner": [106, 107], "two": 97, "type": [6, 15, 17, 20, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 90, 92, 95, 97, 99, 100, 103, 105, 106], "typeerror": [23, 28], "typic": 16, "u": [89, 90, 106, 107], "u_hat": 89, "unconstrain": 22, "underflow": 67, "underli": [32, 50], "underscor": 28, "understand": [28, 33, 107], "undesir": 28, "uniform": 28, "union": 22, "uniqu": [29, 32, 33, 34, 42, 44, 80, 103, 106], "univariatediscretizedsitemodel": 57, "univers": 51, "unroot": 44, "unrootedtreemodel": [44, 68], "updat": [17, 22, 50, 80], "update_bound": 66, "update_leaf_height": 68, "update_mass_matric": 77, "update_node_height": 68, "update_paramet": 28, "update_r": 57, "update_rates_prob": 57, "update_travers": 68, "upper": [14, 103], "url": [105, 106, 107], "us": [0, 1, 3, 11, 16, 21, 22, 25, 26, 28, 30, 31, 32, 33, 34, 39, 43, 46, 50, 54, 56, 57, 58, 62, 64, 66, 67, 68, 70, 72, 73, 82, 86, 87, 89, 92, 95, 97, 105, 108], "use_ambigu": [46, 51, 58, 67], "use_tip_st": 67, "userdict": 65, "userlist": [45, 65], "util": [5, 19, 79, 94], "v130": [105, 107], "valid": 28, "validate_arg": [36, 38, 40, 41, 47, 48, 50], "valu": [0, 3, 16, 20, 21, 22, 28, 31, 32, 34, 37, 39, 41, 47, 48, 50, 67, 73, 77, 80, 83, 86, 87, 90, 95, 97], "var_id": 0, "variabl": [17, 21, 22, 25, 29, 31, 32, 37, 39, 42, 44, 46, 49, 54, 56, 57, 58, 61, 62, 64, 67, 68, 73, 77, 103, 105, 106], "varianc": [0, 96], "variance_estim": 72, "variance_estimator2": 72, "variat": [0, 31, 43, 71, 107, 108], "variationalconverg": 97, "vehtari": [42, 107], "version": [29, 108], "vertebr": 51, "via": [43, 103], "view": 22, "viewparamet": 22, "vikram": [105, 107], "volum": [105, 106, 107], "vr": 106, "w": [3, 33, 89], "w1": 86, "w2": 86, "w3": 86, "w_": 105, "w_1": 33, "w_i": 33, "w_n": 33, "wa": 95, "wag": 60, "wai": [11, 22, 25, 26], "warmup": 78, "warmup_adaptor": 74, "warmupadapt": 72, "warren": [105, 107], "we": [21, 50, 67, 73, 86], "weibullsitemodel": 57, "weight": [33, 34, 43, 58, 67, 77, 80, 83, 89, 105], "welford": 94, "welfordvari": 96, "when": [1, 36, 42, 66, 67], "where": [15, 22, 33, 40, 43, 66, 89, 105], "whether": 95, "which": [28, 47, 48], "widehat": 105, "width": [29, 42, 78, 83], "wildcard": 28, "windl": [29, 107], "window": 78, "without": [21, 50, 67, 73, 86, 108], "wnativ": 80, "wrap": [22, 28], "wrapper": [28, 32, 92, 99, 100], "writ": 20, "write": 20, "write_newick": 68, "writer": 20, "wrt": 105, "x": [0, 16, 22, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 55, 66, 86, 87, 89, 90, 92, 93, 96, 105], "x_": [33, 34, 66], "x_c": 66, "x_dict": 32, "x_i": [33, 34, 41, 43, 66], "x_j": 43, "x_unr": 0, "xa": 43, "y": [32, 43, 51, 55, 66, 89, 90], "y_i": [43, 55, 66], "yang": [44, 107], "year": 14, "yeast": 51, "yingzhen": [106, 107], "you": [23, 28], "yssss": 51, "z": [33, 86, 89, 105], "z_": 33, "z_i": 33, "zero": [0, 22, 33, 47], "zero_or_path": 1, "zeros_lik": 22, "zhang": 34, "zhu": [44, 107], "ziheng": [44, 107], "\u00e9": [106, 107]}, "titles": ["torchtree.cli.advi", "torchtree.cli.argparse_utils", "torchtree.cli.cli", "torchtree.cli.evolution", "torchtree.cli.hmc", "torchtree.cli", "torchtree.cli.jacobians", "torchtree.cli.loggers", "torchtree.cli.map", "torchtree.cli.mcmc", "torchtree.cli.operators", "torchtree.cli.plugin", "torchtree.cli.plugin_manager", "torchtree.cli.priors", "torchtree.cli.utils", "torchtree.core.abstractparameter", "torchtree.core.classproperty_decorator", "torchtree.core.container", "torchtree.core.identifiable", "torchtree.core", "torchtree.core.logger", "torchtree.core.model", "torchtree.core.parameter", "torchtree.core.parameter_encoder", "torchtree.core.parameter_utils", "torchtree.core.parametric", "torchtree.core.runnable", "torchtree.core.serializable", "torchtree.core.utils", "torchtree.distributions.bayesian_bridge", "torchtree.distributions.ctmc_scale", "torchtree.distributions.deterministic_normal", "torchtree.distributions.distributions", "torchtree.distributions.gmrf", "torchtree.distributions.gmrf_integrated", "torchtree.distributions", "torchtree.distributions.inverse_gamma", "torchtree.distributions.joint_distribution", "torchtree.distributions.log_normal", "torchtree.distributions.multivariate_normal", "torchtree.distributions.normal", "torchtree.distributions.one_on_x", "torchtree.distributions.scale_mixture", "torchtree.distributions.transforms", "torchtree.distributions.tree_prior", "torchtree.evolution.alignment", "torchtree.evolution.attribute_pattern", "torchtree.evolution.bdsk", "torchtree.evolution.birth_death", "torchtree.evolution.branch_model", "torchtree.evolution.coalescent", "torchtree.evolution.datatype", "torchtree.evolution", "torchtree.evolution.io", "torchtree.evolution.poisson_tree_likelihood", "torchtree.evolution.rate_transform", "torchtree.evolution.root_transform", "torchtree.evolution.site_model", "torchtree.evolution.site_pattern", "torchtree.evolution.substitution_model.abstract", "torchtree.evolution.substitution_model.amino_acid", "torchtree.evolution.substitution_model.codon", "torchtree.evolution.substitution_model.general", "torchtree.evolution.substitution_model", "torchtree.evolution.substitution_model.nucleotide", "torchtree.evolution.taxa", "torchtree.evolution.tree_height_transform", "torchtree.evolution.tree_likelihood", "torchtree.evolution.tree_model", "torchtree.evolution.tree_model_flexible", "torchtree.evolution.tree_regression", "torchtree", "torchtree.inference.hmc.adaptation", "torchtree.inference.hmc.hamiltonian", "torchtree.inference.hmc.hmc", "torchtree.inference.hmc", "torchtree.inference.hmc.integrator", "torchtree.inference.hmc.operator", "torchtree.inference.hmc.stan_adaptation", "torchtree.inference", "torchtree.inference.mcmc.gmrf_block_updating", "torchtree.inference.mcmc", "torchtree.inference.mcmc.mcmc", "torchtree.inference.mcmc.operator", "torchtree.inference.sampler", "torchtree.inference.utils", "torchtree.nf.energy_functions", "torchtree.nf.flow", "torchtree.nf", "torchtree.nf.planar", "torchtree.nf.realnvp", "torchtree.nn", "torchtree.nn.module", "torchtree.ops.dual_averaging", "torchtree.ops", "torchtree.ops.smooth", "torchtree.ops.welford", "torchtree.optim.convergence", "torchtree.optim", "torchtree.optim.lr_scheduler", "torchtree.optim.optimizer", "torchtree.torchtree", "torchtree.typing", "torchtree.variational.chi", "torchtree.variational", "torchtree.variational.kl", "torchtree.variational.renyi", "Bibliography", "Welcome to torchtree!"], "titleterms": {"abstract": 59, "abstractparamet": 15, "adapt": 72, "advi": 0, "align": 45, "amino_acid": 60, "argparse_util": 1, "attribut": [0, 3, 5, 14, 28, 45, 102], "attribute_pattern": 46, "bayesian_bridg": 29, "bdsk": 47, "bibliographi": 107, "birth_death": 48, "branch_model": 49, "chi": 103, "class": [11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 93, 96, 97, 99, 100, 103, 105, 106], "classproperty_decor": 16, "cli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "coalesc": 50, "codon": 61, "contain": 17, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106], "converg": 97, "core": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "ctmc_scale": 30, "datatyp": 51, "deterministic_norm": 31, "distribut": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "dual_averag": 93, "energy_funct": 86, "evolut": [3, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "except": 28, "flow": 87, "function": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 24, 28, 29, 45, 47, 50, 53, 58, 67, 68, 70, 72, 76, 85, 86, 95, 101], "gener": 62, "gmrf": 33, "gmrf_block_upd": 80, "gmrf_integr": 34, "hamiltonian": 73, "hmc": [4, 72, 73, 74, 75, 76, 77, 78], "identifi": 18, "infer": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "ins": 108, "instal": 108, "integr": 76, "inverse_gamma": 36, "io": 53, "jacobian": 6, "joint_distribut": 37, "kl": 105, "log_norm": 38, "logger": [7, 20], "lr_schedul": 99, "map": 8, "mcmc": [9, 80, 81, 82, 83], "model": 21, "modul": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106], "multivariate_norm": 39, "nf": [86, 87, 88, 89, 90], "nn": [91, 92], "normal": 40, "nucleotid": 64, "one_on_x": 41, "op": [93, 94, 95, 96], "oper": [10, 77, 83], "optim": [97, 98, 99, 100], "packag": 5, "paramet": 22, "parameter_encod": 23, "parameter_util": 24, "parametr": 25, "planar": 89, "plug": 108, "plugin": 11, "plugin_manag": 12, "poisson_tree_likelihood": 54, "prior": 13, "rate_transform": 55, "realnvp": 90, "renyi": 106, "root_transform": 56, "runnabl": 26, "sampler": 84, "scale_mixtur": 42, "serializ": 27, "site_model": 57, "site_pattern": 58, "smooth": 95, "stan_adapt": 78, "submodul": [5, 19, 35, 52, 63, 71, 75, 79, 81, 88, 91, 94, 98, 104], "substitution_model": [59, 60, 61, 62, 63, 64], "taxa": 65, "torchtre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108], "transform": 43, "tree_height_transform": 66, "tree_likelihood": 67, "tree_model": 68, "tree_model_flex": 69, "tree_prior": 44, "tree_regress": 70, "type": 102, "util": [14, 28, 85], "variat": [103, 104, 105, 106], "welcom": 108, "welford": 96}})