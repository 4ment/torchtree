Search.setIndex({"alltitles": {"1 - Generating a configuration file": [[114, "generating-a-configuration-file"]], "1. Markov Process Basics": [[66, "markov-process-basics"]], "2 - Running torchtree": [[114, "running-torchtree"]], "2. Probability Matrix and Time Evolution": [[66, "probability-matrix-and-time-evolution"]], "3. Stationary Distribution": [[66, "stationary-distribution"]], "4. Markov Substitution in Phylogenetics": [[66, "markov-substitution-in-phylogenetics"]], "Advanced": [[115, null]], "Attributes": [[3, "attributes"], [6, "attributes"], [8, "attributes"], [17, "attributes"], [31, "attributes"], [48, "attributes"], [105, "attributes"]], "Benchmark": [[0, null]], "Bibliography": [[110, null]], "Building blocks": [[1, null]], "Building torchtree from source": [[112, "building-torchtree-from-source"]], "Classes": [[14, "classes"], [15, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [83, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [89, "classes"], [90, "classes"], [92, "classes"], [93, "classes"], [95, "classes"], [96, "classes"], [99, "classes"], [100, "classes"], [102, "classes"], [103, "classes"], [106, "classes"], [108, "classes"], [109, "classes"]], "Exceptions": [[31, "exceptions"]], "Features": [[111, null]], "Functions": [[3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [16, "functions"], [17, "functions"], [27, "functions"], [31, "functions"], [32, "functions"], [48, "functions"], [50, "functions"], [53, "functions"], [56, "functions"], [61, "functions"], [70, "functions"], [71, "functions"], [73, "functions"], [75, "functions"], [79, "functions"], [88, "functions"], [89, "functions"], [98, "functions"], [104, "functions"]], "Getting Started": [[115, null]], "How to cite": [[115, "how-to-cite"]], "Inference algorithms": [[111, "inference-algorithms"]], "Input files": [[113, null]], "Installation": [[112, null], [115, "installation"]], "Installing the latest stable version": [[112, "installing-the-latest-stable-version"]], "JSON file format": [[113, "json-file-format"]], "Models and CallableModels": [[1, "models-and-callablemodels"]], "Module Contents": [[3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [83, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [92, "module-contents"], [93, "module-contents"], [95, "module-contents"], [96, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [108, "module-contents"], [109, "module-contents"]], "Package Contents": [[8, "package-contents"]], "Parameter object": [[1, "parameter-object"]], "Phylogenetic models": [[111, "phylogenetic-models"]], "Phylogenetic priors": [[111, "phylogenetic-priors"]], "Plotting the results": [[114, "plotting-the-results"]], "Programs Installed": [[112, "programs-installed"]], "Programs compared in the benchmark": [[0, "id6"]], "Quick start": [[114, null]], "Submodules": [[8, "submodules"], [22, "submodules"], [38, "submodules"], [55, "submodules"], [66, "submodules"], [74, "submodules"], [78, "submodules"], [82, "submodules"], [84, "submodules"], [91, "submodules"], [94, "submodules"], [97, "submodules"], [101, "submodules"], [107, "submodules"]], "Time tree with strict clock and constant coalescent model": [[114, "time-tree-with-strict-clock-and-constant-coalescent-model"]], "TransformedParameter object": [[1, "transformedparameter-object"]], "Tree likelihood model": [[2, null]], "Unrooted tree with GTR+W4 model": [[114, "unrooted-tree-with-gtr-w4-model"]], "Welcome to torchtree!": [[115, null]], "torchtree": [[74, null]], "torchtree model specification": [[113, "torchtree-model-specification"]], "torchtree.cli": [[8, null]], "torchtree.cli.advi": [[3, null]], "torchtree.cli.argparse_utils": [[4, null]], "torchtree.cli.cli": [[5, null]], "torchtree.cli.evolution": [[6, null]], "torchtree.cli.hmc": [[7, null]], "torchtree.cli.jacobians": [[9, null]], "torchtree.cli.loggers": [[10, null]], "torchtree.cli.map": [[11, null]], "torchtree.cli.mcmc": [[12, null]], "torchtree.cli.operators": [[13, null]], "torchtree.cli.plugin": [[14, null]], "torchtree.cli.plugin_manager": [[15, null]], "torchtree.cli.priors": [[16, null]], "torchtree.cli.utils": [[17, null]], "torchtree.core": [[22, null]], "torchtree.core.abstractparameter": [[18, null]], "torchtree.core.classproperty_decorator": [[19, null]], "torchtree.core.container": [[20, null]], "torchtree.core.identifiable": [[21, null]], "torchtree.core.logger": [[23, null]], "torchtree.core.model": [[24, null]], "torchtree.core.parameter": [[25, null]], "torchtree.core.parameter_encoder": [[26, null]], "torchtree.core.parameter_utils": [[27, null]], "torchtree.core.parametric": [[28, null]], "torchtree.core.runnable": [[29, null]], "torchtree.core.serializable": [[30, null]], "torchtree.core.utils": [[31, null]], "torchtree.distributions": [[38, null]], "torchtree.distributions.bayesian_bridge": [[32, null]], "torchtree.distributions.ctmc_scale": [[33, null]], "torchtree.distributions.deterministic_normal": [[34, null]], "torchtree.distributions.distributions": [[35, null]], "torchtree.distributions.gmrf": [[36, null]], "torchtree.distributions.gmrf_integrated": [[37, null]], "torchtree.distributions.inverse_gamma": [[39, null]], "torchtree.distributions.joint_distribution": [[40, null]], "torchtree.distributions.log_normal": [[41, null]], "torchtree.distributions.multivariate_normal": [[42, null]], "torchtree.distributions.normal": [[43, null]], "torchtree.distributions.one_on_x": [[44, null]], "torchtree.distributions.scale_mixture": [[45, null]], "torchtree.distributions.transforms": [[46, null]], "torchtree.distributions.tree_prior": [[47, null]], "torchtree.evolution": [[55, null]], "torchtree.evolution.alignment": [[48, null]], "torchtree.evolution.attribute_pattern": [[49, null]], "torchtree.evolution.bdsk": [[50, null]], "torchtree.evolution.birth_death": [[51, null]], "torchtree.evolution.branch_model": [[52, null]], "torchtree.evolution.coalescent": [[53, null]], "torchtree.evolution.datatype": [[54, null]], "torchtree.evolution.io": [[56, null]], "torchtree.evolution.poisson_tree_likelihood": [[57, null]], "torchtree.evolution.rate_transform": [[58, null]], "torchtree.evolution.root_transform": [[59, null]], "torchtree.evolution.site_model": [[60, null]], "torchtree.evolution.site_pattern": [[61, null]], "torchtree.evolution.substitution_model": [[66, null]], "torchtree.evolution.substitution_model.abstract": [[62, null]], "torchtree.evolution.substitution_model.amino_acid": [[63, null]], "torchtree.evolution.substitution_model.codon": [[64, null]], "torchtree.evolution.substitution_model.general": [[65, null]], "torchtree.evolution.substitution_model.nucleotide": [[67, null]], "torchtree.evolution.taxa": [[68, null]], "torchtree.evolution.tree_height_transform": [[69, null]], "torchtree.evolution.tree_likelihood": [[70, null]], "torchtree.evolution.tree_model": [[71, null]], "torchtree.evolution.tree_model_flexible": [[72, null]], "torchtree.evolution.tree_regression": [[73, null]], "torchtree.inference": [[82, null]], "torchtree.inference.hmc": [[78, null]], "torchtree.inference.hmc.adaptation": [[75, null]], "torchtree.inference.hmc.hamiltonian": [[76, null]], "torchtree.inference.hmc.hmc": [[77, null]], "torchtree.inference.hmc.integrator": [[79, null]], "torchtree.inference.hmc.operator": [[80, null]], "torchtree.inference.hmc.stan_adaptation": [[81, null]], "torchtree.inference.mcmc": [[84, null]], "torchtree.inference.mcmc.gmrf_block_updating": [[83, null]], "torchtree.inference.mcmc.mcmc": [[85, null]], "torchtree.inference.mcmc.operator": [[86, null]], "torchtree.inference.sampler": [[87, null]], "torchtree.inference.utils": [[88, null]], "torchtree.nf": [[91, null]], "torchtree.nf.energy_functions": [[89, null]], "torchtree.nf.flow": [[90, null]], "torchtree.nf.planar": [[92, null]], "torchtree.nf.realnvp": [[93, null]], "torchtree.nn": [[94, null]], "torchtree.nn.module": [[95, null]], "torchtree.ops": [[97, null]], "torchtree.ops.dual_averaging": [[96, null]], "torchtree.ops.smooth": [[98, null]], "torchtree.ops.welford": [[99, null]], "torchtree.optim": [[101, null]], "torchtree.optim.convergence": [[100, null]], "torchtree.optim.lr_scheduler": [[102, null]], "torchtree.optim.optimizer": [[103, null]], "torchtree.torchtree": [[104, null]], "torchtree.typing": [[105, null]], "torchtree.variational": [[107, null]], "torchtree.variational.chi": [[106, null]], "torchtree.variational.kl": [[108, null]], "torchtree.variational.renyi": [[109, null]]}, "docnames": ["advanced/benchmark", "advanced/concepts", "advanced/tree_likelihood", "autoapi/torchtree/cli/advi/index", "autoapi/torchtree/cli/argparse_utils/index", "autoapi/torchtree/cli/cli/index", "autoapi/torchtree/cli/evolution/index", "autoapi/torchtree/cli/hmc/index", "autoapi/torchtree/cli/index", "autoapi/torchtree/cli/jacobians/index", "autoapi/torchtree/cli/loggers/index", "autoapi/torchtree/cli/map/index", "autoapi/torchtree/cli/mcmc/index", "autoapi/torchtree/cli/operators/index", "autoapi/torchtree/cli/plugin/index", "autoapi/torchtree/cli/plugin_manager/index", "autoapi/torchtree/cli/priors/index", "autoapi/torchtree/cli/utils/index", "autoapi/torchtree/core/abstractparameter/index", "autoapi/torchtree/core/classproperty_decorator/index", "autoapi/torchtree/core/container/index", "autoapi/torchtree/core/identifiable/index", "autoapi/torchtree/core/index", "autoapi/torchtree/core/logger/index", "autoapi/torchtree/core/model/index", "autoapi/torchtree/core/parameter/index", "autoapi/torchtree/core/parameter_encoder/index", "autoapi/torchtree/core/parameter_utils/index", "autoapi/torchtree/core/parametric/index", "autoapi/torchtree/core/runnable/index", "autoapi/torchtree/core/serializable/index", "autoapi/torchtree/core/utils/index", "autoapi/torchtree/distributions/bayesian_bridge/index", "autoapi/torchtree/distributions/ctmc_scale/index", "autoapi/torchtree/distributions/deterministic_normal/index", "autoapi/torchtree/distributions/distributions/index", "autoapi/torchtree/distributions/gmrf/index", "autoapi/torchtree/distributions/gmrf_integrated/index", "autoapi/torchtree/distributions/index", "autoapi/torchtree/distributions/inverse_gamma/index", "autoapi/torchtree/distributions/joint_distribution/index", "autoapi/torchtree/distributions/log_normal/index", "autoapi/torchtree/distributions/multivariate_normal/index", "autoapi/torchtree/distributions/normal/index", "autoapi/torchtree/distributions/one_on_x/index", "autoapi/torchtree/distributions/scale_mixture/index", "autoapi/torchtree/distributions/transforms/index", "autoapi/torchtree/distributions/tree_prior/index", "autoapi/torchtree/evolution/alignment/index", "autoapi/torchtree/evolution/attribute_pattern/index", "autoapi/torchtree/evolution/bdsk/index", "autoapi/torchtree/evolution/birth_death/index", "autoapi/torchtree/evolution/branch_model/index", "autoapi/torchtree/evolution/coalescent/index", "autoapi/torchtree/evolution/datatype/index", "autoapi/torchtree/evolution/index", "autoapi/torchtree/evolution/io/index", "autoapi/torchtree/evolution/poisson_tree_likelihood/index", "autoapi/torchtree/evolution/rate_transform/index", "autoapi/torchtree/evolution/root_transform/index", "autoapi/torchtree/evolution/site_model/index", "autoapi/torchtree/evolution/site_pattern/index", "autoapi/torchtree/evolution/substitution_model/abstract/index", "autoapi/torchtree/evolution/substitution_model/amino_acid/index", "autoapi/torchtree/evolution/substitution_model/codon/index", "autoapi/torchtree/evolution/substitution_model/general/index", "autoapi/torchtree/evolution/substitution_model/index", "autoapi/torchtree/evolution/substitution_model/nucleotide/index", "autoapi/torchtree/evolution/taxa/index", "autoapi/torchtree/evolution/tree_height_transform/index", "autoapi/torchtree/evolution/tree_likelihood/index", "autoapi/torchtree/evolution/tree_model/index", "autoapi/torchtree/evolution/tree_model_flexible/index", "autoapi/torchtree/evolution/tree_regression/index", "autoapi/torchtree/index", "autoapi/torchtree/inference/hmc/adaptation/index", "autoapi/torchtree/inference/hmc/hamiltonian/index", "autoapi/torchtree/inference/hmc/hmc/index", "autoapi/torchtree/inference/hmc/index", "autoapi/torchtree/inference/hmc/integrator/index", "autoapi/torchtree/inference/hmc/operator/index", "autoapi/torchtree/inference/hmc/stan_adaptation/index", "autoapi/torchtree/inference/index", "autoapi/torchtree/inference/mcmc/gmrf_block_updating/index", "autoapi/torchtree/inference/mcmc/index", "autoapi/torchtree/inference/mcmc/mcmc/index", "autoapi/torchtree/inference/mcmc/operator/index", "autoapi/torchtree/inference/sampler/index", "autoapi/torchtree/inference/utils/index", "autoapi/torchtree/nf/energy_functions/index", "autoapi/torchtree/nf/flow/index", "autoapi/torchtree/nf/index", "autoapi/torchtree/nf/planar/index", "autoapi/torchtree/nf/realnvp/index", "autoapi/torchtree/nn/index", "autoapi/torchtree/nn/module/index", "autoapi/torchtree/ops/dual_averaging/index", "autoapi/torchtree/ops/index", "autoapi/torchtree/ops/smooth/index", "autoapi/torchtree/ops/welford/index", "autoapi/torchtree/optim/convergence/index", "autoapi/torchtree/optim/index", "autoapi/torchtree/optim/lr_scheduler/index", "autoapi/torchtree/optim/optimizer/index", "autoapi/torchtree/torchtree/index", "autoapi/torchtree/typing/index", "autoapi/torchtree/variational/chi/index", "autoapi/torchtree/variational/index", "autoapi/torchtree/variational/kl/index", "autoapi/torchtree/variational/renyi/index", "bibliography/bib", "getting_started/features", "getting_started/install", "getting_started/json_reference", "getting_started/quick_start", "index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["advanced/benchmark.rst", "advanced/concepts.rst", "advanced/tree_likelihood.rst", "autoapi/torchtree/cli/advi/index.rst", "autoapi/torchtree/cli/argparse_utils/index.rst", "autoapi/torchtree/cli/cli/index.rst", "autoapi/torchtree/cli/evolution/index.rst", "autoapi/torchtree/cli/hmc/index.rst", "autoapi/torchtree/cli/index.rst", "autoapi/torchtree/cli/jacobians/index.rst", "autoapi/torchtree/cli/loggers/index.rst", "autoapi/torchtree/cli/map/index.rst", "autoapi/torchtree/cli/mcmc/index.rst", "autoapi/torchtree/cli/operators/index.rst", "autoapi/torchtree/cli/plugin/index.rst", "autoapi/torchtree/cli/plugin_manager/index.rst", "autoapi/torchtree/cli/priors/index.rst", "autoapi/torchtree/cli/utils/index.rst", "autoapi/torchtree/core/abstractparameter/index.rst", "autoapi/torchtree/core/classproperty_decorator/index.rst", "autoapi/torchtree/core/container/index.rst", "autoapi/torchtree/core/identifiable/index.rst", "autoapi/torchtree/core/index.rst", "autoapi/torchtree/core/logger/index.rst", "autoapi/torchtree/core/model/index.rst", "autoapi/torchtree/core/parameter/index.rst", "autoapi/torchtree/core/parameter_encoder/index.rst", "autoapi/torchtree/core/parameter_utils/index.rst", "autoapi/torchtree/core/parametric/index.rst", "autoapi/torchtree/core/runnable/index.rst", "autoapi/torchtree/core/serializable/index.rst", "autoapi/torchtree/core/utils/index.rst", "autoapi/torchtree/distributions/bayesian_bridge/index.rst", "autoapi/torchtree/distributions/ctmc_scale/index.rst", "autoapi/torchtree/distributions/deterministic_normal/index.rst", "autoapi/torchtree/distributions/distributions/index.rst", "autoapi/torchtree/distributions/gmrf/index.rst", "autoapi/torchtree/distributions/gmrf_integrated/index.rst", "autoapi/torchtree/distributions/index.rst", "autoapi/torchtree/distributions/inverse_gamma/index.rst", "autoapi/torchtree/distributions/joint_distribution/index.rst", "autoapi/torchtree/distributions/log_normal/index.rst", "autoapi/torchtree/distributions/multivariate_normal/index.rst", "autoapi/torchtree/distributions/normal/index.rst", "autoapi/torchtree/distributions/one_on_x/index.rst", "autoapi/torchtree/distributions/scale_mixture/index.rst", "autoapi/torchtree/distributions/transforms/index.rst", "autoapi/torchtree/distributions/tree_prior/index.rst", "autoapi/torchtree/evolution/alignment/index.rst", "autoapi/torchtree/evolution/attribute_pattern/index.rst", "autoapi/torchtree/evolution/bdsk/index.rst", "autoapi/torchtree/evolution/birth_death/index.rst", "autoapi/torchtree/evolution/branch_model/index.rst", "autoapi/torchtree/evolution/coalescent/index.rst", "autoapi/torchtree/evolution/datatype/index.rst", "autoapi/torchtree/evolution/index.rst", "autoapi/torchtree/evolution/io/index.rst", "autoapi/torchtree/evolution/poisson_tree_likelihood/index.rst", "autoapi/torchtree/evolution/rate_transform/index.rst", "autoapi/torchtree/evolution/root_transform/index.rst", "autoapi/torchtree/evolution/site_model/index.rst", "autoapi/torchtree/evolution/site_pattern/index.rst", "autoapi/torchtree/evolution/substitution_model/abstract/index.rst", "autoapi/torchtree/evolution/substitution_model/amino_acid/index.rst", "autoapi/torchtree/evolution/substitution_model/codon/index.rst", "autoapi/torchtree/evolution/substitution_model/general/index.rst", "autoapi/torchtree/evolution/substitution_model/index.rst", "autoapi/torchtree/evolution/substitution_model/nucleotide/index.rst", "autoapi/torchtree/evolution/taxa/index.rst", "autoapi/torchtree/evolution/tree_height_transform/index.rst", "autoapi/torchtree/evolution/tree_likelihood/index.rst", "autoapi/torchtree/evolution/tree_model/index.rst", "autoapi/torchtree/evolution/tree_model_flexible/index.rst", "autoapi/torchtree/evolution/tree_regression/index.rst", "autoapi/torchtree/index.rst", "autoapi/torchtree/inference/hmc/adaptation/index.rst", "autoapi/torchtree/inference/hmc/hamiltonian/index.rst", "autoapi/torchtree/inference/hmc/hmc/index.rst", "autoapi/torchtree/inference/hmc/index.rst", "autoapi/torchtree/inference/hmc/integrator/index.rst", "autoapi/torchtree/inference/hmc/operator/index.rst", "autoapi/torchtree/inference/hmc/stan_adaptation/index.rst", "autoapi/torchtree/inference/index.rst", "autoapi/torchtree/inference/mcmc/gmrf_block_updating/index.rst", "autoapi/torchtree/inference/mcmc/index.rst", "autoapi/torchtree/inference/mcmc/mcmc/index.rst", "autoapi/torchtree/inference/mcmc/operator/index.rst", "autoapi/torchtree/inference/sampler/index.rst", "autoapi/torchtree/inference/utils/index.rst", "autoapi/torchtree/nf/energy_functions/index.rst", "autoapi/torchtree/nf/flow/index.rst", "autoapi/torchtree/nf/index.rst", "autoapi/torchtree/nf/planar/index.rst", "autoapi/torchtree/nf/realnvp/index.rst", "autoapi/torchtree/nn/index.rst", "autoapi/torchtree/nn/module/index.rst", "autoapi/torchtree/ops/dual_averaging/index.rst", "autoapi/torchtree/ops/index.rst", "autoapi/torchtree/ops/smooth/index.rst", "autoapi/torchtree/ops/welford/index.rst", "autoapi/torchtree/optim/convergence/index.rst", "autoapi/torchtree/optim/index.rst", "autoapi/torchtree/optim/lr_scheduler/index.rst", "autoapi/torchtree/optim/optimizer/index.rst", "autoapi/torchtree/torchtree/index.rst", "autoapi/torchtree/typing/index.rst", "autoapi/torchtree/variational/chi/index.rst", "autoapi/torchtree/variational/index.rst", "autoapi/torchtree/variational/kl/index.rst", "autoapi/torchtree/variational/renyi/index.rst", "bibliography/bib.rst", "getting_started/features.rst", "getting_started/install.rst", "getting_started/json_reference.rst", "getting_started/quick_start.rst", "index.rst"], "indexentries": {"abstractclockmodel (class in torchtree.evolution.branch_model)": [[52, "torchtree.evolution.branch_model.AbstractClockModel", false]], "abstractcoalescentdistribution (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentDistribution", false]], "abstractcoalescentmodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentModel", false]], "abstractdatatype (class in torchtree.evolution.datatype)": [[54, "torchtree.evolution.datatype.AbstractDataType", false]], "abstractparameter (class in torchtree.core.abstractparameter)": [[18, "torchtree.core.abstractparameter.AbstractParameter", false]], "abstractsubstitutionmodel (class in torchtree.evolution.substitution_model.abstract)": [[62, "torchtree.evolution.substitution_model.abstract.AbstractSubstitutionModel", false]], "abstracttreemodel (class in torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel", false]], "accept() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.accept", false]], "adapt_base_window (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.adapt_base_window", false]], "adapt_init_buffer (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.adapt_init_buffer", false]], "adapt_term_buffer (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.adapt_term_buffer", false]], "adaptable_parameter (torchtree.inference.mcmc.operator.mcmcoperator property)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.hmc.operator.hmcoperator method)": [[80, "torchtree.inference.hmc.operator.HMCOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.mcmc.operator.dirichletoperator method)": [[86, "torchtree.inference.mcmc.operator.DirichletOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.mcmc.operator.scaleroperator method)": [[86, "torchtree.inference.mcmc.operator.ScalerOperator.adaptable_parameter", false]], "adaptable_parameter() (torchtree.inference.mcmc.operator.slidingwindowoperator method)": [[86, "torchtree.inference.mcmc.operator.SlidingWindowOperator.adaptable_parameter", false]], "adaptivestepsize (class in torchtree.inference.hmc.adaptation)": [[75, "torchtree.inference.hmc.adaptation.AdaptiveStepSize", false]], "adaptor (class in torchtree.inference.hmc.adaptation)": [[75, "torchtree.inference.hmc.adaptation.Adaptor", false]], "add_birth_death() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.add_birth_death", false]], "add_coalescent() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.add_coalescent", false]], "add_model_listener() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.add_model_listener", false]], "add_parameter_listener() (torchtree.core.abstractparameter.abstractparameter method)": [[18, "torchtree.core.abstractparameter.AbstractParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.catparameter method)": [[25, "torchtree.core.parameter.CatParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.moduleparameter method)": [[25, "torchtree.core.parameter.ModuleParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.transformedparameter method)": [[25, "torchtree.core.parameter.TransformedParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.core.parameter.viewparameter method)": [[25, "torchtree.core.parameter.ViewParameter.add_parameter_listener", false]], "add_parameter_listener() (torchtree.evolution.root_transform.rootparameter method)": [[59, "torchtree.evolution.root_transform.RootParameter.add_parameter_listener", false]], "add_sample() (torchtree.ops.welford.welfordvariance method)": [[99, "torchtree.ops.welford.WelfordVariance.add_sample", false]], "alignment (class in torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.Alignment", false]], "alignment (torchtree.evolution.site_pattern.sitepattern attribute)": [[61, "torchtree.evolution.site_pattern.SitePattern.alignment", false]], "alpha (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge.alpha", false]], "alpha (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[47, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.alpha", false]], "alpha (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.alpha", false]], "alpha (torchtree.evolution.coalescent.constantcoalescentintegratedmodel attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.alpha", false]], "alpha (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[64, "torchtree.evolution.substitution_model.codon.MG94.alpha", false]], "alpha (torchtree.variational.renyi.vr attribute)": [[109, "torchtree.variational.renyi.VR.alpha", false]], "alternativeattributeerror": [[31, "torchtree.core.utils.AlternativeAttributeError", false]], "ambiguities (torchtree.evolution.datatype.generaldatatype attribute)": [[54, "torchtree.evolution.datatype.GeneralDataType.ambiguities", false]], "amino_acids (torchtree.evolution.datatype.aminoaciddatatype attribute)": [[54, "torchtree.evolution.datatype.AminoAcidDataType.AMINO_ACIDS", false]], "amino_acids_ambiguity_states (torchtree.evolution.datatype.aminoaciddatatype attribute)": [[54, "torchtree.evolution.datatype.AminoAcidDataType.AMINO_ACIDS_AMBIGUITY_STATES", false]], "amino_acids_states (torchtree.evolution.datatype.aminoaciddatatype attribute)": [[54, "torchtree.evolution.datatype.AminoAcidDataType.AMINO_ACIDS_STATES", false]], "aminoaciddatatype (class in torchtree.evolution.datatype)": [[54, "torchtree.evolution.datatype.AminoAcidDataType", false]], "apply_affine_transform() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.apply_affine_transform", false]], "apply_exp_transform() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.apply_exp_transform", false]], "apply_flow() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.apply_flow", false]], "apply_flow() (torchtree.nf.realnvp.realnvp method)": [[93, "torchtree.nf.realnvp.RealNVP.apply_flow", false]], "apply_sigmoid_transformed() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.apply_sigmoid_transformed", false]], "apply_simplex_transform() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.apply_simplex_transform", false]], "apply_transforms_for_fullrank() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.apply_transforms_for_fullrank", false]], "arg_constraints (torchtree.distributions.inverse_gamma.inversegamma attribute)": [[39, "torchtree.distributions.inverse_gamma.InverseGamma.arg_constraints", false]], "arg_constraints (torchtree.distributions.one_on_x.oneonx attribute)": [[44, "torchtree.distributions.one_on_x.OneOnX.arg_constraints", false]], "arg_constraints (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.arg_constraints", false]], "arg_constraints (torchtree.evolution.birth_death.birthdeath attribute)": [[51, "torchtree.evolution.birth_death.BirthDeath.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.abstractcoalescentdistribution attribute)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescent.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.arg_constraints", false]], "arg_constraints (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.arg_constraints", false]], "as_newick() (torchtree.evolution.tree_model.abstracttreemodel method)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel.as_newick", false]], "as_tensor() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.as_tensor", false]], "assign() (torchtree.core.parameter.viewparameter method)": [[25, "torchtree.core.parameter.ViewParameter.assign", false]], "attribute (torchtree.evolution.attribute_pattern.attributepattern attribute)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.attribute", false]], "attributepattern (class in torchtree.evolution.attribute_pattern)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern", false]], "b (torchtree.nf.planar.planartransform attribute)": [[92, "torchtree.nf.planar.PlanarTransform.b", false]], "base (torchtree.nf.flow.normalizingflow attribute)": [[90, "torchtree.nf.flow.NormalizingFlow.base", false]], "base_dist (torchtree.nf.realnvp.realnvp attribute)": [[93, "torchtree.nf.realnvp.RealNVP.base_dist", false]], "baseconvergence (class in torchtree.optim.convergence)": [[100, "torchtree.optim.convergence.BaseConvergence", false]], "batch_shape (torchtree.distributions.deterministic_normal.deterministicnormal property)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.batch_shape", false]], "batch_shape (torchtree.distributions.distributions.distribution property)": [[35, "torchtree.distributions.distributions.Distribution.batch_shape", false]], "batch_shape (torchtree.distributions.multivariate_normal.multivariatenormal property)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal.batch_shape", false]], "batch_shape (torchtree.nf.realnvp.realnvp property)": [[93, "torchtree.nf.realnvp.RealNVP.batch_shape", false]], "batchnorm (class in torchtree.nf.realnvp)": [[93, "torchtree.nf.realnvp.BatchNorm", false]], "bayesianbridge (class in torchtree.distributions.bayesian_bridge)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge", false]], "bdskmodel (class in torchtree.evolution.bdsk)": [[50, "torchtree.evolution.bdsk.BDSKModel", false]], "beta (torchtree.distributions.gmrf.gmrfcovariate attribute)": [[36, "torchtree.distributions.gmrf.GMRFCovariate.beta", false]], "beta (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.beta", false]], "beta (torchtree.evolution.coalescent.constantcoalescentintegratedmodel attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.beta", false]], "beta (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[64, "torchtree.evolution.substitution_model.codon.MG94.beta", false]], "beta (torchtree.nf.realnvp.batchnorm attribute)": [[93, "torchtree.nf.realnvp.BatchNorm.beta", false]], "bias (torchtree.distributions.transforms.lineartransform attribute)": [[46, "torchtree.distributions.transforms.LinearTransform.bias", false]], "bijective (torchtree.distributions.transforms.cumsumexptransform attribute)": [[46, "torchtree.distributions.transforms.CumSumExpTransform.bijective", false]], "bijective (torchtree.distributions.transforms.cumsumsoftplustransform attribute)": [[46, "torchtree.distributions.transforms.CumSumSoftPlusTransform.bijective", false]], "bijective (torchtree.distributions.transforms.cumsumtransform attribute)": [[46, "torchtree.distributions.transforms.CumSumTransform.bijective", false]], "bijective (torchtree.distributions.transforms.logtransform attribute)": [[46, "torchtree.distributions.transforms.LogTransform.bijective", false]], "bijective (torchtree.distributions.transforms.softplustransform attribute)": [[46, "torchtree.distributions.transforms.SoftPlusTransform.bijective", false]], "bijective (torchtree.distributions.transforms.trilexpdiagonaltransform attribute)": [[46, "torchtree.distributions.transforms.TrilExpDiagonalTransform.bijective", false]], "bijective (torchtree.evolution.rate_transform.logdifferenceratetransform attribute)": [[58, "torchtree.evolution.rate_transform.LogDifferenceRateTransform.bijective", false]], "bijective (torchtree.evolution.rate_transform.rescaledratetransform attribute)": [[58, "torchtree.evolution.rate_transform.RescaledRateTransform.bijective", false]], "bijective (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.bijective", false]], "bijective (torchtree.evolution.tree_height_transform.generalnodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.bijective", false]], "birthdeath (class in torchtree.evolution.birth_death)": [[51, "torchtree.evolution.birth_death.BirthDeath", false]], "birthdeathmodel (class in torchtree.evolution.birth_death)": [[51, "torchtree.evolution.birth_death.BirthDeathModel", false]], "branch_count (torchtree.evolution.branch_model.strictclockmodel attribute)": [[52, "torchtree.evolution.branch_model.StrictClockModel.branch_count", false]], "branch_lengths() (torchtree.evolution.tree_model.timetreemodel method)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.branch_lengths", false]], "branch_lengths() (torchtree.evolution.tree_model.treemodel method)": [[71, "torchtree.evolution.tree_model.TreeModel.branch_lengths", false]], "branch_lengths() (torchtree.evolution.tree_model.unrootedtreemodel method)": [[71, "torchtree.evolution.tree_model.UnRootedTreeModel.branch_lengths", false]], "branch_lengths_need_update (torchtree.evolution.tree_model.timetreemodel attribute)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.branch_lengths_need_update", false]], "branchmodel (class in torchtree.evolution.branch_model)": [[52, "torchtree.evolution.branch_model.BranchModel", false]], "build_advi() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.build_advi", false]], "build_alignment() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.build_alignment", false]], "build_hmc() (in module torchtree.cli.hmc)": [[7, "torchtree.cli.hmc.build_hmc", false]], "build_mcmc() (in module torchtree.cli.mcmc)": [[12, "torchtree.cli.mcmc.build_mcmc", false]], "build_optimizer() (in module torchtree.cli.map)": [[11, "torchtree.cli.map.build_optimizer", false]], "c (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[47, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.c", false]], "calculate_f3x4() (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.calculate_F3x4", false]], "calculate_f3x4_from_nucleotide() (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.calculate_F3x4_from_nucleotide", false]], "calculate_frequencies() (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.calculate_frequencies", false]], "calculate_frequencies_per_codon_position() (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.calculate_frequencies_per_codon_position", false]], "calculate_kappa() (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.calculate_kappa", false]], "calculate_substitutions() (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.calculate_substitutions", false]], "calculate_treelikelihood() (in module torchtree.evolution.tree_likelihood)": [[70, "torchtree.evolution.tree_likelihood.calculate_treelikelihood", false]], "calculate_treelikelihood_discrete() (in module torchtree.evolution.tree_likelihood)": [[70, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_discrete", false]], "calculate_treelikelihood_discrete_rescaled() (in module torchtree.evolution.tree_likelihood)": [[70, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_discrete_rescaled", false]], "calculate_treelikelihood_discrete_safe() (in module torchtree.evolution.tree_likelihood)": [[70, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_discrete_safe", false]], "calculate_treelikelihood_tip_states_discrete() (in module torchtree.evolution.tree_likelihood)": [[70, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_tip_states_discrete", false]], "calculate_treelikelihood_tip_states_discrete_rescaled() (in module torchtree.evolution.tree_likelihood)": [[70, "torchtree.evolution.tree_likelihood.calculate_treelikelihood_tip_states_discrete_rescaled", false]], "calculate_ts_tv() (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.calculate_ts_tv", false]], "calculate_with_tip_partials() (torchtree.evolution.tree_likelihood.treelikelihoodmodel method)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.calculate_with_tip_partials", false]], "calculate_with_tip_states() (torchtree.evolution.tree_likelihood.treelikelihoodmodel method)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.calculate_with_tip_states", false]], "callablemodel (class in torchtree.core.model)": [[24, "torchtree.core.model.CallableModel", false]], "callables() (torchtree.core.container.container method)": [[20, "torchtree.core.container.Container.callables", false]], "catparameter (class in torchtree.core.parameter)": [[25, "torchtree.core.parameter.CatParameter", false]], "check() (torchtree.optim.convergence.baseconvergence method)": [[100, "torchtree.optim.convergence.BaseConvergence.check", false]], "check() (torchtree.optim.convergence.stanvariationalconvergence method)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.check", false]], "check() (torchtree.optim.convergence.variationalconvergence method)": [[100, "torchtree.optim.convergence.VariationalConvergence.check", false]], "check_arguments() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.check_arguments", false]], "checkpoint (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.checkpoint", false]], "checkpoint (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.checkpoint", false]], "checkpoint (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.checkpoint", false]], "checkpoint_all (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.checkpoint_all", false]], "checkpoint_frequency (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.checkpoint_frequency", false]], "checkpoint_frequency (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.checkpoint_frequency", false]], "checkpoint_frequency (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.checkpoint_frequency", false]], "children (torchtree.evolution.io.node attribute)": [[56, "torchtree.evolution.io.Node.children", false]], "classproperty (class in torchtree.core.classproperty_decorator)": [[19, "torchtree.core.classproperty_decorator.classproperty", false]], "clock_model (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood attribute)": [[57, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.clock_model", false]], "clock_model (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.clock_model", false]], "clone() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.clone", false]], "clone() (torchtree.core.parameter.viewparameter method)": [[25, "torchtree.core.parameter.ViewParameter.clone", false]], "close() (torchtree.core.logger.containerlogger method)": [[23, "torchtree.core.logger.ContainerLogger.close", false]], "close() (torchtree.core.logger.logger method)": [[23, "torchtree.core.logger.Logger.close", false]], "close() (torchtree.core.logger.loggerinterface method)": [[23, "torchtree.core.logger.LoggerInterface.close", false]], "close() (torchtree.core.logger.treelogger method)": [[23, "torchtree.core.logger.TreeLogger.close", false]], "coalescent (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator attribute)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.coalescent", false]], "coalescent_piecewise (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.COALESCENT_PIECEWISE", false]], "codes (torchtree.evolution.datatype.generaldatatype attribute)": [[54, "torchtree.evolution.datatype.GeneralDataType.codes", false]], "codomain (torchtree.distributions.transforms.convexcombinationtransform attribute)": [[46, "torchtree.distributions.transforms.ConvexCombinationTransform.codomain", false]], "codomain (torchtree.distributions.transforms.cumsumexptransform attribute)": [[46, "torchtree.distributions.transforms.CumSumExpTransform.codomain", false]], "codomain (torchtree.distributions.transforms.cumsumsoftplustransform attribute)": [[46, "torchtree.distributions.transforms.CumSumSoftPlusTransform.codomain", false]], "codomain (torchtree.distributions.transforms.cumsumtransform attribute)": [[46, "torchtree.distributions.transforms.CumSumTransform.codomain", false]], "codomain (torchtree.distributions.transforms.lineartransform attribute)": [[46, "torchtree.distributions.transforms.LinearTransform.codomain", false]], "codomain (torchtree.distributions.transforms.logtransform attribute)": [[46, "torchtree.distributions.transforms.LogTransform.codomain", false]], "codomain (torchtree.distributions.transforms.softplustransform attribute)": [[46, "torchtree.distributions.transforms.SoftPlusTransform.codomain", false]], "codon_triplets (torchtree.evolution.datatype.codondatatype attribute)": [[54, "torchtree.evolution.datatype.CodonDataType.CODON_TRIPLETS", false]], "codondatatype (class in torchtree.evolution.datatype)": [[54, "torchtree.evolution.datatype.CodonDataType", false]], "components (torchtree.variational.kl.selbo attribute)": [[108, "torchtree.variational.kl.SELBO.components", false]], "compoundgammadirichletprior (class in torchtree.distributions.tree_prior)": [[47, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior", false]], "compress() (in module torchtree.evolution.site_pattern)": [[61, "torchtree.evolution.site_pattern.compress", false]], "compress_alignment() (in module torchtree.evolution.site_pattern)": [[61, "torchtree.evolution.site_pattern.compress_alignment", false]], "compress_alignment_states() (in module torchtree.evolution.site_pattern)": [[61, "torchtree.evolution.site_pattern.compress_alignment_states", false]], "compute_tips_partials() (torchtree.evolution.attribute_pattern.attributepattern method)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.compute_tips_partials", false]], "compute_tips_partials() (torchtree.evolution.site_pattern.sitepattern method)": [[61, "torchtree.evolution.site_pattern.SitePattern.compute_tips_partials", false]], "compute_tips_states() (torchtree.evolution.attribute_pattern.attributepattern method)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.compute_tips_states", false]], "compute_tips_states() (torchtree.evolution.site_pattern.sitepattern method)": [[61, "torchtree.evolution.site_pattern.SitePattern.compute_tips_states", false]], "concentration (torchtree.distributions.inverse_gamma.inversegamma property)": [[39, "torchtree.distributions.inverse_gamma.InverseGamma.concentration", false]], "constant_term (torchtree.distributions.gmrf_integrated.gmrfgammaintegrated attribute)": [[37, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated.constant_term", false]], "constantcoalescent (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.ConstantCoalescent", false]], "constantcoalescentintegrated (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated", false]], "constantcoalescentintegratedmodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel", false]], "constantcoalescentmodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentModel", false]], "constantsitemodel (class in torchtree.evolution.site_model)": [[60, "torchtree.evolution.site_model.ConstantSiteModel", false]], "constraint (class in torchtree.cli.utils)": [[17, "torchtree.cli.utils.CONSTRAINT", false]], "constraint_prefix (in module torchtree.cli.utils)": [[17, "torchtree.cli.utils.CONSTRAINT_PREFIX", false]], "container (class in torchtree.core.container)": [[20, "torchtree.core.container.Container", false]], "container (torchtree.core.logger.containerlogger attribute)": [[23, "torchtree.core.logger.ContainerLogger.container", false]], "containerlogger (class in torchtree.core.logger)": [[23, "torchtree.core.logger.ContainerLogger", false]], "convergence (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.convergence", false]], "convert_date_to_real() (in module torchtree.cli.utils)": [[17, "torchtree.cli.utils.convert_date_to_real", false]], "convert_samples_to_nexus() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.convert_samples_to_nexus", false]], "convexcombinationtransform (class in torchtree.distributions.transforms)": [[46, "torchtree.distributions.transforms.ConvexCombinationTransform", false]], "copy_() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.copy_", false]], "covariates (torchtree.distributions.gmrf.gmrfcovariate attribute)": [[36, "torchtree.distributions.gmrf.GMRFCovariate.covariates", false]], "cpu() (torchtree.core.abstractparameter.device method)": [[18, "torchtree.core.abstractparameter.Device.cpu", false]], "cpu() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.cpu", false]], "cpu() (torchtree.core.parameter.catparameter method)": [[25, "torchtree.core.parameter.CatParameter.cpu", false]], "cpu() (torchtree.core.parameter.moduleparameter method)": [[25, "torchtree.core.parameter.ModuleParameter.cpu", false]], "cpu() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.cpu", false]], "cpu() (torchtree.core.parameter.transformedparameter method)": [[25, "torchtree.core.parameter.TransformedParameter.cpu", false]], "cpu() (torchtree.core.parameter.viewparameter method)": [[25, "torchtree.core.parameter.ViewParameter.cpu", false]], "cpu() (torchtree.distributions.ctmc_scale.ctmcscale method)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.cpu", false]], "cpu() (torchtree.evolution.attribute_pattern.attributepattern method)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.cpu", false]], "cpu() (torchtree.evolution.site_model.constantsitemodel method)": [[60, "torchtree.evolution.site_model.ConstantSiteModel.cpu", false]], "cpu() (torchtree.evolution.site_model.invariantsitemodel method)": [[60, "torchtree.evolution.site_model.InvariantSiteModel.cpu", false]], "cpu() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.cpu", false]], "cpu() (torchtree.evolution.site_pattern.sitepattern method)": [[61, "torchtree.evolution.site_pattern.SitePattern.cpu", false]], "cpu() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.cpu", false]], "cpu() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.cpu", false]], "cpu() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.cpu", false]], "cpu() (torchtree.evolution.tree_model.timetreemodel method)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.cpu", false]], "cpu() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.cpu", false]], "cpu() (torchtree.nn.module.module method)": [[95, "torchtree.nn.module.Module.cpu", false]], "create_advi() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_advi", false]], "create_alignment() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_alignment", false]], "create_bd_prior() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_bd_prior", false]], "create_bdsk() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_bdsk", false]], "create_bdsk_prior() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_bdsk_prior", false]], "create_birth_death() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_birth_death", false]], "create_block_updating_operator() (in module torchtree.cli.operators)": [[13, "torchtree.cli.operators.create_block_updating_operator", false]], "create_branch_model() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_branch_model", false]], "create_clock_horseshoe_prior() (in module torchtree.cli.priors)": [[16, "torchtree.cli.priors.create_clock_horseshoe_prior", false]], "create_clock_prior() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_clock_prior", false]], "create_coalesent() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_coalesent", false]], "create_constant_bd_prior() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_constant_bd_prior", false]], "create_constant_birth_death() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_constant_birth_death", false]], "create_data_type() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_data_type", false]], "create_evolution_joint() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_evolution_joint", false]], "create_evolution_parser() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_evolution_parser", false]], "create_evolution_priors() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_evolution_priors", false]], "create_flexible_variational() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_flexible_variational", false]], "create_fullrank() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_fullrank", false]], "create_fullrank_from_meanfield() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_fullrank_from_meanfield", false]], "create_gamma_distribution() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_gamma_distribution", false]], "create_general_data_type() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_general_data_type", false]], "create_hmc() (in module torchtree.cli.hmc)": [[7, "torchtree.cli.hmc.create_hmc", false]], "create_hmc_operator() (in module torchtree.cli.hmc)": [[7, "torchtree.cli.hmc.create_hmc_operator", false]], "create_hmc_parser() (in module torchtree.cli.hmc)": [[7, "torchtree.cli.hmc.create_hmc_parser", false]], "create_jacobians() (in module torchtree.cli.jacobians)": [[9, "torchtree.cli.jacobians.create_jacobians", false]], "create_logger() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_logger", false]], "create_logger() (in module torchtree.cli.map)": [[11, "torchtree.cli.map.create_logger", false]], "create_loggers() (in module torchtree.cli.loggers)": [[10, "torchtree.cli.loggers.create_loggers", false]], "create_map_parser() (in module torchtree.cli.map)": [[11, "torchtree.cli.map.create_map_parser", false]], "create_mcmc() (in module torchtree.cli.mcmc)": [[12, "torchtree.cli.mcmc.create_mcmc", false]], "create_mcmc_parser() (in module torchtree.cli.mcmc)": [[12, "torchtree.cli.mcmc.create_mcmc_parser", false]], "create_meanfield() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_meanfield", false]], "create_normal_distribution() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_normal_distribution", false]], "create_one_on_x_prior() (in module torchtree.cli.priors)": [[16, "torchtree.cli.priors.create_one_on_x_prior", false]], "create_optimizer() (in module torchtree.cli.map)": [[11, "torchtree.cli.map.create_optimizer", false]], "create_poisson_evolution_joint() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_poisson_evolution_joint", false]], "create_poisson_tree_likelihood() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_poisson_tree_likelihood", false]], "create_rate_matrix() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel static method)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.create_rate_matrix", false]], "create_realnp_distribution() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_realnp_distribution", false]], "create_realnvp() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_realnvp", false]], "create_sampler() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_sampler", false]], "create_scaler_operator() (in module torchtree.cli.operators)": [[13, "torchtree.cli.operators.create_scaler_operator", false]], "create_show_parser() (in module torchtree.cli.cli)": [[5, "torchtree.cli.cli.create_show_parser", false]], "create_site_model() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_site_model", false]], "create_site_model_srd06_mus() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_site_model_srd06_mus", false]], "create_site_pattern() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_site_pattern", false]], "create_sliding_window_operator() (in module torchtree.cli.operators)": [[13, "torchtree.cli.operators.create_sliding_window_operator", false]], "create_stan_windowed_adaptation() (in module torchtree.cli.hmc)": [[7, "torchtree.cli.hmc.create_stan_windowed_adaptation", false]], "create_substitution_model() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_substitution_model", false]], "create_substitution_model_priors() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_substitution_model_priors", false]], "create_taxa() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_taxa", false]], "create_time_tree_prior() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_time_tree_prior", false]], "create_tree_likelihood() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_tree_likelihood", false]], "create_tree_likelihood_general() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_tree_likelihood_general", false]], "create_tree_likelihood_single() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_tree_likelihood_single", false]], "create_tree_logger() (in module torchtree.cli.map)": [[11, "torchtree.cli.map.create_tree_logger", false]], "create_tree_model() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_tree_model", false]], "create_tril() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_tril", false]], "create_ucln_prior() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.create_ucln_prior", false]], "create_variational_model() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_variational_model", false]], "create_variational_parser() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_variational_parser", false]], "create_weibull_distribution() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.create_weibull_distribution", false]], "csv (class in torchtree.core.logger)": [[23, "torchtree.core.logger.CSV", false]], "ctmcscale (class in torchtree.distributions.ctmc_scale)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale", false]], "cubo (class in torchtree.variational.chi)": [[106, "torchtree.variational.chi.CUBO", false]], "cuda() (torchtree.core.abstractparameter.device method)": [[18, "torchtree.core.abstractparameter.Device.cuda", false]], "cuda() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.cuda", false]], "cuda() (torchtree.core.parameter.catparameter method)": [[25, "torchtree.core.parameter.CatParameter.cuda", false]], "cuda() (torchtree.core.parameter.moduleparameter method)": [[25, "torchtree.core.parameter.ModuleParameter.cuda", false]], "cuda() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.cuda", false]], "cuda() (torchtree.core.parameter.transformedparameter method)": [[25, "torchtree.core.parameter.TransformedParameter.cuda", false]], "cuda() (torchtree.core.parameter.viewparameter method)": [[25, "torchtree.core.parameter.ViewParameter.cuda", false]], "cuda() (torchtree.distributions.ctmc_scale.ctmcscale method)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.cuda", false]], "cuda() (torchtree.evolution.attribute_pattern.attributepattern method)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.cuda", false]], "cuda() (torchtree.evolution.site_model.constantsitemodel method)": [[60, "torchtree.evolution.site_model.ConstantSiteModel.cuda", false]], "cuda() (torchtree.evolution.site_model.invariantsitemodel method)": [[60, "torchtree.evolution.site_model.InvariantSiteModel.cuda", false]], "cuda() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.cuda", false]], "cuda() (torchtree.evolution.site_pattern.sitepattern method)": [[61, "torchtree.evolution.site_pattern.SitePattern.cuda", false]], "cuda() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.cuda", false]], "cuda() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.cuda", false]], "cuda() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.cuda", false]], "cuda() (torchtree.evolution.tree_model.timetreemodel method)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.cuda", false]], "cuda() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.cuda", false]], "cuda() (torchtree.nn.module.module method)": [[95, "torchtree.nn.module.Module.cuda", false]], "cumsumexptransform (class in torchtree.distributions.transforms)": [[46, "torchtree.distributions.transforms.CumSumExpTransform", false]], "cumsumsoftplustransform (class in torchtree.distributions.transforms)": [[46, "torchtree.distributions.transforms.CumSumSoftPlusTransform", false]], "cumsumtransform (class in torchtree.distributions.transforms)": [[46, "torchtree.distributions.transforms.CumSumTransform", false]], "data_type (torchtree.evolution.alignment.alignment property)": [[48, "torchtree.evolution.alignment.Alignment.data_type", false]], "data_type (torchtree.evolution.attribute_pattern.attributepattern attribute)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.data_type", false]], "data_type (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[64, "torchtree.evolution.substitution_model.codon.MG94.data_type", false]], "data_type (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.data_type", false]], "data_type (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.data_type", false]], "datatype (class in torchtree.evolution.datatype)": [[54, "torchtree.evolution.datatype.DataType", false]], "default() (torchtree.core.parameter_encoder.parameterencoder method)": [[26, "torchtree.core.parameter_encoder.ParameterEncoder.default", false]], "default() (torchtree.core.utils.tensorencoder method)": [[31, "torchtree.core.utils.TensorEncoder.default", false]], "delta (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.delta", false]], "delta_elbo (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.delta_elbo", false]], "delta_elbo_ave (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.delta_elbo_ave", false]], "delta_elbo_med (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.delta_elbo_med", false]], "desc (torchtree.nf.energy_functions.energyfunctionmodel attribute)": [[89, "torchtree.nf.energy_functions.EnergyFunctionModel.desc", false]], "detach() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.detach", false]], "deterministicnormal (class in torchtree.distributions.deterministic_normal)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal", false]], "device (class in torchtree.core.abstractparameter)": [[18, "torchtree.core.abstractparameter.Device", false]], "device (torchtree.core.abstractparameter.abstractparameter property)": [[18, "torchtree.core.abstractparameter.AbstractParameter.device", false]], "device (torchtree.core.abstractparameter.device property)": [[18, "torchtree.core.abstractparameter.Device.device", false]], "device (torchtree.core.parameter.catparameter property)": [[25, "torchtree.core.parameter.CatParameter.device", false]], "dict_parameters (torchtree.distributions.distributions.distribution attribute)": [[35, "torchtree.distributions.distributions.Distribution.dict_parameters", false]], "differencenodeheighttransform (class in torchtree.evolution.tree_height_transform)": [[69, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform", false]], "dim() (torchtree.core.abstractparameter.abstractparameter method)": [[18, "torchtree.core.abstractparameter.AbstractParameter.dim", false]], "dimension (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.dimension", false]], "dirichletoperator (class in torchtree.inference.mcmc.operator)": [[86, "torchtree.inference.mcmc.operator.DirichletOperator", false]], "disable_plugins() (torchtree.cli.plugin_manager.pluginmanager method)": [[15, "torchtree.cli.plugin_manager.PluginManager.disable_plugins", false]], "dist (torchtree.distributions.distributions.distribution attribute)": [[35, "torchtree.distributions.distributions.Distribution.dist", false]], "distance (torchtree.evolution.root_transform.rootparameter attribute)": [[59, "torchtree.evolution.root_transform.RootParameter.distance", false]], "distribution (class in torchtree.distributions.distributions)": [[35, "torchtree.distributions.distributions.Distribution", false]], "distribution (torchtree.distributions.distributions.distribution property)": [[35, "torchtree.distributions.distributions.Distribution.distribution", false]], "distribution() (torchtree.evolution.coalescent.abstractcoalescentmodel method)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.constantcoalescentintegratedmodel method)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.constantcoalescentmodel method)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.exponentialcoalescentmodel method)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescentModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.piecewiseconstantcoalescentgridmodel method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.piecewiseconstantcoalescentmodel method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgridmodel method)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel.distribution", false]], "distribution() (torchtree.evolution.coalescent.piecewiselinearcoalescentgridmodel method)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel.distribution", false]], "distribution_parameters (torchtree.distributions.distributions.distribution attribute)": [[35, "torchtree.distributions.distributions.Distribution.distribution_parameters", false]], "distribution_type() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.distribution_type", false]], "distributionmodel (class in torchtree.distributions.distributions)": [[35, "torchtree.distributions.distributions.DistributionModel", false]], "distributions (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.distributions", false]], "domain (torchtree.distributions.transforms.convexcombinationtransform attribute)": [[46, "torchtree.distributions.transforms.ConvexCombinationTransform.domain", false]], "domain (torchtree.distributions.transforms.cumsumexptransform attribute)": [[46, "torchtree.distributions.transforms.CumSumExpTransform.domain", false]], "domain (torchtree.distributions.transforms.cumsumsoftplustransform attribute)": [[46, "torchtree.distributions.transforms.CumSumSoftPlusTransform.domain", false]], "domain (torchtree.distributions.transforms.cumsumtransform attribute)": [[46, "torchtree.distributions.transforms.CumSumTransform.domain", false]], "domain (torchtree.distributions.transforms.lineartransform attribute)": [[46, "torchtree.distributions.transforms.LinearTransform.domain", false]], "domain (torchtree.distributions.transforms.logtransform attribute)": [[46, "torchtree.distributions.transforms.LogTransform.domain", false]], "domain (torchtree.distributions.transforms.softplustransform attribute)": [[46, "torchtree.distributions.transforms.SoftPlusTransform.domain", false]], "dtype (torchtree.core.abstractparameter.abstractparameter property)": [[18, "torchtree.core.abstractparameter.AbstractParameter.dtype", false]], "dtype (torchtree.core.parameter.viewparameter property)": [[25, "torchtree.core.parameter.ViewParameter.dtype", false]], "dualaveraging (class in torchtree.ops.dual_averaging)": [[96, "torchtree.ops.dual_averaging.DualAveraging", false]], "dualaveragingstepsize (class in torchtree.inference.hmc.adaptation)": [[75, "torchtree.inference.hmc.adaptation.DualAveragingStepSize", false]], "dumper (class in torchtree.core.logger)": [[23, "torchtree.core.logger.Dumper", false]], "edge_lengths (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood attribute)": [[57, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.edge_lengths", false]], "eigen() (torchtree.evolution.substitution_model.abstract.nonsymmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.abstract.NonSymmetricSubstitutionModel.eigen", false]], "eigen() (torchtree.evolution.substitution_model.abstract.symmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.abstract.SymmetricSubstitutionModel.eigen", false]], "eigen() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.eigen", false]], "elbo (class in torchtree.variational.kl)": [[108, "torchtree.variational.kl.ELBO", false]], "elbo (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.elbo", false]], "elbo_best (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.elbo_best", false]], "elbo_diff (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.elbo_diff", false]], "elbo_prev (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.elbo_prev", false]], "empiricalsubstitutionmodel (class in torchtree.evolution.substitution_model.general)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel", false]], "encoding() (torchtree.evolution.datatype.aminoaciddatatype method)": [[54, "torchtree.evolution.datatype.AminoAcidDataType.encoding", false]], "encoding() (torchtree.evolution.datatype.codondatatype method)": [[54, "torchtree.evolution.datatype.CodonDataType.encoding", false]], "encoding() (torchtree.evolution.datatype.datatype method)": [[54, "torchtree.evolution.datatype.DataType.encoding", false]], "encoding() (torchtree.evolution.datatype.generaldatatype method)": [[54, "torchtree.evolution.datatype.GeneralDataType.encoding", false]], "encoding() (torchtree.evolution.datatype.nucleotidedatatype method)": [[54, "torchtree.evolution.datatype.NucleotideDataType.encoding", false]], "energyfunctionmodel (class in torchtree.nf.energy_functions)": [[89, "torchtree.nf.energy_functions.EnergyFunctionModel", false]], "entropy (torchtree.variational.kl.elbo attribute)": [[108, "torchtree.variational.kl.ELBO.entropy", false]], "entropy (torchtree.variational.kl.selbo attribute)": [[108, "torchtree.variational.kl.SELBO.entropy", false]], "entropy() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.entropy", false]], "entropy() (torchtree.distributions.distributions.distribution method)": [[35, "torchtree.distributions.distributions.Distribution.entropy", false]], "entropy() (torchtree.distributions.distributions.distributionmodel method)": [[35, "torchtree.distributions.distributions.DistributionModel.entropy", false]], "entropy() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[40, "torchtree.distributions.joint_distribution.JointDistributionModel.entropy", false]], "entropy() (torchtree.distributions.multivariate_normal.multivariatenormal method)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal.entropy", false]], "entropy() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.entropy", false]], "entropy() (torchtree.nf.realnvp.realnvp method)": [[93, "torchtree.nf.realnvp.RealNVP.entropy", false]], "epidemiology_to_birth_death() (in module torchtree.evolution.bdsk)": [[50, "torchtree.evolution.bdsk.epidemiology_to_birth_death", false]], "eps (torchtree.distributions.deterministic_normal.deterministicnormal attribute)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.eps", false]], "eps (torchtree.nf.realnvp.batchnorm attribute)": [[93, "torchtree.nf.realnvp.BatchNorm.eps", false]], "event_shape (torchtree.distributions.deterministic_normal.deterministicnormal property)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.event_shape", false]], "event_shape (torchtree.distributions.distributions.distribution property)": [[35, "torchtree.distributions.distributions.Distribution.event_shape", false]], "event_shape (torchtree.distributions.multivariate_normal.multivariatenormal property)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal.event_shape", false]], "every (torchtree.core.logger.containerlogger attribute)": [[23, "torchtree.core.logger.ContainerLogger.every", false]], "every (torchtree.core.logger.logger attribute)": [[23, "torchtree.core.logger.Logger.every", false]], "every (torchtree.core.logger.treelogger attribute)": [[23, "torchtree.core.logger.TreeLogger.every", false]], "every (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.every", false]], "every (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.every", false]], "every (torchtree.optim.convergence.variationalconvergence attribute)": [[100, "torchtree.optim.convergence.VariationalConvergence.every", false]], "exit() (torchtree.core.utils.signalhandler method)": [[31, "torchtree.core.utils.SignalHandler.exit", false]], "expand() (torchtree.distributions.inverse_gamma.inversegamma method)": [[39, "torchtree.distributions.inverse_gamma.InverseGamma.expand", false]], "expand_plates() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.expand_plates", false]], "exponentialcoalescent (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescent", false]], "exponentialcoalescentmodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescentModel", false]], "extract_taxa() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.extract_taxa", false]], "extract_tensors_and_parameters() (in module torchtree.inference.utils)": [[88, "torchtree.inference.utils.extract_tensors_and_parameters", false]], "f (torchtree.core.logger.logger attribute)": [[23, "torchtree.core.logger.Logger.f", false]], "f (torchtree.core.logger.treelogger attribute)": [[23, "torchtree.core.logger.TreeLogger.f", false]], "faketreemodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.FakeTreeModel", false]], "field (torchtree.distributions.gmrf.gmrf attribute)": [[36, "torchtree.distributions.gmrf.GMRF.field", false]], "field (torchtree.distributions.gmrf_integrated.gmrfgammaintegrated attribute)": [[37, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated.field", false]], "file_name (torchtree.core.logger.csv attribute)": [[23, "torchtree.core.logger.CSV.file_name", false]], "file_name (torchtree.core.logger.treelogger attribute)": [[23, "torchtree.core.logger.TreeLogger.file_name", false]], "file_name (torchtree.optim.convergence.variationalconvergence attribute)": [[100, "torchtree.optim.convergence.VariationalConvergence.file_name", false]], "find_reasonable_step_size() (in module torchtree.inference.hmc.adaptation)": [[75, "torchtree.inference.hmc.adaptation.find_reasonable_step_size", false]], "find_reasonable_step_size() (torchtree.inference.hmc.hmc.hmc method)": [[77, "torchtree.inference.hmc.hmc.HMC.find_reasonable_step_size", false]], "find_step_size (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.find_step_size", false]], "fire_model_changed() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.fire_model_changed", false]], "fire_parameter_changed() (torchtree.core.abstractparameter.abstractparameter method)": [[18, "torchtree.core.abstractparameter.AbstractParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.catparameter method)": [[25, "torchtree.core.parameter.CatParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.moduleparameter method)": [[25, "torchtree.core.parameter.ModuleParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.transformedparameter method)": [[25, "torchtree.core.parameter.TransformedParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.core.parameter.viewparameter method)": [[25, "torchtree.core.parameter.ViewParameter.fire_parameter_changed", false]], "fire_parameter_changed() (torchtree.evolution.root_transform.rootparameter method)": [[59, "torchtree.evolution.root_transform.RootParameter.fire_parameter_changed", false]], "flexibletimetreemodel (class in torchtree.evolution.tree_model_flexible)": [[72, "torchtree.evolution.tree_model_flexible.FlexibleTimeTreeModel", false]], "flowsequential (class in torchtree.nf.realnvp)": [[93, "torchtree.nf.realnvp.FlowSequential", false]], "forward() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.forward", false]], "forward() (torchtree.nf.planar.planartransform method)": [[92, "torchtree.nf.planar.PlanarTransform.forward", false]], "forward() (torchtree.nf.realnvp.batchnorm method)": [[93, "torchtree.nf.realnvp.BatchNorm.forward", false]], "forward() (torchtree.nf.realnvp.flowsequential method)": [[93, "torchtree.nf.realnvp.FlowSequential.forward", false]], "forward() (torchtree.nf.realnvp.linearmaskedcoupling method)": [[93, "torchtree.nf.realnvp.LinearMaskedCoupling.forward", false]], "forward() (torchtree.nf.realnvp.realnvp method)": [[93, "torchtree.nf.realnvp.RealNVP.forward", false]], "frequencies (torchtree.evolution.substitution_model.abstract.abstractsubstitutionmodel property)": [[62, "torchtree.evolution.substitution_model.abstract.AbstractSubstitutionModel.frequencies", false]], "frequencies (torchtree.evolution.substitution_model.abstract.substitutionmodel property)": [[62, "torchtree.evolution.substitution_model.abstract.SubstitutionModel.frequencies", false]], "frequencies (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel property)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.frequencies", false]], "frequencies (torchtree.evolution.substitution_model.general.generaljc69 property)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.frequencies", false]], "frequencies (torchtree.evolution.substitution_model.nucleotide.jc69 property)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.frequencies", false]], "from_json() (torchtree.core.container.container class method)": [[20, "torchtree.core.container.Container.from_json", false]], "from_json() (torchtree.core.logger.containerlogger class method)": [[23, "torchtree.core.logger.ContainerLogger.from_json", false]], "from_json() (torchtree.core.logger.csv class method)": [[23, "torchtree.core.logger.CSV.from_json", false]], "from_json() (torchtree.core.logger.dumper class method)": [[23, "torchtree.core.logger.Dumper.from_json", false]], "from_json() (torchtree.core.logger.logger class method)": [[23, "torchtree.core.logger.Logger.from_json", false]], "from_json() (torchtree.core.logger.treelogger class method)": [[23, "torchtree.core.logger.TreeLogger.from_json", false]], "from_json() (torchtree.core.parameter.catparameter class method)": [[25, "torchtree.core.parameter.CatParameter.from_json", false]], "from_json() (torchtree.core.parameter.moduleparameter class method)": [[25, "torchtree.core.parameter.ModuleParameter.from_json", false]], "from_json() (torchtree.core.parameter.parameter class method)": [[25, "torchtree.core.parameter.Parameter.from_json", false]], "from_json() (torchtree.core.parameter.transformedparameter class method)": [[25, "torchtree.core.parameter.TransformedParameter.from_json", false]], "from_json() (torchtree.core.parameter.viewparameter class method)": [[25, "torchtree.core.parameter.ViewParameter.from_json", false]], "from_json() (torchtree.core.serializable.jsonserializable class method)": [[30, "torchtree.core.serializable.JSONSerializable.from_json", false]], "from_json() (torchtree.distributions.bayesian_bridge.bayesianbridge class method)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge.from_json", false]], "from_json() (torchtree.distributions.ctmc_scale.ctmcscale class method)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.from_json", false]], "from_json() (torchtree.distributions.deterministic_normal.deterministicnormal class method)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.from_json", false]], "from_json() (torchtree.distributions.distributions.distribution class method)": [[35, "torchtree.distributions.distributions.Distribution.from_json", false]], "from_json() (torchtree.distributions.gmrf.gmrf class method)": [[36, "torchtree.distributions.gmrf.GMRF.from_json", false]], "from_json() (torchtree.distributions.gmrf.gmrfcovariate class method)": [[36, "torchtree.distributions.gmrf.GMRFCovariate.from_json", false]], "from_json() (torchtree.distributions.gmrf_integrated.gmrfgammaintegrated class method)": [[37, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated.from_json", false]], "from_json() (torchtree.distributions.joint_distribution.jointdistributionmodel class method)": [[40, "torchtree.distributions.joint_distribution.JointDistributionModel.from_json", false]], "from_json() (torchtree.distributions.multivariate_normal.multivariatenormal class method)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal.from_json", false]], "from_json() (torchtree.distributions.scale_mixture.scalemixturenormal class method)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.from_json", false]], "from_json() (torchtree.distributions.tree_prior.compoundgammadirichletprior class method)": [[47, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.from_json", false]], "from_json() (torchtree.evolution.alignment.alignment class method)": [[48, "torchtree.evolution.alignment.Alignment.from_json", false]], "from_json() (torchtree.evolution.attribute_pattern.attributepattern class method)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.from_json", false]], "from_json() (torchtree.evolution.bdsk.bdskmodel class method)": [[50, "torchtree.evolution.bdsk.BDSKModel.from_json", false]], "from_json() (torchtree.evolution.birth_death.birthdeathmodel class method)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.from_json", false]], "from_json() (torchtree.evolution.branch_model.simpleclockmodel class method)": [[52, "torchtree.evolution.branch_model.SimpleClockModel.from_json", false]], "from_json() (torchtree.evolution.branch_model.strictclockmodel class method)": [[52, "torchtree.evolution.branch_model.StrictClockModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.constantcoalescentintegratedmodel class method)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.constantcoalescentmodel class method)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.exponentialcoalescentmodel class method)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescentModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.piecewiseconstantcoalescentgridmodel class method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.piecewiseconstantcoalescentmodel class method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgridmodel class method)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel.from_json", false]], "from_json() (torchtree.evolution.coalescent.piecewiselinearcoalescentgridmodel class method)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel.from_json", false]], "from_json() (torchtree.evolution.datatype.aminoaciddatatype class method)": [[54, "torchtree.evolution.datatype.AminoAcidDataType.from_json", false]], "from_json() (torchtree.evolution.datatype.codondatatype class method)": [[54, "torchtree.evolution.datatype.CodonDataType.from_json", false]], "from_json() (torchtree.evolution.datatype.generaldatatype class method)": [[54, "torchtree.evolution.datatype.GeneralDataType.from_json", false]], "from_json() (torchtree.evolution.datatype.nucleotidedatatype class method)": [[54, "torchtree.evolution.datatype.NucleotideDataType.from_json", false]], "from_json() (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood class method)": [[57, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.from_json", false]], "from_json() (torchtree.evolution.root_transform.rootparameter class method)": [[59, "torchtree.evolution.root_transform.RootParameter.from_json", false]], "from_json() (torchtree.evolution.site_model.constantsitemodel class method)": [[60, "torchtree.evolution.site_model.ConstantSiteModel.from_json", false]], "from_json() (torchtree.evolution.site_model.invariantsitemodel class method)": [[60, "torchtree.evolution.site_model.InvariantSiteModel.from_json", false]], "from_json() (torchtree.evolution.site_model.weibullsitemodel class method)": [[60, "torchtree.evolution.site_model.WeibullSiteModel.from_json", false]], "from_json() (torchtree.evolution.site_pattern.sitepattern class method)": [[61, "torchtree.evolution.site_pattern.SitePattern.from_json", false]], "from_json() (torchtree.evolution.substitution_model.amino_acid.lg class method)": [[63, "torchtree.evolution.substitution_model.amino_acid.LG.from_json", false]], "from_json() (torchtree.evolution.substitution_model.amino_acid.wag class method)": [[63, "torchtree.evolution.substitution_model.amino_acid.WAG.from_json", false]], "from_json() (torchtree.evolution.substitution_model.codon.mg94 class method)": [[64, "torchtree.evolution.substitution_model.codon.MG94.from_json", false]], "from_json() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel class method)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.from_json", false]], "from_json() (torchtree.evolution.substitution_model.general.generaljc69 class method)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.from_json", false]], "from_json() (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel class method)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.from_json", false]], "from_json() (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel class method)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.from_json", false]], "from_json() (torchtree.evolution.substitution_model.nucleotide.gtr class method)": [[67, "torchtree.evolution.substitution_model.nucleotide.GTR.from_json", false]], "from_json() (torchtree.evolution.substitution_model.nucleotide.hky class method)": [[67, "torchtree.evolution.substitution_model.nucleotide.HKY.from_json", false]], "from_json() (torchtree.evolution.substitution_model.nucleotide.jc69 class method)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.from_json", false]], "from_json() (torchtree.evolution.taxa.taxa class method)": [[68, "torchtree.evolution.taxa.Taxa.from_json", false]], "from_json() (torchtree.evolution.taxa.taxon class method)": [[68, "torchtree.evolution.taxa.Taxon.from_json", false]], "from_json() (torchtree.evolution.tree_likelihood.treelikelihoodmodel class method)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.from_json", false]], "from_json() (torchtree.evolution.tree_model.reparameterizedtimetreemodel class method)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.from_json", false]], "from_json() (torchtree.evolution.tree_model.timetreemodel class method)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.from_json", false]], "from_json() (torchtree.evolution.tree_model.unrootedtreemodel class method)": [[71, "torchtree.evolution.tree_model.UnRootedTreeModel.from_json", false]], "from_json() (torchtree.evolution.tree_model_flexible.flexibletimetreemodel class method)": [[72, "torchtree.evolution.tree_model_flexible.FlexibleTimeTreeModel.from_json", false]], "from_json() (torchtree.inference.hmc.adaptation.adaptivestepsize class method)": [[75, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.from_json", false]], "from_json() (torchtree.inference.hmc.adaptation.dualaveragingstepsize class method)": [[75, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.from_json", false]], "from_json() (torchtree.inference.hmc.adaptation.massmatrixadaptor class method)": [[75, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.from_json", false]], "from_json() (torchtree.inference.hmc.hamiltonian.hamiltonian class method)": [[76, "torchtree.inference.hmc.hamiltonian.Hamiltonian.from_json", false]], "from_json() (torchtree.inference.hmc.hmc.hmc class method)": [[77, "torchtree.inference.hmc.hmc.HMC.from_json", false]], "from_json() (torchtree.inference.hmc.integrator.leapfrogintegrator class method)": [[79, "torchtree.inference.hmc.integrator.LeapfrogIntegrator.from_json", false]], "from_json() (torchtree.inference.hmc.operator.hmcoperator class method)": [[80, "torchtree.inference.hmc.operator.HMCOperator.from_json", false]], "from_json() (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation class method)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.from_json", false]], "from_json() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator class method)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.from_json", false]], "from_json() (torchtree.inference.mcmc.mcmc.mcmc class method)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.from_json", false]], "from_json() (torchtree.inference.mcmc.operator.dirichletoperator class method)": [[86, "torchtree.inference.mcmc.operator.DirichletOperator.from_json", false]], "from_json() (torchtree.inference.mcmc.operator.scaleroperator class method)": [[86, "torchtree.inference.mcmc.operator.ScalerOperator.from_json", false]], "from_json() (torchtree.inference.mcmc.operator.slidingwindowoperator class method)": [[86, "torchtree.inference.mcmc.operator.SlidingWindowOperator.from_json", false]], "from_json() (torchtree.inference.sampler.sampler class method)": [[87, "torchtree.inference.sampler.Sampler.from_json", false]], "from_json() (torchtree.nf.energy_functions.energyfunctionmodel class method)": [[89, "torchtree.nf.energy_functions.EnergyFunctionModel.from_json", false]], "from_json() (torchtree.nf.flow.normalizingflow class method)": [[90, "torchtree.nf.flow.NormalizingFlow.from_json", false]], "from_json() (torchtree.nf.realnvp.realnvp class method)": [[93, "torchtree.nf.realnvp.RealNVP.from_json", false]], "from_json() (torchtree.nn.module.module class method)": [[95, "torchtree.nn.module.Module.from_json", false]], "from_json() (torchtree.optim.convergence.stanvariationalconvergence class method)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.from_json", false]], "from_json() (torchtree.optim.convergence.variationalconvergence class method)": [[100, "torchtree.optim.convergence.VariationalConvergence.from_json", false]], "from_json() (torchtree.optim.lr_scheduler.scheduler class method)": [[102, "torchtree.optim.lr_scheduler.Scheduler.from_json", false]], "from_json() (torchtree.optim.optimizer.optimizer class method)": [[103, "torchtree.optim.optimizer.Optimizer.from_json", false]], "from_json() (torchtree.variational.chi.cubo class method)": [[106, "torchtree.variational.chi.CUBO.from_json", false]], "from_json() (torchtree.variational.kl.elbo class method)": [[108, "torchtree.variational.kl.ELBO.from_json", false]], "from_json() (torchtree.variational.kl.klpq class method)": [[108, "torchtree.variational.kl.KLpq.from_json", false]], "from_json() (torchtree.variational.kl.klpqimportance class method)": [[108, "torchtree.variational.kl.KLpqImportance.from_json", false]], "from_json() (torchtree.variational.kl.selbo class method)": [[108, "torchtree.variational.kl.SELBO.from_json", false]], "from_json() (torchtree.variational.renyi.vr class method)": [[109, "torchtree.variational.renyi.VR.from_json", false]], "from_json_safe() (torchtree.core.serializable.jsonserializable class method)": [[30, "torchtree.core.serializable.JSONSerializable.from_json_safe", false]], "gather_parameters() (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.gather_parameters", false]], "generaldatatype (class in torchtree.evolution.datatype)": [[54, "torchtree.evolution.datatype.GeneralDataType", false]], "generaljc69 (class in torchtree.evolution.substitution_model.general)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69", false]], "generalnodeheighttransform (class in torchtree.evolution.tree_height_transform)": [[69, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform", false]], "generalnonsymmetricsubstitutionmodel (class in torchtree.evolution.substitution_model.general)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel", false]], "generalsymmetricsubstitutionmodel (class in torchtree.evolution.substitution_model.general)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel", false]], "genetic_code_names (torchtree.evolution.datatype.codondatatype attribute)": [[54, "torchtree.evolution.datatype.CodonDataType.GENETIC_CODE_NAMES", false]], "genetic_code_tables (torchtree.evolution.datatype.codondatatype attribute)": [[54, "torchtree.evolution.datatype.CodonDataType.GENETIC_CODE_TABLES", false]], "get() (torchtree.evolution.alignment.alignment class method)": [[48, "torchtree.evolution.alignment.Alignment.get", false]], "get_class() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.get_class", false]], "get_engine() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.get_engine", false]], "gmrf (class in torchtree.distributions.gmrf)": [[36, "torchtree.distributions.gmrf.GMRF", false]], "gmrf (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator attribute)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.gmrf", false]], "gmrfcovariate (class in torchtree.distributions.gmrf)": [[36, "torchtree.distributions.gmrf.GMRFCovariate", false]], "gmrfgammaintegrated (class in torchtree.distributions.gmrf_integrated)": [[37, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated", false]], "gmrfpiecewisecoalescentblockupdatingoperator (class in torchtree.inference.mcmc.gmrf_block_updating)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator", false]], "gobal_scale (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.gobal_scale", false]], "grad (torchtree.core.parameter.parameter property)": [[25, "torchtree.core.parameter.Parameter.grad", false]], "grad_fn (torchtree.core.parameter.parameter property)": [[25, "torchtree.core.parameter.Parameter.grad_fn", false]], "gradient() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.gradient", false]], "grid (torchtree.evolution.coalescent.piecewiseconstantcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid.grid", false]], "grid (torchtree.evolution.coalescent.piecewiseconstantcoalescentgridmodel attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel.grid", false]], "grid (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.grid", false]], "grid (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgridmodel attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel.grid", false]], "grid (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.grid", false]], "grid (torchtree.evolution.coalescent.piecewiselinearcoalescentgridmodel attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel.grid", false]], "grid (torchtree.evolution.coalescent.softpiecewiseconstantcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid.grid", false]], "growth (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescent.growth", false]], "growth (torchtree.evolution.coalescent.exponentialcoalescentmodel attribute)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescentModel.growth", false]], "growth (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.growth", false]], "growth (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgridmodel attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel.growth", false]], "gtr (class in torchtree.evolution.substitution_model.nucleotide)": [[67, "torchtree.evolution.substitution_model.nucleotide.GTR", false]], "hamiltonian (class in torchtree.inference.hmc.hamiltonian)": [[76, "torchtree.inference.hmc.hamiltonian.Hamiltonian", false]], "hamiltonian() (torchtree.inference.hmc.hmc.hmc method)": [[77, "torchtree.inference.hmc.hmc.HMC.hamiltonian", false]], "handle_model_changed() (torchtree.core.container.container method)": [[20, "torchtree.core.container.Container.handle_model_changed", false]], "handle_model_changed() (torchtree.core.model.callablemodel method)": [[24, "torchtree.core.model.CallableModel.handle_model_changed", false]], "handle_model_changed() (torchtree.core.parameter.catparameter method)": [[25, "torchtree.core.parameter.CatParameter.handle_model_changed", false]], "handle_model_changed() (torchtree.core.parameter.moduleparameter method)": [[25, "torchtree.core.parameter.ModuleParameter.handle_model_changed", false]], "handle_model_changed() (torchtree.core.parameter.transformedparameter method)": [[25, "torchtree.core.parameter.TransformedParameter.handle_model_changed", false]], "handle_model_changed() (torchtree.core.parametric.modellistener method)": [[28, "torchtree.core.parametric.ModelListener.handle_model_changed", false]], "handle_model_changed() (torchtree.distributions.bayesian_bridge.bayesianbridge method)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge.handle_model_changed", false]], "handle_model_changed() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.handle_model_changed", false]], "handle_model_changed() (torchtree.distributions.scale_mixture.scalemixturenormal method)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.attribute_pattern.attributepattern method)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.birth_death.birthdeathmodel method)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.branch_model.abstractclockmodel method)": [[52, "torchtree.evolution.branch_model.AbstractClockModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.root_transform.rootparameter method)": [[59, "torchtree.evolution.root_transform.RootParameter.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.site_model.sitemodel method)": [[60, "torchtree.evolution.site_model.SiteModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.site_pattern.sitepattern method)": [[61, "torchtree.evolution.site_pattern.SitePattern.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.codon.mg94 method)": [[64, "torchtree.evolution.substitution_model.codon.MG94.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.nucleotide.gtr method)": [[67, "torchtree.evolution.substitution_model.nucleotide.GTR.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.nucleotide.hky method)": [[67, "torchtree.evolution.substitution_model.nucleotide.HKY.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.tree_model.abstracttreemodel method)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel.handle_model_changed", false]], "handle_model_changed() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.handle_model_changed", false]], "handle_model_changed() (torchtree.nf.energy_functions.energyfunctionmodel method)": [[89, "torchtree.nf.energy_functions.EnergyFunctionModel.handle_model_changed", false]], "handle_parameter_changed() (torchtree.core.container.container method)": [[20, "torchtree.core.container.Container.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.model.callablemodel method)": [[24, "torchtree.core.model.CallableModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parameter.catparameter method)": [[25, "torchtree.core.parameter.CatParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parameter.moduleparameter method)": [[25, "torchtree.core.parameter.ModuleParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parameter.transformedparameter method)": [[25, "torchtree.core.parameter.TransformedParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parameter.viewparameter method)": [[25, "torchtree.core.parameter.ViewParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.core.parametric.parameterlistener method)": [[28, "torchtree.core.parametric.ParameterListener.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[40, "torchtree.distributions.joint_distribution.JointDistributionModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.distributions.tree_prior.compoundgammadirichletprior method)": [[47, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.attribute_pattern.attributepattern method)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.branch_model.abstractclockmodel method)": [[52, "torchtree.evolution.branch_model.AbstractClockModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood method)": [[57, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.root_transform.rootparameter method)": [[59, "torchtree.evolution.root_transform.RootParameter.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.site_model.sitemodel method)": [[60, "torchtree.evolution.site_model.SiteModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.site_pattern.sitepattern method)": [[61, "torchtree.evolution.site_pattern.SitePattern.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.codon.mg94 method)": [[64, "torchtree.evolution.substitution_model.codon.MG94.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.nucleotide.gtr method)": [[67, "torchtree.evolution.substitution_model.nucleotide.GTR.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.nucleotide.hky method)": [[67, "torchtree.evolution.substitution_model.nucleotide.HKY.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.tree_likelihood.treelikelihoodmodel method)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.tree_model.timetreemodel method)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.evolution.tree_model.unrootedtreemodel method)": [[71, "torchtree.evolution.tree_model.UnRootedTreeModel.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.inference.hmc.hamiltonian.hamiltonian method)": [[76, "torchtree.inference.hmc.hamiltonian.Hamiltonian.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.inference.hmc.operator.hmcoperator method)": [[80, "torchtree.inference.hmc.operator.HMCOperator.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.chi.cubo method)": [[106, "torchtree.variational.chi.CUBO.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.kl.elbo method)": [[108, "torchtree.variational.kl.ELBO.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.kl.klpq method)": [[108, "torchtree.variational.kl.KLpq.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.kl.klpqimportance method)": [[108, "torchtree.variational.kl.KLpqImportance.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.kl.selbo method)": [[108, "torchtree.variational.kl.SELBO.handle_parameter_changed", false]], "handle_parameter_changed() (torchtree.variational.renyi.vr method)": [[109, "torchtree.variational.renyi.VR.handle_parameter_changed", false]], "has_rsample (torchtree.distributions.inverse_gamma.inversegamma attribute)": [[39, "torchtree.distributions.inverse_gamma.InverseGamma.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.abstractcoalescentdistribution attribute)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.constantcoalescent attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescent.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescent.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.has_rsample", false]], "has_rsample (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.has_rsample", false]], "height (torchtree.evolution.io.node attribute)": [[56, "torchtree.evolution.io.Node.height", false]], "heights_from_branch_lengths() (in module torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.heights_from_branch_lengths", false]], "heights_need_update (torchtree.evolution.tree_model.timetreemodel attribute)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.heights_need_update", false]], "heights_to_branch_lengths() (in module torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.heights_to_branch_lengths", false]], "hky (class in torchtree.evolution.substitution_model.nucleotide)": [[67, "torchtree.evolution.substitution_model.nucleotide.HKY", false]], "hmc (class in torchtree.inference.hmc.hmc)": [[77, "torchtree.inference.hmc.hmc.HMC", false]], "hmcoperator (class in torchtree.inference.hmc.operator)": [[80, "torchtree.inference.hmc.operator.HMCOperator", false]], "id (in module torchtree.typing)": [[105, "torchtree.typing.ID", false]], "id (torchtree.core.identifiable.identifiable property)": [[21, "torchtree.core.identifiable.Identifiable.id", false]], "identifiable (class in torchtree.core.identifiable)": [[21, "torchtree.core.identifiable.Identifiable", false]], "indices (torchtree.core.parameter.viewparameter attribute)": [[25, "torchtree.core.parameter.ViewParameter.indices", false]], "indices (torchtree.evolution.site_pattern.sitepattern attribute)": [[61, "torchtree.evolution.site_pattern.SitePattern.indices", false]], "initialize() (torchtree.core.logger.containerlogger method)": [[23, "torchtree.core.logger.ContainerLogger.initialize", false]], "initialize() (torchtree.core.logger.logger method)": [[23, "torchtree.core.logger.Logger.initialize", false]], "initialize() (torchtree.core.logger.loggerinterface method)": [[23, "torchtree.core.logger.LoggerInterface.initialize", false]], "initialize() (torchtree.core.logger.treelogger method)": [[23, "torchtree.core.logger.TreeLogger.initialize", false]], "initialize_dates_from_taxa() (in module torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.initialize_dates_from_taxa", false]], "input_size (torchtree.nf.realnvp.realnvp attribute)": [[93, "torchtree.nf.realnvp.RealNVP.input_size", false]], "inputs (torchtree.core.logger.containerlogger attribute)": [[23, "torchtree.core.logger.ContainerLogger.inputs", false]], "integrator (class in torchtree.inference.hmc.integrator)": [[79, "torchtree.inference.hmc.integrator.Integrator", false]], "integrator (torchtree.inference.hmc.adaptation.dualaveragingstepsize attribute)": [[75, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.integrator", false]], "integrator (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.integrator", false]], "invariant (torchtree.evolution.site_model.invariantsitemodel property)": [[60, "torchtree.evolution.site_model.InvariantSiteModel.invariant", false]], "invariant (torchtree.evolution.site_model.univariatediscretizedsitemodel property)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.invariant", false]], "invariantsitemodel (class in torchtree.evolution.site_model)": [[60, "torchtree.evolution.site_model.InvariantSiteModel", false]], "inverse() (torchtree.nf.realnvp.batchnorm method)": [[93, "torchtree.nf.realnvp.BatchNorm.inverse", false]], "inverse() (torchtree.nf.realnvp.flowsequential method)": [[93, "torchtree.nf.realnvp.FlowSequential.inverse", false]], "inverse() (torchtree.nf.realnvp.linearmaskedcoupling method)": [[93, "torchtree.nf.realnvp.LinearMaskedCoupling.inverse", false]], "inverse() (torchtree.nf.realnvp.realnvp method)": [[93, "torchtree.nf.realnvp.RealNVP.inverse", false]], "inverse_cdf() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.inverse_cdf", false]], "inverse_cdf() (torchtree.evolution.site_model.weibullsitemodel method)": [[60, "torchtree.evolution.site_model.WeibullSiteModel.inverse_cdf", false]], "inverse_mass_matrix (torchtree.inference.hmc.adaptation.warmupadaptation property)": [[75, "torchtree.inference.hmc.adaptation.WarmupAdaptation.inverse_mass_matrix", false]], "inversegamma (class in torchtree.distributions.inverse_gamma)": [[39, "torchtree.distributions.inverse_gamma.InverseGamma", false]], "is_float() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.is_float", false]], "iterations (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.iterations", false]], "iterations (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.iterations", false]], "iterations (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.iterations", false]], "jacobian() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.jacobian", false]], "jc69 (class in torchtree.evolution.substitution_model.nucleotide)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69", false]], "joint (torchtree.inference.hmc.hamiltonian.hamiltonian attribute)": [[76, "torchtree.inference.hmc.hamiltonian.Hamiltonian.joint", false]], "joint (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.joint", false]], "joint (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.joint", false]], "jointdistributionmodel (class in torchtree.distributions.joint_distribution)": [[40, "torchtree.distributions.joint_distribution.JointDistributionModel", false]], "json_factory() (torchtree.core.parameter.parameter static method)": [[25, "torchtree.core.parameter.Parameter.json_factory", false]], "json_factory() (torchtree.core.parameter.viewparameter static method)": [[25, "torchtree.core.parameter.ViewParameter.json_factory", false]], "json_factory() (torchtree.distributions.bayesian_bridge.bayesianbridge static method)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge.json_factory", false]], "json_factory() (torchtree.distributions.ctmc_scale.ctmcscale static method)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.json_factory", false]], "json_factory() (torchtree.distributions.deterministic_normal.deterministicnormal static method)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.json_factory", false]], "json_factory() (torchtree.distributions.distributions.distribution static method)": [[35, "torchtree.distributions.distributions.Distribution.json_factory", false]], "json_factory() (torchtree.distributions.scale_mixture.scalemixturenormal static method)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.json_factory", false]], "json_factory() (torchtree.evolution.branch_model.simpleclockmodel static method)": [[52, "torchtree.evolution.branch_model.SimpleClockModel.json_factory", false]], "json_factory() (torchtree.evolution.tree_model.reparameterizedtimetreemodel static method)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.json_factory", false]], "json_factory() (torchtree.evolution.tree_model.timetreemodel static method)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.json_factory", false]], "json_factory() (torchtree.evolution.tree_model.unrootedtreemodel static method)": [[71, "torchtree.evolution.tree_model.UnRootedTreeModel.json_factory", false]], "json_factory() (torchtree.evolution.tree_model_flexible.flexibletimetreemodel static method)": [[72, "torchtree.evolution.tree_model_flexible.FlexibleTimeTreeModel.json_factory", false]], "jsonparseerror": [[31, "torchtree.core.utils.JSONParseError", false]], "jsonserializable (class in torchtree.core.serializable)": [[30, "torchtree.core.serializable.JSONSerializable", false]], "k (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.k", false]], "kappa (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[64, "torchtree.evolution.substitution_model.codon.MG94.kappa", false]], "kappa (torchtree.evolution.substitution_model.nucleotide.hky property)": [[67, "torchtree.evolution.substitution_model.nucleotide.HKY.kappa", false]], "kinetic_energy() (torchtree.inference.hmc.hamiltonian.hamiltonian method)": [[76, "torchtree.inference.hmc.hamiltonian.Hamiltonian.kinetic_energy", false]], "klpq (class in torchtree.variational.kl)": [[108, "torchtree.variational.kl.KLpq", false]], "klpqimportance (class in torchtree.variational.kl)": [[108, "torchtree.variational.kl.KLpqImportance", false]], "kwargs (torchtree.core.logger.csv attribute)": [[23, "torchtree.core.logger.CSV.kwargs", false]], "kwargs (torchtree.core.logger.dumper attribute)": [[23, "torchtree.core.logger.Dumper.kwargs", false]], "kwargs (torchtree.core.logger.logger attribute)": [[23, "torchtree.core.logger.Logger.kwargs", false]], "kwargs (torchtree.core.logger.treelogger attribute)": [[23, "torchtree.core.logger.TreeLogger.kwargs", false]], "kwargs (torchtree.distributions.distributions.distribution attribute)": [[35, "torchtree.distributions.distributions.Distribution.kwargs", false]], "lambda_ (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.lambda_", false]], "lambda_ (torchtree.evolution.birth_death.birthdeath attribute)": [[51, "torchtree.evolution.birth_death.BirthDeath.lambda_", false]], "lambda_ (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.lambda_", false]], "layers (torchtree.nf.flow.normalizingflow attribute)": [[90, "torchtree.nf.flow.NormalizingFlow.layers", false]], "leapfrogintegrator (class in torchtree.inference.hmc.integrator)": [[79, "torchtree.inference.hmc.integrator.LeapfrogIntegrator", false]], "learn() (torchtree.inference.hmc.adaptation.adaptivestepsize method)": [[75, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.learn", false]], "learn() (torchtree.inference.hmc.adaptation.adaptor method)": [[75, "torchtree.inference.hmc.adaptation.Adaptor.learn", false]], "learn() (torchtree.inference.hmc.adaptation.dualaveragingstepsize method)": [[75, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.learn", false]], "learn() (torchtree.inference.hmc.adaptation.massmatrixadaptor method)": [[75, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.learn", false]], "learn() (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation method)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.learn", false]], "length_of_tensor_in_dict_parameter() (in module torchtree.cli.utils)": [[17, "torchtree.cli.utils.length_of_tensor_in_dict_parameter", false]], "lg (class in torchtree.evolution.substitution_model.amino_acid)": [[63, "torchtree.evolution.substitution_model.amino_acid.LG", false]], "linear_regression() (in module torchtree.evolution.tree_regression)": [[73, "torchtree.evolution.tree_regression.linear_regression", false]], "linearmaskedcoupling (class in torchtree.nf.realnvp)": [[93, "torchtree.nf.realnvp.LinearMaskedCoupling", false]], "lineartransform (class in torchtree.distributions.transforms)": [[46, "torchtree.distributions.transforms.LinearTransform", false]], "list_of_float() (in module torchtree.cli.argparse_utils)": [[4, "torchtree.cli.argparse_utils.list_of_float", false]], "list_or_int() (in module torchtree.cli.argparse_utils)": [[4, "torchtree.cli.argparse_utils.list_or_int", false]], "listeners (torchtree.core.model.model attribute)": [[24, "torchtree.core.model.Model.listeners", false]], "listeners (torchtree.core.parameter.moduleparameter attribute)": [[25, "torchtree.core.parameter.ModuleParameter.listeners", false]], "listeners (torchtree.core.parameter.parameter attribute)": [[25, "torchtree.core.parameter.Parameter.listeners", false]], "listeners (torchtree.core.parameter.transformedparameter attribute)": [[25, "torchtree.core.parameter.TransformedParameter.listeners", false]], "listeners (torchtree.core.parameter.viewparameter attribute)": [[25, "torchtree.core.parameter.ViewParameter.listeners", false]], "listeners (torchtree.evolution.root_transform.rootparameter attribute)": [[59, "torchtree.evolution.root_transform.RootParameter.listeners", false]], "listparameter (in module torchtree.typing)": [[105, "torchtree.typing.ListParameter", false]], "listtensor (in module torchtree.typing)": [[105, "torchtree.typing.ListTensor", false]], "load_arguments() (torchtree.cli.plugin.plugin method)": [[14, "torchtree.cli.plugin.Plugin.load_arguments", false]], "load_arguments() (torchtree.cli.plugin_manager.pluginmanager method)": [[15, "torchtree.cli.plugin_manager.PluginManager.load_arguments", false]], "load_plugins() (torchtree.cli.plugin_manager.pluginmanager method)": [[15, "torchtree.cli.plugin_manager.PluginManager.load_plugins", false]], "load_state_dict() (torchtree.inference.hmc.adaptation.adaptivestepsize method)": [[75, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.adaptation.adaptor method)": [[75, "torchtree.inference.hmc.adaptation.Adaptor.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.adaptation.dualaveragingstepsize method)": [[75, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.adaptation.massmatrixadaptor method)": [[75, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.integrator.integrator method)": [[79, "torchtree.inference.hmc.integrator.Integrator.load_state_dict", false]], "load_state_dict() (torchtree.inference.hmc.integrator.leapfrogintegrator method)": [[79, "torchtree.inference.hmc.integrator.LeapfrogIntegrator.load_state_dict", false]], "load_state_dict() (torchtree.inference.mcmc.mcmc.mcmc method)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.load_state_dict", false]], "load_state_dict() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.load_state_dict", false]], "load_state_dict() (torchtree.optim.lr_scheduler.scheduler method)": [[102, "torchtree.optim.lr_scheduler.Scheduler.load_state_dict", false]], "load_state_dict() (torchtree.optim.optimizer.optimizer method)": [[103, "torchtree.optim.optimizer.Optimizer.load_state_dict", false]], "loc (torchtree.distributions.deterministic_normal.deterministicnormal attribute)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.loc", false]], "loc (torchtree.distributions.multivariate_normal.multivariatenormal attribute)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal.loc", false]], "loc (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.loc", false]], "local_scale (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge.local_scale", false]], "local_scale (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.local_scale", false]], "log() (torchtree.core.logger.containerlogger method)": [[23, "torchtree.core.logger.ContainerLogger.log", false]], "log() (torchtree.core.logger.logger method)": [[23, "torchtree.core.logger.Logger.log", false]], "log() (torchtree.core.logger.loggerinterface method)": [[23, "torchtree.core.logger.LoggerInterface.log", false]], "log() (torchtree.core.logger.treelogger method)": [[23, "torchtree.core.logger.TreeLogger.log", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.convexcombinationtransform method)": [[46, "torchtree.distributions.transforms.ConvexCombinationTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.cumsumexptransform method)": [[46, "torchtree.distributions.transforms.CumSumExpTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.cumsumsoftplustransform method)": [[46, "torchtree.distributions.transforms.CumSumSoftPlusTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.cumsumtransform method)": [[46, "torchtree.distributions.transforms.CumSumTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.logtransform method)": [[46, "torchtree.distributions.transforms.LogTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.softplustransform method)": [[46, "torchtree.distributions.transforms.SoftPlusTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.distributions.transforms.trilexpdiagonaltransform method)": [[46, "torchtree.distributions.transforms.TrilExpDiagonalTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.evolution.rate_transform.logdifferenceratetransform method)": [[58, "torchtree.evolution.rate_transform.LogDifferenceRateTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.evolution.rate_transform.rescaledratetransform method)": [[58, "torchtree.evolution.rate_transform.RescaledRateTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.evolution.tree_height_transform.differencenodeheighttransform method)": [[69, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.evolution.tree_height_transform.generalnodeheighttransform method)": [[69, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.log_abs_det_jacobian", false]], "log_abs_det_jacobian() (torchtree.nf.planar.planartransform method)": [[92, "torchtree.nf.planar.PlanarTransform.log_abs_det_jacobian", false]], "log_gamma (torchtree.nf.realnvp.batchnorm attribute)": [[93, "torchtree.nf.realnvp.BatchNorm.log_gamma", false]], "log_gamma_one_half (torchtree.distributions.ctmc_scale.ctmcscale attribute)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.log_gamma_one_half", false]], "log_p() (torchtree.evolution.bdsk.piecewiseconstantbirthdeath method)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.log_p", false]], "log_p() (torchtree.evolution.birth_death.birthdeath method)": [[51, "torchtree.evolution.birth_death.BirthDeath.log_p", false]], "log_prob() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.log_prob", false]], "log_prob() (torchtree.distributions.distributions.distribution method)": [[35, "torchtree.distributions.distributions.Distribution.log_prob", false]], "log_prob() (torchtree.distributions.distributions.distributionmodel method)": [[35, "torchtree.distributions.distributions.DistributionModel.log_prob", false]], "log_prob() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[40, "torchtree.distributions.joint_distribution.JointDistributionModel.log_prob", false]], "log_prob() (torchtree.distributions.multivariate_normal.multivariatenormal method)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal.log_prob", false]], "log_prob() (torchtree.distributions.one_on_x.oneonx method)": [[44, "torchtree.distributions.one_on_x.OneOnX.log_prob", false]], "log_prob() (torchtree.evolution.bdsk.piecewiseconstantbirthdeath method)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.log_prob", false]], "log_prob() (torchtree.evolution.birth_death.birthdeath method)": [[51, "torchtree.evolution.birth_death.BirthDeath.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.constantcoalescent method)": [[53, "torchtree.evolution.coalescent.ConstantCoalescent.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.constantcoalescentintegrated method)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.exponentialcoalescent method)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescent.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.piecewiseconstantcoalescent method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescent.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.piecewiseconstantcoalescentgrid method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid method)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid method)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.log_prob", false]], "log_prob() (torchtree.evolution.coalescent.softpiecewiseconstantcoalescentgrid method)": [[53, "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid.log_prob", false]], "log_prob() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.log_prob", false]], "log_prob() (torchtree.nf.realnvp.realnvp method)": [[93, "torchtree.nf.realnvp.RealNVP.log_prob", false]], "log_q() (torchtree.evolution.bdsk.piecewiseconstantbirthdeath method)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.log_q", false]], "log_q() (torchtree.evolution.birth_death.birthdeath method)": [[51, "torchtree.evolution.birth_death.BirthDeath.log_q", false]], "logdifferenceratetransform (class in torchtree.evolution.rate_transform)": [[58, "torchtree.evolution.rate_transform.LogDifferenceRateTransform", false]], "logger (class in torchtree.core.logger)": [[23, "torchtree.core.logger.Logger", false]], "logger (in module torchtree.cli.advi)": [[3, "torchtree.cli.advi.logger", false]], "logger (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.logger", false]], "loggerinterface (class in torchtree.core.logger)": [[23, "torchtree.core.logger.LoggerInterface", false]], "loggers (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.loggers", false]], "loggers (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.loggers", false]], "loggers (torchtree.inference.sampler.sampler attribute)": [[87, "torchtree.inference.sampler.Sampler.loggers", false]], "loggers (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.loggers", false]], "lognormal (class in torchtree.distributions.log_normal)": [[41, "torchtree.distributions.log_normal.LogNormal", false]], "logtransform (class in torchtree.distributions.transforms)": [[46, "torchtree.distributions.transforms.LogTransform", false]], "loss (torchtree.optim.convergence.variationalconvergence attribute)": [[100, "torchtree.optim.convergence.VariationalConvergence.loss", false]], "loss (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.loss", false]], "lower (torchtree.cli.utils.constraint attribute)": [[17, "torchtree.cli.utils.CONSTRAINT.LOWER", false]], "lp (torchtree.core.model.callablemodel attribute)": [[24, "torchtree.core.model.CallableModel.lp", false]], "lp_needs_update (torchtree.core.model.callablemodel attribute)": [[24, "torchtree.core.model.CallableModel.lp_needs_update", false]], "main() (in module torchtree.cli.cli)": [[5, "torchtree.cli.cli.main", false]], "main() (in module torchtree.torchtree)": [[104, "torchtree.torchtree.main", false]], "make_unconstrained() (in module torchtree.cli.utils)": [[17, "torchtree.cli.utils.make_unconstrained", false]], "mapping (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.mapping", false]], "mapping (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.mapping", false]], "mass_matrix (torchtree.inference.hmc.adaptation.massmatrixadaptor property)": [[75, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.mass_matrix", false]], "mass_matrix (torchtree.inference.hmc.adaptation.warmupadaptation property)": [[75, "torchtree.inference.hmc.adaptation.WarmupAdaptation.mass_matrix", false]], "mass_matrix (torchtree.inference.hmc.operator.hmcoperator property)": [[80, "torchtree.inference.hmc.operator.HMCOperator.mass_matrix", false]], "mass_matrix_adaptor (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.mass_matrix_adaptor", false]], "massmatrixadaptor (class in torchtree.inference.hmc.adaptation)": [[75, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor", false]], "maximize (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.maximize", false]], "maximum_likelihood() (torchtree.evolution.coalescent.abstractcoalescentdistribution class method)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.maximum_likelihood", false]], "maximum_likelihood() (torchtree.evolution.coalescent.constantcoalescent class method)": [[53, "torchtree.evolution.coalescent.ConstantCoalescent.maximum_likelihood", false]], "maximum_likelihood() (torchtree.evolution.coalescent.piecewiseconstantcoalescent class method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescent.maximum_likelihood", false]], "mcmc (class in torchtree.inference.mcmc.mcmc)": [[85, "torchtree.inference.mcmc.mcmc.MCMC", false]], "mcmcoperator (class in torchtree.inference.mcmc.operator)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator", false]], "mean() (torchtree.ops.welford.welfordvariance method)": [[99, "torchtree.ops.welford.WelfordVariance.mean", false]], "mg94 (class in torchtree.evolution.substitution_model.codon)": [[64, "torchtree.evolution.substitution_model.codon.MG94", false]], "model (class in torchtree.core.model)": [[24, "torchtree.core.model.Model", false]], "model (torchtree.inference.sampler.sampler attribute)": [[87, "torchtree.inference.sampler.Sampler.model", false]], "modellistener (class in torchtree.core.parametric)": [[28, "torchtree.core.parametric.ModelListener", false]], "models() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.models", false]], "module": [[3, "module-torchtree.cli.advi", false], [4, "module-torchtree.cli.argparse_utils", false], [5, "module-torchtree.cli.cli", false], [6, "module-torchtree.cli.evolution", false], [7, "module-torchtree.cli.hmc", false], [8, "module-torchtree.cli", false], [9, "module-torchtree.cli.jacobians", false], [10, "module-torchtree.cli.loggers", false], [11, "module-torchtree.cli.map", false], [12, "module-torchtree.cli.mcmc", false], [13, "module-torchtree.cli.operators", false], [14, "module-torchtree.cli.plugin", false], [15, "module-torchtree.cli.plugin_manager", false], [16, "module-torchtree.cli.priors", false], [17, "module-torchtree.cli.utils", false], [18, "module-torchtree.core.abstractparameter", false], [19, "module-torchtree.core.classproperty_decorator", false], [20, "module-torchtree.core.container", false], [21, "module-torchtree.core.identifiable", false], [22, "module-torchtree.core", false], [23, "module-torchtree.core.logger", false], [24, "module-torchtree.core.model", false], [25, "module-torchtree.core.parameter", false], [26, "module-torchtree.core.parameter_encoder", false], [27, "module-torchtree.core.parameter_utils", false], [28, "module-torchtree.core.parametric", false], [29, "module-torchtree.core.runnable", false], [30, "module-torchtree.core.serializable", false], [31, "module-torchtree.core.utils", false], [32, "module-torchtree.distributions.bayesian_bridge", false], [33, "module-torchtree.distributions.ctmc_scale", false], [34, "module-torchtree.distributions.deterministic_normal", false], [35, "module-torchtree.distributions.distributions", false], [36, "module-torchtree.distributions.gmrf", false], [37, "module-torchtree.distributions.gmrf_integrated", false], [38, "module-torchtree.distributions", false], [39, "module-torchtree.distributions.inverse_gamma", false], [40, "module-torchtree.distributions.joint_distribution", false], [41, "module-torchtree.distributions.log_normal", false], [42, "module-torchtree.distributions.multivariate_normal", false], [43, "module-torchtree.distributions.normal", false], [44, "module-torchtree.distributions.one_on_x", false], [45, "module-torchtree.distributions.scale_mixture", false], [46, "module-torchtree.distributions.transforms", false], [47, "module-torchtree.distributions.tree_prior", false], [48, "module-torchtree.evolution.alignment", false], [49, "module-torchtree.evolution.attribute_pattern", false], [50, "module-torchtree.evolution.bdsk", false], [51, "module-torchtree.evolution.birth_death", false], [52, "module-torchtree.evolution.branch_model", false], [53, "module-torchtree.evolution.coalescent", false], [54, "module-torchtree.evolution.datatype", false], [55, "module-torchtree.evolution", false], [56, "module-torchtree.evolution.io", false], [57, "module-torchtree.evolution.poisson_tree_likelihood", false], [58, "module-torchtree.evolution.rate_transform", false], [59, "module-torchtree.evolution.root_transform", false], [60, "module-torchtree.evolution.site_model", false], [61, "module-torchtree.evolution.site_pattern", false], [62, "module-torchtree.evolution.substitution_model.abstract", false], [63, "module-torchtree.evolution.substitution_model.amino_acid", false], [64, "module-torchtree.evolution.substitution_model.codon", false], [65, "module-torchtree.evolution.substitution_model.general", false], [66, "module-torchtree.evolution.substitution_model", false], [67, "module-torchtree.evolution.substitution_model.nucleotide", false], [68, "module-torchtree.evolution.taxa", false], [69, "module-torchtree.evolution.tree_height_transform", false], [70, "module-torchtree.evolution.tree_likelihood", false], [71, "module-torchtree.evolution.tree_model", false], [72, "module-torchtree.evolution.tree_model_flexible", false], [73, "module-torchtree.evolution.tree_regression", false], [74, "module-torchtree", false], [75, "module-torchtree.inference.hmc.adaptation", false], [76, "module-torchtree.inference.hmc.hamiltonian", false], [77, "module-torchtree.inference.hmc.hmc", false], [78, "module-torchtree.inference.hmc", false], [79, "module-torchtree.inference.hmc.integrator", false], [80, "module-torchtree.inference.hmc.operator", false], [81, "module-torchtree.inference.hmc.stan_adaptation", false], [82, "module-torchtree.inference", false], [83, "module-torchtree.inference.mcmc.gmrf_block_updating", false], [84, "module-torchtree.inference.mcmc", false], [85, "module-torchtree.inference.mcmc.mcmc", false], [86, "module-torchtree.inference.mcmc.operator", false], [87, "module-torchtree.inference.sampler", false], [88, "module-torchtree.inference.utils", false], [89, "module-torchtree.nf.energy_functions", false], [90, "module-torchtree.nf.flow", false], [91, "module-torchtree.nf", false], [92, "module-torchtree.nf.planar", false], [93, "module-torchtree.nf.realnvp", false], [94, "module-torchtree.nn", false], [95, "module-torchtree.nn.module", false], [96, "module-torchtree.ops.dual_averaging", false], [97, "module-torchtree.ops", false], [98, "module-torchtree.ops.smooth", false], [99, "module-torchtree.ops.welford", false], [100, "module-torchtree.optim.convergence", false], [101, "module-torchtree.optim", false], [102, "module-torchtree.optim.lr_scheduler", false], [103, "module-torchtree.optim.optimizer", false], [104, "module-torchtree.torchtree", false], [105, "module-torchtree.typing", false], [106, "module-torchtree.variational.chi", false], [107, "module-torchtree.variational", false], [108, "module-torchtree.variational.kl", false], [109, "module-torchtree.variational.renyi", false]], "module (class in torchtree.nn.module)": [[95, "torchtree.nn.module.Module", false]], "module (torchtree.core.parameter.moduleparameter attribute)": [[25, "torchtree.core.parameter.ModuleParameter.module", false]], "module (torchtree.nn.module.module property)": [[95, "torchtree.nn.module.Module.module", false]], "moduleparameter (class in torchtree.core.parameter)": [[25, "torchtree.core.parameter.ModuleParameter", false]], "modules (torchtree.nf.flow.normalizingflow attribute)": [[90, "torchtree.nf.flow.NormalizingFlow.modules", false]], "momentum (torchtree.nf.realnvp.batchnorm attribute)": [[93, "torchtree.nf.realnvp.BatchNorm.momentum", false]], "mu (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.mu", false]], "mu (torchtree.evolution.birth_death.birthdeath attribute)": [[51, "torchtree.evolution.birth_death.BirthDeath.mu", false]], "mu (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.mu", false]], "multivariatenormal (class in torchtree.distributions.multivariate_normal)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal", false]], "n (torchtree.variational.chi.cubo attribute)": [[106, "torchtree.variational.chi.CUBO.n", false]], "name (torchtree.evolution.datatype.codondatatype attribute)": [[54, "torchtree.evolution.datatype.CodonDataType.name", false]], "name (torchtree.evolution.io.node attribute)": [[56, "torchtree.evolution.io.Node.name", false]], "need_update (torchtree.core.parameter.moduleparameter attribute)": [[25, "torchtree.core.parameter.ModuleParameter.need_update", false]], "need_update (torchtree.core.parameter.transformedparameter attribute)": [[25, "torchtree.core.parameter.TransformedParameter.need_update", false]], "need_update (torchtree.evolution.root_transform.rootparameter attribute)": [[59, "torchtree.evolution.root_transform.RootParameter.need_update", false]], "needs_update (torchtree.evolution.site_model.sitemodel attribute)": [[60, "torchtree.evolution.site_model.SiteModel.needs_update", false]], "net (torchtree.nf.realnvp.realnvp attribute)": [[93, "torchtree.nf.realnvp.RealNVP.net", false]], "net_parameters (torchtree.nf.realnvp.realnvp attribute)": [[93, "torchtree.nf.realnvp.RealNVP.net_parameters", false]], "newton_raphson() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.newton_raphson", false]], "node (class in torchtree.evolution.io)": [[56, "torchtree.evolution.io.Node", false]], "node_heights (torchtree.evolution.coalescent.faketreemodel property)": [[53, "torchtree.evolution.coalescent.FakeTreeModel.node_heights", false]], "node_heights (torchtree.evolution.tree_model.reparameterizedtimetreemodel property)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.node_heights", false]], "node_heights (torchtree.evolution.tree_model.timetreemodel property)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.node_heights", false]], "non_synonymous (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[64, "torchtree.evolution.substitution_model.codon.MG94.non_synonymous", false]], "nonsymmetricsubstitutionmodel (class in torchtree.evolution.substitution_model.abstract)": [[62, "torchtree.evolution.substitution_model.abstract.NonSymmetricSubstitutionModel", false]], "norm() (torchtree.evolution.substitution_model.abstract.abstractsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.abstract.AbstractSubstitutionModel.norm", false]], "normal (class in torchtree.distributions.normal)": [[43, "torchtree.distributions.normal.Normal", false]], "normalize (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.normalize", false]], "normalizingflow (class in torchtree.nf.flow)": [[90, "torchtree.nf.flow.NormalizingFlow", false]], "nucleotide_ambiguity_states (torchtree.evolution.datatype.nucleotidedatatype attribute)": [[54, "torchtree.evolution.datatype.NucleotideDataType.NUCLEOTIDE_AMBIGUITY_STATES", false]], "nucleotide_states (torchtree.evolution.datatype.nucleotidedatatype attribute)": [[54, "torchtree.evolution.datatype.NucleotideDataType.NUCLEOTIDE_STATES", false]], "nucleotidedatatype (class in torchtree.evolution.datatype)": [[54, "torchtree.evolution.datatype.NucleotideDataType", false]], "nucleotides (torchtree.evolution.datatype.nucleotidedatatype attribute)": [[54, "torchtree.evolution.datatype.NucleotideDataType.NUCLEOTIDES", false]], "num_warmup (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.num_warmup", false]], "number_of_codons (torchtree.evolution.datatype.codondatatype attribute)": [[54, "torchtree.evolution.datatype.CodonDataType.NUMBER_OF_CODONS", false]], "object_hook() (torchtree.core.utils.tensordecoder method)": [[31, "torchtree.core.utils.TensorDecoder.object_hook", false]], "objs (torchtree.core.logger.csv attribute)": [[23, "torchtree.core.logger.CSV.objs", false]], "objs (torchtree.core.logger.logger attribute)": [[23, "torchtree.core.logger.Logger.objs", false]], "oneonx (class in torchtree.distributions.one_on_x)": [[44, "torchtree.distributions.one_on_x.OneOnX", false]], "optimizer (class in torchtree.optim.optimizer)": [[103, "torchtree.optim.optimizer.Optimizer", false]], "optimizer (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.optimizer", false]], "ordereddicttype (in module torchtree.typing)": [[105, "torchtree.typing.OrderedDictType", false]], "origin (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.origin", false]], "origin (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.origin", false]], "origin (torchtree.evolution.birth_death.birthdeath attribute)": [[51, "torchtree.evolution.birth_death.BirthDeath.origin", false]], "origin (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.origin", false]], "origin_is_root_edge (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.origin_is_root_edge", false]], "origin_is_root_edge (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.origin_is_root_edge", false]], "p (torchtree.variational.chi.cubo attribute)": [[106, "torchtree.variational.chi.CUBO.p", false]], "p (torchtree.variational.kl.elbo attribute)": [[108, "torchtree.variational.kl.ELBO.p", false]], "p (torchtree.variational.kl.klpq attribute)": [[108, "torchtree.variational.kl.KLpq.p", false]], "p (torchtree.variational.kl.klpqimportance attribute)": [[108, "torchtree.variational.kl.KLpqImportance.p", false]], "p (torchtree.variational.kl.selbo attribute)": [[108, "torchtree.variational.kl.SELBO.p", false]], "p (torchtree.variational.renyi.vr attribute)": [[109, "torchtree.variational.renyi.VR.p", false]], "p0() (torchtree.evolution.bdsk.piecewiseconstantbirthdeath method)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.p0", false]], "p_t() (torchtree.evolution.substitution_model.abstract.nonsymmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.abstract.NonSymmetricSubstitutionModel.p_t", false]], "p_t() (torchtree.evolution.substitution_model.abstract.substitutionmodel method)": [[62, "torchtree.evolution.substitution_model.abstract.SubstitutionModel.p_t", false]], "p_t() (torchtree.evolution.substitution_model.abstract.symmetricsubstitutionmodel method)": [[62, "torchtree.evolution.substitution_model.abstract.SymmetricSubstitutionModel.p_t", false]], "p_t() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.p_t", false]], "p_t() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.p_t", false]], "p_t() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.p_t", false]], "p_t_analytical() (torchtree.evolution.substitution_model.nucleotide.hky method)": [[67, "torchtree.evolution.substitution_model.nucleotide.HKY.p_t_analytical", false]], "pack_tensor() (in module torchtree.core.parameter_utils)": [[27, "torchtree.core.parameter_utils.pack_tensor", false]], "package_contents() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.package_contents", false]], "parameter (class in torchtree.core.parameter)": [[25, "torchtree.core.parameter.Parameter", false]], "parameter (torchtree.core.parameter.viewparameter attribute)": [[25, "torchtree.core.parameter.ViewParameter.parameter", false]], "parameter.to() (in module torchtree.core.parameter)": [[25, "id0", false], [25, "id5", false], [25, "id6", false]], "parameterencoder (class in torchtree.core.parameter_encoder)": [[26, "torchtree.core.parameter_encoder.ParameterEncoder", false]], "parameterlistener (class in torchtree.core.parametric)": [[28, "torchtree.core.parametric.ParameterListener", false]], "parameters (torchtree.core.logger.dumper attribute)": [[23, "torchtree.core.logger.Dumper.parameters", false]], "parameters (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.parameters", false]], "parameters (torchtree.inference.mcmc.mcmc.mcmc attribute)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.parameters", false]], "parameters (torchtree.inference.mcmc.operator.mcmcoperator attribute)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.parameters", false]], "parameters (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.parameters", false]], "parameters() (torchtree.core.abstractparameter.abstractparameter method)": [[18, "torchtree.core.abstractparameter.AbstractParameter.parameters", false]], "parameters() (torchtree.core.parameter.moduleparameter method)": [[25, "torchtree.core.parameter.ModuleParameter.parameters", false]], "parameters() (torchtree.core.parameter.transformedparameter method)": [[25, "torchtree.core.parameter.TransformedParameter.parameters", false]], "parameters() (torchtree.core.parametric.parametric method)": [[28, "torchtree.core.parametric.Parametric.parameters", false]], "parameters() (torchtree.evolution.root_transform.rootparameter method)": [[59, "torchtree.evolution.root_transform.RootParameter.parameters", false]], "parameters() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.parameters", false]], "parameters() (torchtree.nf.realnvp.realnvp method)": [[93, "torchtree.nf.realnvp.RealNVP.parameters", false]], "parametric (class in torchtree.core.parametric)": [[28, "torchtree.core.parametric.Parametric", false]], "params() (torchtree.core.container.container method)": [[20, "torchtree.core.container.Container.params", false]], "parent (torchtree.evolution.io.node attribute)": [[56, "torchtree.evolution.io.Node.parent", false]], "parse_distribution() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.parse_distribution", false]], "parse_taxa() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.parse_taxa", false]], "parse_translate() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.parse_translate", false]], "parse_tree() (in module torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.parse_tree", false]], "parse_trees() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.parse_trees", false]], "partial() (torchtree.evolution.datatype.aminoaciddatatype method)": [[54, "torchtree.evolution.datatype.AminoAcidDataType.partial", false]], "partial() (torchtree.evolution.datatype.codondatatype method)": [[54, "torchtree.evolution.datatype.CodonDataType.partial", false]], "partial() (torchtree.evolution.datatype.datatype method)": [[54, "torchtree.evolution.datatype.DataType.partial", false]], "partial() (torchtree.evolution.datatype.generaldatatype method)": [[54, "torchtree.evolution.datatype.GeneralDataType.partial", false]], "partial() (torchtree.evolution.datatype.nucleotidedatatype method)": [[54, "torchtree.evolution.datatype.NucleotideDataType.partial", false]], "piecewiseconstantbirthdeath (class in torchtree.evolution.bdsk)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath", false]], "piecewiseconstantcoalescent (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescent", false]], "piecewiseconstantcoalescentgrid (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid", false]], "piecewiseconstantcoalescentgridmodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel", false]], "piecewiseconstantcoalescentmodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentModel", false]], "piecewiseexponentialcoalescentgrid (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid", false]], "piecewiseexponentialcoalescentgridmodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel", false]], "piecewiselinearcoalescentgrid (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid", false]], "piecewiselinearcoalescentgridmodel (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel", false]], "planartransform (class in torchtree.nf.planar)": [[92, "torchtree.nf.planar.PlanarTransform", false]], "plugin (class in torchtree.cli.plugin)": [[14, "torchtree.cli.plugin.Plugin", false]], "plugin_manager (in module torchtree.cli)": [[8, "torchtree.cli.PLUGIN_MANAGER", false]], "pluginmanager (class in torchtree.cli.plugin_manager)": [[15, "torchtree.cli.plugin_manager.PluginManager", false]], "plugins() (torchtree.cli.plugin_manager.pluginmanager method)": [[15, "torchtree.cli.plugin_manager.PluginManager.plugins", false]], "poissontreelikelihood (class in torchtree.evolution.poisson_tree_likelihood)": [[57, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood", false]], "postorder (torchtree.evolution.tree_model.abstracttreemodel property)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel.postorder", false]], "postorder (torchtree.evolution.tree_model.treemodel property)": [[71, "torchtree.evolution.tree_model.TreeModel.postorder", false]], "potential_energy() (torchtree.inference.hmc.hamiltonian.hamiltonian method)": [[76, "torchtree.inference.hmc.hamiltonian.Hamiltonian.potential_energy", false]], "precision (torchtree.distributions.gmrf.gmrf attribute)": [[36, "torchtree.distributions.gmrf.GMRF.precision", false]], "precision_matrix() (torchtree.distributions.gmrf.gmrf method)": [[36, "torchtree.distributions.gmrf.GMRF.precision_matrix", false]], "print_graph() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.print_graph", false]], "probabilities() (torchtree.evolution.site_model.constantsitemodel method)": [[60, "torchtree.evolution.site_model.ConstantSiteModel.probabilities", false]], "probabilities() (torchtree.evolution.site_model.invariantsitemodel method)": [[60, "torchtree.evolution.site_model.InvariantSiteModel.probabilities", false]], "probabilities() (torchtree.evolution.site_model.sitemodel method)": [[60, "torchtree.evolution.site_model.SiteModel.probabilities", false]], "probabilities() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.probabilities", false]], "process_all() (torchtree.cli.plugin.plugin method)": [[14, "torchtree.cli.plugin.Plugin.process_all", false]], "process_coalescent() (torchtree.cli.plugin.plugin method)": [[14, "torchtree.cli.plugin.Plugin.process_coalescent", false]], "process_data_coalesent() (in module torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.process_data_coalesent", false]], "process_object() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.process_object", false]], "process_object_number() (in module torchtree.distributions.bayesian_bridge)": [[32, "torchtree.distributions.bayesian_bridge.process_object_number", false]], "process_object_with_key() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.process_object_with_key", false]], "process_objects() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.process_objects", false]], "process_tree_likelihood() (torchtree.cli.plugin.plugin method)": [[14, "torchtree.cli.plugin.Plugin.process_tree_likelihood", false]], "propose_precision() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.propose_precision", false]], "psi (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.psi", false]], "psi (torchtree.evolution.birth_death.birthdeath attribute)": [[51, "torchtree.evolution.birth_death.BirthDeath.psi", false]], "psi (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.psi", false]], "q (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.Q", false]], "q (torchtree.variational.chi.cubo attribute)": [[106, "torchtree.variational.chi.CUBO.q", false]], "q (torchtree.variational.kl.elbo attribute)": [[108, "torchtree.variational.kl.ELBO.q", false]], "q (torchtree.variational.kl.klpq attribute)": [[108, "torchtree.variational.kl.KLpq.q", false]], "q (torchtree.variational.kl.klpqimportance attribute)": [[108, "torchtree.variational.kl.KLpqImportance.q", false]], "q (torchtree.variational.renyi.vr attribute)": [[109, "torchtree.variational.renyi.VR.q", false]], "q() (torchtree.evolution.substitution_model.abstract.substitutionmodel method)": [[62, "torchtree.evolution.substitution_model.abstract.SubstitutionModel.q", false]], "q() (torchtree.evolution.substitution_model.codon.mg94 method)": [[64, "torchtree.evolution.substitution_model.codon.MG94.q", false]], "q() (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.q", false]], "q() (torchtree.evolution.substitution_model.general.generaljc69 method)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.q", false]], "q() (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.q", false]], "q() (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel method)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.q", false]], "q() (torchtree.evolution.substitution_model.nucleotide.gtr method)": [[67, "torchtree.evolution.substitution_model.nucleotide.GTR.q", false]], "q() (torchtree.evolution.substitution_model.nucleotide.hky method)": [[67, "torchtree.evolution.substitution_model.nucleotide.HKY.q", false]], "q() (torchtree.evolution.substitution_model.nucleotide.jc69 method)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.q", false]], "r (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.R", false]], "random_tree_from_heights() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.random_tree_from_heights", false]], "rate (torchtree.distributions.inverse_gamma.inversegamma property)": [[39, "torchtree.distributions.inverse_gamma.InverseGamma.rate", false]], "rate (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[47, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.rate", false]], "rate (torchtree.evolution.root_transform.rootparameter attribute)": [[59, "torchtree.evolution.root_transform.RootParameter.rate", false]], "rates (torchtree.evolution.branch_model.branchmodel property)": [[52, "torchtree.evolution.branch_model.BranchModel.rates", false]], "rates (torchtree.evolution.branch_model.simpleclockmodel property)": [[52, "torchtree.evolution.branch_model.SimpleClockModel.rates", false]], "rates (torchtree.evolution.branch_model.strictclockmodel property)": [[52, "torchtree.evolution.branch_model.StrictClockModel.rates", false]], "rates (torchtree.evolution.substitution_model.abstract.substitutionmodel property)": [[62, "torchtree.evolution.substitution_model.abstract.SubstitutionModel.rates", false]], "rates (torchtree.evolution.substitution_model.amino_acid.lg property)": [[63, "torchtree.evolution.substitution_model.amino_acid.LG.rates", false]], "rates (torchtree.evolution.substitution_model.amino_acid.wag property)": [[63, "torchtree.evolution.substitution_model.amino_acid.WAG.rates", false]], "rates (torchtree.evolution.substitution_model.codon.mg94 property)": [[64, "torchtree.evolution.substitution_model.codon.MG94.rates", false]], "rates (torchtree.evolution.substitution_model.general.generaljc69 property)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.rates", false]], "rates (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel property)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.rates", false]], "rates (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel property)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.rates", false]], "rates (torchtree.evolution.substitution_model.nucleotide.gtr property)": [[67, "torchtree.evolution.substitution_model.nucleotide.GTR.rates", false]], "rates (torchtree.evolution.substitution_model.nucleotide.hky property)": [[67, "torchtree.evolution.substitution_model.nucleotide.HKY.rates", false]], "rates (torchtree.evolution.substitution_model.nucleotide.jc69 property)": [[67, "torchtree.evolution.substitution_model.nucleotide.JC69.rates", false]], "rates() (torchtree.evolution.site_model.constantsitemodel method)": [[60, "torchtree.evolution.site_model.ConstantSiteModel.rates", false]], "rates() (torchtree.evolution.site_model.invariantsitemodel method)": [[60, "torchtree.evolution.site_model.InvariantSiteModel.rates", false]], "rates() (torchtree.evolution.site_model.sitemodel method)": [[60, "torchtree.evolution.site_model.SiteModel.rates", false]], "rates() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.rates", false]], "read_dates_from_csv() (in module torchtree.cli.utils)": [[17, "torchtree.cli.utils.read_dates_from_csv", false]], "read_fasta_sequences() (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.read_fasta_sequences", false]], "read_tree() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.read_tree", false]], "read_tree_and_alignment() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.read_tree_and_alignment", false]], "realnvp (class in torchtree.nf.realnvp)": [[93, "torchtree.nf.realnvp.RealNVP", false]], "register_class() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.register_class", false]], "register_model() (torchtree.core.parametric.parametric method)": [[28, "torchtree.core.parametric.Parametric.register_model", false]], "register_parameter() (torchtree.core.parametric.parametric method)": [[28, "torchtree.core.parametric.Parametric.register_parameter", false]], "registered_classes (in module torchtree.core.utils)": [[31, "torchtree.core.utils.REGISTERED_CLASSES", false]], "reject() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.reject", false]], "rel_difference() (torchtree.optim.convergence.stanvariationalconvergence static method)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.rel_difference", false]], "relative_times (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.relative_times", false]], "relative_times (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.relative_times", false]], "removal_probability (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.removal_probability", false]], "removal_probability (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.removal_probability", false]], "remove_comments() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.remove_comments", false]], "remove_constraints() (in module torchtree.cli.utils)": [[17, "torchtree.cli.utils.remove_constraints", false]], "remove_model_listener() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.remove_model_listener", false]], "remove_parameter_listener() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.remove_parameter_listener", false]], "remove_sample() (torchtree.ops.welford.welfordvariance method)": [[99, "torchtree.ops.welford.WelfordVariance.remove_sample", false]], "reparameterizedtimetreemodel (class in torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel", false]], "replace_star_with_str() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.replace_star_with_str", false]], "replace_wildcard_with_str() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.replace_wildcard_with_str", false]], "requires_grad (torchtree.core.abstractparameter.abstractparameter property)": [[18, "torchtree.core.abstractparameter.AbstractParameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.catparameter property)": [[25, "torchtree.core.parameter.CatParameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.moduleparameter property)": [[25, "torchtree.core.parameter.ModuleParameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.parameter property)": [[25, "torchtree.core.parameter.Parameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.transformedparameter property)": [[25, "torchtree.core.parameter.TransformedParameter.requires_grad", false]], "requires_grad (torchtree.core.parameter.viewparameter property)": [[25, "torchtree.core.parameter.ViewParameter.requires_grad", false]], "rescale (torchtree.distributions.gmrf.gmrf attribute)": [[36, "torchtree.distributions.gmrf.GMRF.rescale", false]], "rescale (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.rescale", false]], "rescaledratetransform (class in torchtree.evolution.rate_transform)": [[58, "torchtree.evolution.rate_transform.RescaledRateTransform", false]], "reset() (torchtree.ops.welford.welfordvariance method)": [[99, "torchtree.ops.welford.WelfordVariance.reset", false]], "restart() (torchtree.inference.hmc.adaptation.adaptivestepsize method)": [[75, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.restart", false]], "restart() (torchtree.inference.hmc.adaptation.adaptor method)": [[75, "torchtree.inference.hmc.adaptation.Adaptor.restart", false]], "restart() (torchtree.inference.hmc.adaptation.dualaveragingstepsize method)": [[75, "torchtree.inference.hmc.adaptation.DualAveragingStepSize.restart", false]], "restart() (torchtree.inference.hmc.adaptation.massmatrixadaptor method)": [[75, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.restart", false]], "restart() (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation method)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.restart", false]], "restart() (torchtree.ops.dual_averaging.dualaveraging method)": [[96, "torchtree.ops.dual_averaging.DualAveraging.restart", false]], "rho (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.rho", false]], "rho (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.rho", false]], "rho (torchtree.evolution.birth_death.birthdeath attribute)": [[51, "torchtree.evolution.birth_death.BirthDeath.rho", false]], "rho (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.rho", false]], "rootparameter (class in torchtree.evolution.root_transform)": [[59, "torchtree.evolution.root_transform.RootParameter", false]], "rsample() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.rsample", false]], "rsample() (torchtree.distributions.distributions.distribution method)": [[35, "torchtree.distributions.distributions.Distribution.rsample", false]], "rsample() (torchtree.distributions.distributions.distributionmodel method)": [[35, "torchtree.distributions.distributions.DistributionModel.rsample", false]], "rsample() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[40, "torchtree.distributions.joint_distribution.JointDistributionModel.rsample", false]], "rsample() (torchtree.distributions.multivariate_normal.multivariatenormal method)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal.rsample", false]], "rsample() (torchtree.evolution.coalescent.constantcoalescent method)": [[53, "torchtree.evolution.coalescent.ConstantCoalescent.rsample", false]], "rsample() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.rsample", false]], "rsample() (torchtree.nf.realnvp.realnvp method)": [[93, "torchtree.nf.realnvp.RealNVP.rsample", false]], "run() (torchtree.core.logger.csv method)": [[23, "torchtree.core.logger.CSV.run", false]], "run() (torchtree.core.logger.dumper method)": [[23, "torchtree.core.logger.Dumper.run", false]], "run() (torchtree.core.logger.loggerinterface method)": [[23, "torchtree.core.logger.LoggerInterface.run", false]], "run() (torchtree.core.runnable.runnable method)": [[29, "torchtree.core.runnable.Runnable.run", false]], "run() (torchtree.inference.hmc.hmc.hmc method)": [[77, "torchtree.inference.hmc.hmc.HMC.run", false]], "run() (torchtree.inference.mcmc.mcmc.mcmc method)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.run", false]], "run() (torchtree.inference.sampler.sampler method)": [[87, "torchtree.inference.sampler.Sampler.run", false]], "run() (torchtree.optim.optimizer.optimizer method)": [[103, "torchtree.optim.optimizer.Optimizer.run", false]], "run_tree_regression() (in module torchtree.cli.evolution)": [[6, "torchtree.cli.evolution.run_tree_regression", false]], "runnable (class in torchtree.core.runnable)": [[29, "torchtree.core.runnable.Runnable", false]], "s (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.s", false]], "s_net (torchtree.nf.realnvp.linearmaskedcoupling attribute)": [[93, "torchtree.nf.realnvp.LinearMaskedCoupling.s_net", false]], "sample (torchtree.core.logger.containerlogger attribute)": [[23, "torchtree.core.logger.ContainerLogger.sample", false]], "sample (torchtree.core.logger.logger attribute)": [[23, "torchtree.core.logger.Logger.sample", false]], "sample (torchtree.core.logger.treelogger attribute)": [[23, "torchtree.core.logger.TreeLogger.sample", false]], "sample() (torchtree.distributions.deterministic_normal.deterministicnormal method)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.sample", false]], "sample() (torchtree.distributions.distributions.distribution method)": [[35, "torchtree.distributions.distributions.Distribution.sample", false]], "sample() (torchtree.distributions.distributions.distributionmodel method)": [[35, "torchtree.distributions.distributions.DistributionModel.sample", false]], "sample() (torchtree.distributions.joint_distribution.jointdistributionmodel method)": [[40, "torchtree.distributions.joint_distribution.JointDistributionModel.sample", false]], "sample() (torchtree.distributions.multivariate_normal.multivariatenormal method)": [[42, "torchtree.distributions.multivariate_normal.MultivariateNormal.sample", false]], "sample() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.sample", false]], "sample() (torchtree.nf.realnvp.realnvp method)": [[93, "torchtree.nf.realnvp.RealNVP.sample", false]], "sample_momentum() (torchtree.inference.hmc.hamiltonian.hamiltonian method)": [[76, "torchtree.inference.hmc.hamiltonian.Hamiltonian.sample_momentum", false]], "sample_momentum() (torchtree.inference.hmc.hmc.hmc method)": [[77, "torchtree.inference.hmc.hmc.HMC.sample_momentum", false]], "sample_shape (torchtree.core.model.model property)": [[24, "torchtree.core.model.Model.sample_shape", false]], "sample_shape (torchtree.core.parameter.moduleparameter property)": [[25, "torchtree.core.parameter.ModuleParameter.sample_shape", false]], "sample_shape (torchtree.core.parameter.transformedparameter property)": [[25, "torchtree.core.parameter.TransformedParameter.sample_shape", false]], "sample_shape (torchtree.evolution.coalescent.faketreemodel property)": [[53, "torchtree.evolution.coalescent.FakeTreeModel.sample_shape", false]], "sampler (class in torchtree.inference.sampler)": [[87, "torchtree.inference.sampler.Sampler", false]], "samples (torchtree.inference.sampler.sampler attribute)": [[87, "torchtree.inference.sampler.Sampler.samples", false]], "samples (torchtree.ops.welford.welfordvariance attribute)": [[99, "torchtree.ops.welford.WelfordVariance.samples", false]], "samples (torchtree.optim.convergence.variationalconvergence attribute)": [[100, "torchtree.optim.convergence.VariationalConvergence.samples", false]], "samples (torchtree.variational.chi.cubo attribute)": [[106, "torchtree.variational.chi.CUBO.samples", false]], "samples (torchtree.variational.kl.elbo attribute)": [[108, "torchtree.variational.kl.ELBO.samples", false]], "samples (torchtree.variational.kl.klpq attribute)": [[108, "torchtree.variational.kl.KLpq.samples", false]], "samples (torchtree.variational.kl.klpqimportance attribute)": [[108, "torchtree.variational.kl.KLpqImportance.samples", false]], "samples (torchtree.variational.kl.selbo attribute)": [[108, "torchtree.variational.kl.SELBO.samples", false]], "samples (torchtree.variational.renyi.vr attribute)": [[109, "torchtree.variational.renyi.VR.samples", false]], "sampling_times (torchtree.evolution.tree_model.timetreemodel attribute)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.sampling_times", false]], "save_full_state() (torchtree.inference.mcmc.mcmc.mcmc method)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.save_full_state", false]], "save_full_state() (torchtree.optim.optimizer.optimizer method)": [[103, "torchtree.optim.optimizer.Optimizer.save_full_state", false]], "save_parameters() (in module torchtree.core.parameter_utils)": [[27, "torchtree.core.parameter_utils.save_parameters", false]], "scale (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge.scale", false]], "scale (torchtree.distributions.deterministic_normal.deterministicnormal attribute)": [[34, "torchtree.distributions.deterministic_normal.DeterministicNormal.scale", false]], "scalemixturenormal (class in torchtree.distributions.scale_mixture)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal", false]], "scaleroperator (class in torchtree.inference.mcmc.operator)": [[86, "torchtree.inference.mcmc.operator.ScalerOperator", false]], "scheduler (class in torchtree.optim.lr_scheduler)": [[102, "torchtree.optim.lr_scheduler.Scheduler", false]], "scheduler (torchtree.optim.lr_scheduler.scheduler attribute)": [[102, "torchtree.optim.lr_scheduler.Scheduler.scheduler", false]], "scheduler (torchtree.optim.optimizer.optimizer attribute)": [[103, "torchtree.optim.optimizer.Optimizer.scheduler", false]], "score (torchtree.variational.kl.elbo attribute)": [[108, "torchtree.variational.kl.ELBO.score", false]], "selbo (class in torchtree.variational.kl)": [[108, "torchtree.variational.kl.SELBO", false]], "sequence (in module torchtree.evolution.alignment)": [[48, "torchtree.evolution.alignment.Sequence", false]], "sequence_size (torchtree.evolution.alignment.alignment property)": [[48, "torchtree.evolution.alignment.Alignment.sequence_size", false]], "set_adaptable_parameter() (torchtree.inference.hmc.operator.hmcoperator method)": [[80, "torchtree.inference.hmc.operator.HMCOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator method)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.operator.dirichletoperator method)": [[86, "torchtree.inference.mcmc.operator.DirichletOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.operator.scaleroperator method)": [[86, "torchtree.inference.mcmc.operator.ScalerOperator.set_adaptable_parameter", false]], "set_adaptable_parameter() (torchtree.inference.mcmc.operator.slidingwindowoperator method)": [[86, "torchtree.inference.mcmc.operator.SlidingWindowOperator.set_adaptable_parameter", false]], "set_tensor() (in module torchtree.inference.hmc.integrator)": [[79, "torchtree.inference.hmc.integrator.set_tensor", false]], "setup_dates() (in module torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.setup_dates", false]], "setup_indexes() (in module torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.setup_indexes", false]], "shape (torchtree.core.abstractparameter.abstractparameter property)": [[18, "torchtree.core.abstractparameter.AbstractParameter.shape", false]], "shape (torchtree.core.parameter.moduleparameter property)": [[25, "torchtree.core.parameter.ModuleParameter.shape", false]], "shape (torchtree.core.parameter.transformedparameter property)": [[25, "torchtree.core.parameter.TransformedParameter.shape", false]], "shape (torchtree.core.parameter.viewparameter property)": [[25, "torchtree.core.parameter.ViewParameter.shape", false]], "shape (torchtree.distributions.ctmc_scale.ctmcscale attribute)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.shape", false]], "shape (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[47, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.shape", false]], "shape (torchtree.evolution.site_model.weibullsitemodel property)": [[60, "torchtree.evolution.site_model.WeibullSiteModel.shape", false]], "shift (torchtree.evolution.root_transform.rootparameter attribute)": [[59, "torchtree.evolution.root_transform.RootParameter.shift", false]], "sign (torchtree.distributions.transforms.cumsumexptransform attribute)": [[46, "torchtree.distributions.transforms.CumSumExpTransform.sign", false]], "sign (torchtree.distributions.transforms.cumsumsoftplustransform attribute)": [[46, "torchtree.distributions.transforms.CumSumSoftPlusTransform.sign", false]], "sign (torchtree.distributions.transforms.cumsumtransform attribute)": [[46, "torchtree.distributions.transforms.CumSumTransform.sign", false]], "sign (torchtree.distributions.transforms.logtransform attribute)": [[46, "torchtree.distributions.transforms.LogTransform.sign", false]], "sign (torchtree.distributions.transforms.softplustransform attribute)": [[46, "torchtree.distributions.transforms.SoftPlusTransform.sign", false]], "sign (torchtree.distributions.transforms.trilexpdiagonaltransform attribute)": [[46, "torchtree.distributions.transforms.TrilExpDiagonalTransform.sign", false]], "sign (torchtree.evolution.rate_transform.logdifferenceratetransform attribute)": [[58, "torchtree.evolution.rate_transform.LogDifferenceRateTransform.sign", false]], "sign (torchtree.evolution.rate_transform.rescaledratetransform attribute)": [[58, "torchtree.evolution.rate_transform.RescaledRateTransform.sign", false]], "sign (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.sign", false]], "sign (torchtree.evolution.tree_height_transform.generalnodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.sign", false]], "signalhandler (class in torchtree.core.utils)": [[31, "torchtree.core.utils.SignalHandler", false]], "simpleclockmodel (class in torchtree.evolution.branch_model)": [[52, "torchtree.evolution.branch_model.SimpleClockModel", false]], "simplex (torchtree.cli.utils.constraint attribute)": [[17, "torchtree.cli.utils.CONSTRAINT.SIMPLEX", false]], "site_model (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.site_model", false]], "site_pattern (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.site_pattern", false]], "sitemodel (class in torchtree.evolution.site_model)": [[60, "torchtree.evolution.site_model.SiteModel", false]], "sitepattern (class in torchtree.evolution.site_pattern)": [[61, "torchtree.evolution.site_pattern.SitePattern", false]], "size (torchtree.evolution.datatype.abstractdatatype property)": [[54, "torchtree.evolution.datatype.AbstractDataType.size", false]], "size (torchtree.evolution.datatype.datatype property)": [[54, "torchtree.evolution.datatype.DataType.size", false]], "size() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.size", false]], "slab (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge.slab", false]], "slab (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.slab", false]], "slidingwindowoperator (class in torchtree.inference.mcmc.operator)": [[86, "torchtree.inference.mcmc.operator.SlidingWindowOperator", false]], "smooth_max() (in module torchtree.ops.smooth)": [[98, "torchtree.ops.smooth.smooth_max", false]], "smoothed_acceptance_rate() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.smoothed_acceptance_rate", false]], "soft_searchsorted() (in module torchtree.ops.smooth)": [[98, "torchtree.ops.smooth.soft_searchsorted", false]], "soft_sort() (in module torchtree.ops.smooth)": [[98, "torchtree.ops.smooth.soft_sort", false]], "softpiecewiseconstantcoalescentgrid (class in torchtree.evolution.coalescent)": [[53, "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid", false]], "softplustransform (class in torchtree.distributions.transforms)": [[46, "torchtree.distributions.transforms.SoftPlusTransform", false]], "sort_indices() (torchtree.evolution.tree_height_transform.generalnodeheighttransform method)": [[69, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.sort_indices", false]], "split_newick() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.split_newick", false]], "sqrt_mass_matrix (torchtree.inference.hmc.adaptation.warmupadaptation property)": [[75, "torchtree.inference.hmc.adaptation.WarmupAdaptation.sqrt_mass_matrix", false]], "sqrt_pi (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.sqrt_pi", false]], "sqrt_pi_inv (torchtree.evolution.substitution_model.general.empiricalsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel.sqrt_pi_inv", false]], "stanvariationalconvergence (class in torchtree.optim.convergence)": [[100, "torchtree.optim.convergence.StanVariationalConvergence", false]], "stanwindowedadaptation (class in torchtree.inference.hmc.stan_adaptation)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation", false]], "start (torchtree.optim.convergence.variationalconvergence attribute)": [[100, "torchtree.optim.convergence.VariationalConvergence.start", false]], "state_count (torchtree.evolution.datatype.abstractdatatype property)": [[54, "torchtree.evolution.datatype.AbstractDataType.state_count", false]], "state_count (torchtree.evolution.datatype.datatype property)": [[54, "torchtree.evolution.datatype.DataType.state_count", false]], "state_count (torchtree.evolution.substitution_model.general.generaljc69 attribute)": [[65, "torchtree.evolution.substitution_model.general.GeneralJC69.state_count", false]], "state_count (torchtree.evolution.substitution_model.general.generalnonsymmetricsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel.state_count", false]], "state_count (torchtree.evolution.substitution_model.general.generalsymmetricsubstitutionmodel attribute)": [[65, "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel.state_count", false]], "state_dict() (torchtree.inference.hmc.adaptation.adaptor method)": [[75, "torchtree.inference.hmc.adaptation.Adaptor.state_dict", false]], "state_dict() (torchtree.inference.hmc.integrator.integrator method)": [[79, "torchtree.inference.hmc.integrator.Integrator.state_dict", false]], "state_dict() (torchtree.inference.mcmc.mcmc.mcmc method)": [[85, "torchtree.inference.mcmc.mcmc.MCMC.state_dict", false]], "state_dict() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.state_dict", false]], "state_dict() (torchtree.optim.lr_scheduler.scheduler method)": [[102, "torchtree.optim.lr_scheduler.Scheduler.state_dict", false]], "state_dict() (torchtree.optim.optimizer.optimizer method)": [[103, "torchtree.optim.optimizer.Optimizer.state_dict", false]], "states (torchtree.evolution.datatype.abstractdatatype property)": [[54, "torchtree.evolution.datatype.AbstractDataType.states", false]], "states (torchtree.evolution.datatype.datatype property)": [[54, "torchtree.evolution.datatype.DataType.states", false]], "step() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.step", false]], "step() (torchtree.ops.dual_averaging.dualaveraging method)": [[96, "torchtree.ops.dual_averaging.DualAveraging.step", false]], "step() (torchtree.optim.lr_scheduler.scheduler method)": [[102, "torchtree.optim.lr_scheduler.Scheduler.step", false]], "step_size (torchtree.inference.hmc.adaptation.warmupadaptation property)": [[75, "torchtree.inference.hmc.adaptation.WarmupAdaptation.step_size", false]], "step_size (torchtree.inference.hmc.integrator.leapfrogintegrator attribute)": [[79, "torchtree.inference.hmc.integrator.LeapfrogIntegrator.step_size", false]], "step_size_adaptor (torchtree.inference.hmc.stan_adaptation.stanwindowedadaptation attribute)": [[81, "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation.step_size_adaptor", false]], "steps (torchtree.inference.hmc.integrator.leapfrogintegrator attribute)": [[79, "torchtree.inference.hmc.integrator.LeapfrogIntegrator.steps", false]], "stop (torchtree.core.utils.signalhandler attribute)": [[31, "torchtree.core.utils.SignalHandler.stop", false]], "stop_count (torchtree.evolution.datatype.codondatatype attribute)": [[54, "torchtree.evolution.datatype.CodonDataType.stop_count", false]], "str_or_float() (in module torchtree.cli.argparse_utils)": [[4, "torchtree.cli.argparse_utils.str_or_float", false]], "strictclockmodel (class in torchtree.evolution.branch_model)": [[52, "torchtree.evolution.branch_model.StrictClockModel", false]], "string_to_list_index() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.string_to_list_index", false]], "subst_model (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.subst_model", false]], "substitutionmodel (class in torchtree.evolution.substitution_model.abstract)": [[62, "torchtree.evolution.substitution_model.abstract.SubstitutionModel", false]], "sufficient_statistics() (torchtree.evolution.coalescent.piecewiseconstantcoalescent method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescent.sufficient_statistics", false]], "sufficient_statistics() (torchtree.evolution.coalescent.piecewiseconstantcoalescentgrid method)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid.sufficient_statistics", false]], "sum_log_abs_det_jacobians (torchtree.nf.flow.normalizingflow attribute)": [[90, "torchtree.nf.flow.NormalizingFlow.sum_log_abs_det_jacobians", false]], "sum_log_abs_det_jacobians (torchtree.nf.realnvp.realnvp attribute)": [[93, "torchtree.nf.realnvp.RealNVP.sum_log_abs_det_jacobians", false]], "support (torchtree.distributions.inverse_gamma.inversegamma attribute)": [[39, "torchtree.distributions.inverse_gamma.InverseGamma.support", false]], "support (torchtree.distributions.one_on_x.oneonx attribute)": [[44, "torchtree.distributions.one_on_x.OneOnX.support", false]], "support (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.support", false]], "support (torchtree.evolution.coalescent.abstractcoalescentdistribution attribute)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.support", false]], "support (torchtree.evolution.coalescent.constantcoalescentintegrated attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegrated.support", false]], "support (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescent.support", false]], "support (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.support", false]], "support (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.support", false]], "survival (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.survival", false]], "survival (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.survival", false]], "survival (torchtree.evolution.birth_death.birthdeath attribute)": [[51, "torchtree.evolution.birth_death.BirthDeath.survival", false]], "survival (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.survival", false]], "symmetricsubstitutionmodel (class in torchtree.evolution.substitution_model.abstract)": [[62, "torchtree.evolution.substitution_model.abstract.SymmetricSubstitutionModel", false]], "synonymous (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[64, "torchtree.evolution.substitution_model.codon.MG94.synonymous", false]], "t_net (torchtree.nf.realnvp.linearmaskedcoupling attribute)": [[93, "torchtree.nf.realnvp.LinearMaskedCoupling.t_net", false]], "table (torchtree.evolution.datatype.codondatatype attribute)": [[54, "torchtree.evolution.datatype.CodonDataType.table", false]], "tag (torchtree.core.model.model property)": [[24, "torchtree.core.model.Model.tag", false]], "target_acceptance_probability (torchtree.inference.hmc.adaptation.adaptivestepsize attribute)": [[75, "torchtree.inference.hmc.adaptation.AdaptiveStepSize.target_acceptance_probability", false]], "target_acceptance_probability (torchtree.inference.mcmc.operator.mcmcoperator attribute)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.target_acceptance_probability", false]], "taxa (class in torchtree.evolution.taxa)": [[68, "torchtree.evolution.taxa.Taxa", false]], "taxa (torchtree.evolution.alignment.alignment property)": [[48, "torchtree.evolution.alignment.Alignment.taxa", false]], "taxa (torchtree.evolution.attribute_pattern.attributepattern attribute)": [[49, "torchtree.evolution.attribute_pattern.AttributePattern.taxa", false]], "taxa (torchtree.evolution.tree_model.abstracttreemodel property)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel.taxa", false]], "taxa (torchtree.evolution.tree_model.treemodel property)": [[71, "torchtree.evolution.tree_model.TreeModel.taxa", false]], "taxa_count (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.taxa_count", false]], "taxa_count (torchtree.evolution.tree_height_transform.generalnodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.taxa_count", false]], "taxa_count (torchtree.evolution.tree_model.abstracttreemodel attribute)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel.taxa_count", false]], "taxa_count (torchtree.evolution.tree_model.timetreemodel attribute)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.taxa_count", false]], "taxon (class in torchtree.evolution.taxa)": [[68, "torchtree.evolution.taxa.Taxon", false]], "temperature (torchtree.evolution.coalescent.piecewiseconstantcoalescentgridmodel attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel.temperature", false]], "temperature (torchtree.evolution.coalescent.softpiecewiseconstantcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid.temperature", false]], "tensor (torchtree.core.abstractparameter.abstractparameter property)": [[18, "torchtree.core.abstractparameter.AbstractParameter.tensor", false]], "tensor (torchtree.core.parameter.catparameter property)": [[25, "torchtree.core.parameter.CatParameter.tensor", false]], "tensor (torchtree.core.parameter.moduleparameter property)": [[25, "torchtree.core.parameter.ModuleParameter.tensor", false]], "tensor (torchtree.core.parameter.parameter property)": [[25, "torchtree.core.parameter.Parameter.tensor", false]], "tensor (torchtree.core.parameter.transformedparameter property)": [[25, "torchtree.core.parameter.TransformedParameter.tensor", false]], "tensor (torchtree.core.parameter.viewparameter property)": [[25, "torchtree.core.parameter.ViewParameter.tensor", false]], "tensor (torchtree.evolution.root_transform.rootparameter property)": [[59, "torchtree.evolution.root_transform.RootParameter.tensor", false]], "tensor_rand() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.tensor_rand", false]], "tensordecoder (class in torchtree.core.utils)": [[31, "torchtree.core.utils.TensorDecoder", false]], "tensorencoder (class in torchtree.core.utils)": [[31, "torchtree.core.utils.TensorEncoder", false]], "theta (torchtree.evolution.coalescent.abstractcoalescentdistribution attribute)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentDistribution.theta", false]], "theta (torchtree.evolution.coalescent.abstractcoalescentmodel attribute)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentModel.theta", false]], "theta (torchtree.evolution.coalescent.exponentialcoalescent attribute)": [[53, "torchtree.evolution.coalescent.ExponentialCoalescent.theta", false]], "theta (torchtree.evolution.coalescent.piecewiseexponentialcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid.theta", false]], "theta (torchtree.evolution.coalescent.piecewiselinearcoalescentgrid attribute)": [[53, "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid.theta", false]], "threshold (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.threshold", false]], "times (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.times", false]], "times (torchtree.evolution.bdsk.piecewiseconstantbirthdeath attribute)": [[50, "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath.times", false]], "timetreemodel (class in torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.TimeTreeModel", false]], "to() (torchtree.core.abstractparameter.device method)": [[18, "torchtree.core.abstractparameter.Device.to", false]], "to() (torchtree.core.model.model method)": [[24, "torchtree.core.model.Model.to", false]], "to() (torchtree.core.parameter.catparameter method)": [[25, "torchtree.core.parameter.CatParameter.to", false]], "to() (torchtree.core.parameter.moduleparameter method)": [[25, "torchtree.core.parameter.ModuleParameter.to", false]], "to() (torchtree.core.parameter.parameter method)": [[25, "torchtree.core.parameter.Parameter.to", false]], "to() (torchtree.core.parameter.transformedparameter method)": [[25, "torchtree.core.parameter.TransformedParameter.to", false]], "to() (torchtree.core.parameter.viewparameter method)": [[25, "torchtree.core.parameter.ViewParameter.to", false]], "to() (torchtree.distributions.ctmc_scale.ctmcscale method)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.to", false]], "to() (torchtree.evolution.site_model.constantsitemodel method)": [[60, "torchtree.evolution.site_model.ConstantSiteModel.to", false]], "to() (torchtree.evolution.site_model.invariantsitemodel method)": [[60, "torchtree.evolution.site_model.InvariantSiteModel.to", false]], "to() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.to", false]], "to() (torchtree.nf.flow.normalizingflow method)": [[90, "torchtree.nf.flow.NormalizingFlow.to", false]], "to() (torchtree.nn.module.module method)": [[95, "torchtree.nn.module.Module.to", false]], "to_nexus() (in module torchtree.evolution.io)": [[56, "torchtree.evolution.io.to_nexus", false]], "tol_rel_obj (torchtree.optim.convergence.stanvariationalconvergence attribute)": [[100, "torchtree.optim.convergence.StanVariationalConvergence.tol_rel_obj", false]], "torchtree": [[74, "module-torchtree", false]], "torchtree.cli": [[8, "module-torchtree.cli", false]], "torchtree.cli.advi": [[3, "module-torchtree.cli.advi", false]], "torchtree.cli.argparse_utils": [[4, "module-torchtree.cli.argparse_utils", false]], "torchtree.cli.cli": [[5, "module-torchtree.cli.cli", false]], "torchtree.cli.evolution": [[6, "module-torchtree.cli.evolution", false]], "torchtree.cli.hmc": [[7, "module-torchtree.cli.hmc", false]], "torchtree.cli.jacobians": [[9, "module-torchtree.cli.jacobians", false]], "torchtree.cli.loggers": [[10, "module-torchtree.cli.loggers", false]], "torchtree.cli.map": [[11, "module-torchtree.cli.map", false]], "torchtree.cli.mcmc": [[12, "module-torchtree.cli.mcmc", false]], "torchtree.cli.operators": [[13, "module-torchtree.cli.operators", false]], "torchtree.cli.plugin": [[14, "module-torchtree.cli.plugin", false]], "torchtree.cli.plugin_manager": [[15, "module-torchtree.cli.plugin_manager", false]], "torchtree.cli.priors": [[16, "module-torchtree.cli.priors", false]], "torchtree.cli.utils": [[17, "module-torchtree.cli.utils", false]], "torchtree.core": [[22, "module-torchtree.core", false]], "torchtree.core.abstractparameter": [[18, "module-torchtree.core.abstractparameter", false]], "torchtree.core.classproperty_decorator": [[19, "module-torchtree.core.classproperty_decorator", false]], "torchtree.core.container": [[20, "module-torchtree.core.container", false]], "torchtree.core.identifiable": [[21, "module-torchtree.core.identifiable", false]], "torchtree.core.logger": [[23, "module-torchtree.core.logger", false]], "torchtree.core.model": [[24, "module-torchtree.core.model", false]], "torchtree.core.parameter": [[25, "module-torchtree.core.parameter", false]], "torchtree.core.parameter_encoder": [[26, "module-torchtree.core.parameter_encoder", false]], "torchtree.core.parameter_utils": [[27, "module-torchtree.core.parameter_utils", false]], "torchtree.core.parametric": [[28, "module-torchtree.core.parametric", false]], "torchtree.core.runnable": [[29, "module-torchtree.core.runnable", false]], "torchtree.core.serializable": [[30, "module-torchtree.core.serializable", false]], "torchtree.core.utils": [[31, "module-torchtree.core.utils", false]], "torchtree.distributions": [[38, "module-torchtree.distributions", false]], "torchtree.distributions.bayesian_bridge": [[32, "module-torchtree.distributions.bayesian_bridge", false]], "torchtree.distributions.ctmc_scale": [[33, "module-torchtree.distributions.ctmc_scale", false]], "torchtree.distributions.deterministic_normal": [[34, "module-torchtree.distributions.deterministic_normal", false]], "torchtree.distributions.distributions": [[35, "module-torchtree.distributions.distributions", false]], "torchtree.distributions.gmrf": [[36, "module-torchtree.distributions.gmrf", false]], "torchtree.distributions.gmrf_integrated": [[37, "module-torchtree.distributions.gmrf_integrated", false]], "torchtree.distributions.inverse_gamma": [[39, "module-torchtree.distributions.inverse_gamma", false]], "torchtree.distributions.joint_distribution": [[40, "module-torchtree.distributions.joint_distribution", false]], "torchtree.distributions.log_normal": [[41, "module-torchtree.distributions.log_normal", false]], "torchtree.distributions.multivariate_normal": [[42, "module-torchtree.distributions.multivariate_normal", false]], "torchtree.distributions.normal": [[43, "module-torchtree.distributions.normal", false]], "torchtree.distributions.one_on_x": [[44, "module-torchtree.distributions.one_on_x", false]], "torchtree.distributions.scale_mixture": [[45, "module-torchtree.distributions.scale_mixture", false]], "torchtree.distributions.transforms": [[46, "module-torchtree.distributions.transforms", false]], "torchtree.distributions.tree_prior": [[47, "module-torchtree.distributions.tree_prior", false]], "torchtree.evolution": [[55, "module-torchtree.evolution", false]], "torchtree.evolution.alignment": [[48, "module-torchtree.evolution.alignment", false]], "torchtree.evolution.attribute_pattern": [[49, "module-torchtree.evolution.attribute_pattern", false]], "torchtree.evolution.bdsk": [[50, "module-torchtree.evolution.bdsk", false]], "torchtree.evolution.birth_death": [[51, "module-torchtree.evolution.birth_death", false]], "torchtree.evolution.branch_model": [[52, "module-torchtree.evolution.branch_model", false]], "torchtree.evolution.coalescent": [[53, "module-torchtree.evolution.coalescent", false]], "torchtree.evolution.datatype": [[54, "module-torchtree.evolution.datatype", false]], "torchtree.evolution.io": [[56, "module-torchtree.evolution.io", false]], "torchtree.evolution.poisson_tree_likelihood": [[57, "module-torchtree.evolution.poisson_tree_likelihood", false]], "torchtree.evolution.rate_transform": [[58, "module-torchtree.evolution.rate_transform", false]], "torchtree.evolution.root_transform": [[59, "module-torchtree.evolution.root_transform", false]], "torchtree.evolution.site_model": [[60, "module-torchtree.evolution.site_model", false]], "torchtree.evolution.site_pattern": [[61, "module-torchtree.evolution.site_pattern", false]], "torchtree.evolution.substitution_model": [[66, "module-torchtree.evolution.substitution_model", false]], "torchtree.evolution.substitution_model.abstract": [[62, "module-torchtree.evolution.substitution_model.abstract", false]], "torchtree.evolution.substitution_model.amino_acid": [[63, "module-torchtree.evolution.substitution_model.amino_acid", false]], "torchtree.evolution.substitution_model.codon": [[64, "module-torchtree.evolution.substitution_model.codon", false]], "torchtree.evolution.substitution_model.general": [[65, "module-torchtree.evolution.substitution_model.general", false]], "torchtree.evolution.substitution_model.nucleotide": [[67, "module-torchtree.evolution.substitution_model.nucleotide", false]], "torchtree.evolution.taxa": [[68, "module-torchtree.evolution.taxa", false]], "torchtree.evolution.tree_height_transform": [[69, "module-torchtree.evolution.tree_height_transform", false]], "torchtree.evolution.tree_likelihood": [[70, "module-torchtree.evolution.tree_likelihood", false]], "torchtree.evolution.tree_model": [[71, "module-torchtree.evolution.tree_model", false]], "torchtree.evolution.tree_model_flexible": [[72, "module-torchtree.evolution.tree_model_flexible", false]], "torchtree.evolution.tree_regression": [[73, "module-torchtree.evolution.tree_regression", false]], "torchtree.inference": [[82, "module-torchtree.inference", false]], "torchtree.inference.hmc": [[78, "module-torchtree.inference.hmc", false]], "torchtree.inference.hmc.adaptation": [[75, "module-torchtree.inference.hmc.adaptation", false]], "torchtree.inference.hmc.hamiltonian": [[76, "module-torchtree.inference.hmc.hamiltonian", false]], "torchtree.inference.hmc.hmc": [[77, "module-torchtree.inference.hmc.hmc", false]], "torchtree.inference.hmc.integrator": [[79, "module-torchtree.inference.hmc.integrator", false]], "torchtree.inference.hmc.operator": [[80, "module-torchtree.inference.hmc.operator", false]], "torchtree.inference.hmc.stan_adaptation": [[81, "module-torchtree.inference.hmc.stan_adaptation", false]], "torchtree.inference.mcmc": [[84, "module-torchtree.inference.mcmc", false]], "torchtree.inference.mcmc.gmrf_block_updating": [[83, "module-torchtree.inference.mcmc.gmrf_block_updating", false]], "torchtree.inference.mcmc.mcmc": [[85, "module-torchtree.inference.mcmc.mcmc", false]], "torchtree.inference.mcmc.operator": [[86, "module-torchtree.inference.mcmc.operator", false]], "torchtree.inference.sampler": [[87, "module-torchtree.inference.sampler", false]], "torchtree.inference.utils": [[88, "module-torchtree.inference.utils", false]], "torchtree.nf": [[91, "module-torchtree.nf", false]], "torchtree.nf.energy_functions": [[89, "module-torchtree.nf.energy_functions", false]], "torchtree.nf.flow": [[90, "module-torchtree.nf.flow", false]], "torchtree.nf.planar": [[92, "module-torchtree.nf.planar", false]], "torchtree.nf.realnvp": [[93, "module-torchtree.nf.realnvp", false]], "torchtree.nn": [[94, "module-torchtree.nn", false]], "torchtree.nn.module": [[95, "module-torchtree.nn.module", false]], "torchtree.ops": [[97, "module-torchtree.ops", false]], "torchtree.ops.dual_averaging": [[96, "module-torchtree.ops.dual_averaging", false]], "torchtree.ops.smooth": [[98, "module-torchtree.ops.smooth", false]], "torchtree.ops.welford": [[99, "module-torchtree.ops.welford", false]], "torchtree.optim": [[101, "module-torchtree.optim", false]], "torchtree.optim.convergence": [[100, "module-torchtree.optim.convergence", false]], "torchtree.optim.lr_scheduler": [[102, "module-torchtree.optim.lr_scheduler", false]], "torchtree.optim.optimizer": [[103, "module-torchtree.optim.optimizer", false]], "torchtree.torchtree": [[104, "module-torchtree.torchtree", false]], "torchtree.typing": [[105, "module-torchtree.typing", false]], "torchtree.variational": [[107, "module-torchtree.variational", false]], "torchtree.variational.chi": [[106, "module-torchtree.variational.chi", false]], "torchtree.variational.kl": [[108, "module-torchtree.variational.kl", false]], "torchtree.variational.renyi": [[109, "module-torchtree.variational.renyi", false]], "transform (torchtree.core.parameter.transformedparameter attribute)": [[25, "torchtree.core.parameter.TransformedParameter.transform", false]], "transform() (torchtree.evolution.root_transform.rootparameter method)": [[59, "torchtree.evolution.root_transform.RootParameter.transform", false]], "transformedparameter (class in torchtree.core.parameter)": [[25, "torchtree.core.parameter.TransformedParameter", false]], "transitions (torchtree.evolution.substitution_model.codon.mg94 attribute)": [[64, "torchtree.evolution.substitution_model.codon.MG94.transitions", false]], "tree (torchtree.evolution.branch_model.abstractclockmodel attribute)": [[52, "torchtree.evolution.branch_model.AbstractClockModel.tree", false]], "tree (torchtree.evolution.tree_height_transform.differencenodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform.tree", false]], "tree (torchtree.evolution.tree_height_transform.generalnodeheighttransform attribute)": [[69, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.tree", false]], "tree (torchtree.evolution.tree_model.abstracttreemodel attribute)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel.tree", false]], "tree_model (torchtree.core.logger.treelogger attribute)": [[23, "torchtree.core.logger.TreeLogger.tree_model", false]], "tree_model (torchtree.distributions.ctmc_scale.ctmcscale attribute)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.tree_model", false]], "tree_model (torchtree.distributions.gmrf.gmrf attribute)": [[36, "torchtree.distributions.gmrf.GMRF.tree_model", false]], "tree_model (torchtree.distributions.gmrf_integrated.gmrfgammaintegrated attribute)": [[37, "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated.tree_model", false]], "tree_model (torchtree.distributions.tree_prior.compoundgammadirichletprior attribute)": [[47, "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior.tree_model", false]], "tree_model (torchtree.evolution.bdsk.bdskmodel attribute)": [[50, "torchtree.evolution.bdsk.BDSKModel.tree_model", false]], "tree_model (torchtree.evolution.birth_death.birthdeathmodel attribute)": [[51, "torchtree.evolution.birth_death.BirthDeathModel.tree_model", false]], "tree_model (torchtree.evolution.coalescent.abstractcoalescentmodel attribute)": [[53, "torchtree.evolution.coalescent.AbstractCoalescentModel.tree_model", false]], "tree_model (torchtree.evolution.coalescent.constantcoalescentintegratedmodel attribute)": [[53, "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel.tree_model", false]], "tree_model (torchtree.evolution.poisson_tree_likelihood.poissontreelikelihood attribute)": [[57, "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood.tree_model", false]], "tree_model (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.tree_model", false]], "treelikelihoodmodel (class in torchtree.evolution.tree_likelihood)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel", false]], "treelogger (class in torchtree.core.logger)": [[23, "torchtree.core.logger.TreeLogger", false]], "treemodel (class in torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.TreeModel", false]], "trilexpdiagonaltransform (class in torchtree.distributions.transforms)": [[46, "torchtree.distributions.transforms.TrilExpDiagonalTransform", false]], "triplets (torchtree.evolution.datatype.codondatatype attribute)": [[54, "torchtree.evolution.datatype.CodonDataType.triplets", false]], "tune() (torchtree.inference.hmc.operator.hmcoperator method)": [[80, "torchtree.inference.hmc.operator.HMCOperator.tune", false]], "tune() (torchtree.inference.mcmc.operator.mcmcoperator method)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.tune", false]], "tuning_parameter (torchtree.inference.hmc.operator.hmcoperator property)": [[80, "torchtree.inference.hmc.operator.HMCOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.gmrf_block_updating.gmrfpiecewisecoalescentblockupdatingoperator property)": [[83, "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.operator.dirichletoperator property)": [[86, "torchtree.inference.mcmc.operator.DirichletOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.operator.mcmcoperator property)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.operator.scaleroperator property)": [[86, "torchtree.inference.mcmc.operator.ScalerOperator.tuning_parameter", false]], "tuning_parameter (torchtree.inference.mcmc.operator.slidingwindowoperator property)": [[86, "torchtree.inference.mcmc.operator.SlidingWindowOperator.tuning_parameter", false]], "u (torchtree.nf.planar.planartransform attribute)": [[92, "torchtree.nf.planar.PlanarTransform.u", false]], "u_hat() (torchtree.nf.planar.planartransform method)": [[92, "torchtree.nf.planar.PlanarTransform.u_hat", false]], "univariatediscretizedsitemodel (class in torchtree.evolution.site_model)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel", false]], "unrootedtreemodel (class in torchtree.evolution.tree_model)": [[71, "torchtree.evolution.tree_model.UnRootedTreeModel", false]], "update() (torchtree.core.parameter.catparameter method)": [[25, "torchtree.core.parameter.CatParameter.update", false]], "update_bounds() (torchtree.evolution.tree_height_transform.generalnodeheighttransform method)": [[69, "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform.update_bounds", false]], "update_leaf_heights() (torchtree.evolution.tree_model.timetreemodel method)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.update_leaf_heights", false]], "update_mass_matrices() (torchtree.inference.hmc.operator.hmcoperator method)": [[80, "torchtree.inference.hmc.operator.HMCOperator.update_mass_matrices", false]], "update_node_heights() (torchtree.evolution.tree_model.reparameterizedtimetreemodel method)": [[71, "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel.update_node_heights", false]], "update_parameters() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.update_parameters", false]], "update_rates() (torchtree.evolution.site_model.univariatediscretizedsitemodel method)": [[60, "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel.update_rates", false]], "update_rates_probs() (torchtree.evolution.site_model.invariantsitemodel method)": [[60, "torchtree.evolution.site_model.InvariantSiteModel.update_rates_probs", false]], "update_traversals() (torchtree.evolution.tree_model.abstracttreemodel method)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel.update_traversals", false]], "update_traversals() (torchtree.evolution.tree_model.timetreemodel method)": [[71, "torchtree.evolution.tree_model.TimeTreeModel.update_traversals", false]], "upper (torchtree.cli.utils.constraint attribute)": [[17, "torchtree.cli.utils.CONSTRAINT.UPPER", false]], "use_tip_states (torchtree.evolution.tree_likelihood.treelikelihoodmodel attribute)": [[70, "torchtree.evolution.tree_likelihood.TreeLikelihoodModel.use_tip_states", false]], "validate() (in module torchtree.core.utils)": [[31, "torchtree.core.utils.validate", false]], "variance() (torchtree.ops.welford.welfordvariance method)": [[99, "torchtree.ops.welford.WelfordVariance.variance", false]], "variance_estimator (torchtree.inference.hmc.adaptation.massmatrixadaptor attribute)": [[75, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.variance_estimator", false]], "variance_estimator2 (torchtree.inference.hmc.adaptation.massmatrixadaptor attribute)": [[75, "torchtree.inference.hmc.adaptation.MassMatrixAdaptor.variance_estimator2", false]], "variationalconvergence (class in torchtree.optim.convergence)": [[100, "torchtree.optim.convergence.VariationalConvergence", false]], "viewparameter (class in torchtree.core.parameter)": [[25, "torchtree.core.parameter.ViewParameter", false]], "vr (class in torchtree.variational.renyi)": [[109, "torchtree.variational.renyi.VR", false]], "w (torchtree.nf.planar.planartransform attribute)": [[92, "torchtree.nf.planar.PlanarTransform.w", false]], "w1() (in module torchtree.nf.energy_functions)": [[89, "torchtree.nf.energy_functions.w1", false]], "w2() (in module torchtree.nf.energy_functions)": [[89, "torchtree.nf.energy_functions.w2", false]], "w3() (in module torchtree.nf.energy_functions)": [[89, "torchtree.nf.energy_functions.w3", false]], "wag (class in torchtree.evolution.substitution_model.amino_acid)": [[63, "torchtree.evolution.substitution_model.amino_acid.WAG", false]], "warmup_adaptor (torchtree.inference.hmc.hmc.hmc attribute)": [[77, "torchtree.inference.hmc.hmc.HMC.warmup_adaptor", false]], "warmupadaptation (class in torchtree.inference.hmc.adaptation)": [[75, "torchtree.inference.hmc.adaptation.WarmupAdaptation", false]], "weibullsitemodel (class in torchtree.evolution.site_model)": [[60, "torchtree.evolution.site_model.WeibullSiteModel", false]], "weight (torchtree.distributions.transforms.lineartransform attribute)": [[46, "torchtree.distributions.transforms.LinearTransform.weight", false]], "weight (torchtree.inference.mcmc.operator.mcmcoperator attribute)": [[86, "torchtree.inference.mcmc.operator.MCMCOperator.weight", false]], "weights (torchtree.distributions.gmrf.gmrf attribute)": [[36, "torchtree.distributions.gmrf.GMRF.weights", false]], "weights (torchtree.variational.kl.selbo attribute)": [[108, "torchtree.variational.kl.SELBO.weights", false]], "welfordvariance (class in torchtree.ops.welford)": [[99, "torchtree.ops.welford.WelfordVariance", false]], "wrapper() (torchtree.core.utils.alternativeattributeerror class method)": [[31, "torchtree.core.utils.AlternativeAttributeError.wrapper", false]], "write_newick() (torchtree.evolution.tree_model.abstracttreemodel method)": [[71, "torchtree.evolution.tree_model.AbstractTreeModel.write_newick", false]], "write_newick() (torchtree.evolution.tree_model.treemodel method)": [[71, "torchtree.evolution.tree_model.TreeModel.write_newick", false]], "writer (torchtree.core.logger.logger attribute)": [[23, "torchtree.core.logger.Logger.writer", false]], "x (torchtree.distributions.bayesian_bridge.bayesianbridge attribute)": [[32, "torchtree.distributions.bayesian_bridge.BayesianBridge.x", false]], "x (torchtree.distributions.ctmc_scale.ctmcscale attribute)": [[33, "torchtree.distributions.ctmc_scale.CTMCScale.x", false]], "x (torchtree.distributions.scale_mixture.scalemixturenormal attribute)": [[45, "torchtree.distributions.scale_mixture.ScaleMixtureNormal.x", false]], "x (torchtree.nf.energy_functions.energyfunctionmodel attribute)": [[89, "torchtree.nf.energy_functions.EnergyFunctionModel.x", false]], "x (torchtree.nf.flow.normalizingflow attribute)": [[90, "torchtree.nf.flow.NormalizingFlow.x", false]], "x (torchtree.nf.realnvp.realnvp attribute)": [[93, "torchtree.nf.realnvp.RealNVP.x", false]], "x (torchtree.nn.module.module attribute)": [[95, "torchtree.nn.module.Module.x", false]], "x (torchtree.ops.dual_averaging.dualaveraging attribute)": [[96, "torchtree.ops.dual_averaging.DualAveraging.x", false]], "zero_or_path() (in module torchtree.cli.argparse_utils)": [[4, "torchtree.cli.argparse_utils.zero_or_path", false]]}, "objects": {"": [[74, 0, 0, "-", "torchtree"]], "torchtree": [[8, 0, 0, "-", "cli"], [22, 0, 0, "-", "core"], [38, 0, 0, "-", "distributions"], [55, 0, 0, "-", "evolution"], [82, 0, 0, "-", "inference"], [91, 0, 0, "-", "nf"], [94, 0, 0, "-", "nn"], [97, 0, 0, "-", "ops"], [101, 0, 0, "-", "optim"], [104, 0, 0, "-", "torchtree"], [105, 0, 0, "-", "typing"], [107, 0, 0, "-", "variational"]], "torchtree.cli": [[8, 1, 1, "", "PLUGIN_MANAGER"], [3, 0, 0, "-", "advi"], [4, 0, 0, "-", "argparse_utils"], [5, 0, 0, "-", "cli"], [6, 0, 0, "-", "evolution"], [7, 0, 0, "-", "hmc"], [9, 0, 0, "-", "jacobians"], [10, 0, 0, "-", "loggers"], [11, 0, 0, "-", "map"], [12, 0, 0, "-", "mcmc"], [13, 0, 0, "-", "operators"], [14, 0, 0, "-", "plugin"], [15, 0, 0, "-", "plugin_manager"], [16, 0, 0, "-", "priors"], [17, 0, 0, "-", "utils"]], "torchtree.cli.advi": [[3, 2, 1, "", "apply_affine_transform"], [3, 2, 1, "", "apply_exp_transform"], [3, 2, 1, "", "apply_sigmoid_transformed"], [3, 2, 1, "", "apply_simplex_transform"], [3, 2, 1, "", "apply_transforms_for_fullrank"], [3, 2, 1, "", "build_advi"], [3, 2, 1, "", "create_advi"], [3, 2, 1, "", "create_flexible_variational"], [3, 2, 1, "", "create_fullrank"], [3, 2, 1, "", "create_fullrank_from_meanfield"], [3, 2, 1, "", "create_gamma_distribution"], [3, 2, 1, "", "create_logger"], [3, 2, 1, "", "create_meanfield"], [3, 2, 1, "", "create_normal_distribution"], [3, 2, 1, "", "create_realnp_distribution"], [3, 2, 1, "", "create_realnvp"], [3, 2, 1, "", "create_sampler"], [3, 2, 1, "", "create_tril"], [3, 2, 1, "", "create_variational_model"], [3, 2, 1, "", "create_variational_parser"], [3, 2, 1, "", "create_weibull_distribution"], [3, 2, 1, "", "gather_parameters"], [3, 1, 1, "", "logger"]], "torchtree.cli.argparse_utils": [[4, 2, 1, "", "list_of_float"], [4, 2, 1, "", "list_or_int"], [4, 2, 1, "", "str_or_float"], [4, 2, 1, "", "zero_or_path"]], "torchtree.cli.cli": [[5, 2, 1, "", "create_show_parser"], [5, 2, 1, "", "main"]], "torchtree.cli.evolution": [[6, 1, 1, "", "COALESCENT_PIECEWISE"], [6, 2, 1, "", "add_birth_death"], [6, 2, 1, "", "add_coalescent"], [6, 2, 1, "", "build_alignment"], [6, 2, 1, "", "check_arguments"], [6, 2, 1, "", "create_alignment"], [6, 2, 1, "", "create_bd_prior"], [6, 2, 1, "", "create_bdsk"], [6, 2, 1, "", "create_bdsk_prior"], [6, 2, 1, "", "create_birth_death"], [6, 2, 1, "", "create_branch_model"], [6, 2, 1, "", "create_clock_prior"], [6, 2, 1, "", "create_coalesent"], [6, 2, 1, "", "create_constant_bd_prior"], [6, 2, 1, "", "create_constant_birth_death"], [6, 2, 1, "", "create_data_type"], [6, 2, 1, "", "create_evolution_joint"], [6, 2, 1, "", "create_evolution_parser"], [6, 2, 1, "", "create_evolution_priors"], [6, 2, 1, "", "create_general_data_type"], [6, 2, 1, "", "create_poisson_evolution_joint"], [6, 2, 1, "", "create_poisson_tree_likelihood"], [6, 2, 1, "", "create_site_model"], [6, 2, 1, "", "create_site_model_srd06_mus"], [6, 2, 1, "", "create_site_pattern"], [6, 2, 1, "", "create_substitution_model"], [6, 2, 1, "", "create_substitution_model_priors"], [6, 2, 1, "", "create_taxa"], [6, 2, 1, "", "create_time_tree_prior"], [6, 2, 1, "", "create_tree_likelihood"], [6, 2, 1, "", "create_tree_likelihood_general"], [6, 2, 1, "", "create_tree_likelihood_single"], [6, 2, 1, "", "create_tree_model"], [6, 2, 1, "", "create_ucln_prior"], [6, 2, 1, "", "distribution_type"], [6, 2, 1, "", "get_engine"], [6, 2, 1, "", "is_float"], [6, 1, 1, "", "logger"], [6, 2, 1, "", "parse_distribution"], [6, 2, 1, "", "run_tree_regression"]], "torchtree.cli.hmc": [[7, 2, 1, "", "build_hmc"], [7, 2, 1, "", "create_hmc"], [7, 2, 1, "", "create_hmc_operator"], [7, 2, 1, "", "create_hmc_parser"], [7, 2, 1, "", "create_stan_windowed_adaptation"]], "torchtree.cli.jacobians": [[9, 2, 1, "", "create_jacobians"]], "torchtree.cli.loggers": [[10, 2, 1, "", "create_loggers"]], "torchtree.cli.map": [[11, 2, 1, "", "build_optimizer"], [11, 2, 1, "", "create_logger"], [11, 2, 1, "", "create_map_parser"], [11, 2, 1, "", "create_optimizer"], [11, 2, 1, "", "create_tree_logger"]], "torchtree.cli.mcmc": [[12, 2, 1, "", "build_mcmc"], [12, 2, 1, "", "create_mcmc"], [12, 2, 1, "", "create_mcmc_parser"]], "torchtree.cli.operators": [[13, 2, 1, "", "create_block_updating_operator"], [13, 2, 1, "", "create_scaler_operator"], [13, 2, 1, "", "create_sliding_window_operator"]], "torchtree.cli.plugin": [[14, 3, 1, "", "Plugin"]], "torchtree.cli.plugin.Plugin": [[14, 4, 1, "", "load_arguments"], [14, 4, 1, "", "process_all"], [14, 4, 1, "", "process_coalescent"], [14, 4, 1, "", "process_tree_likelihood"]], "torchtree.cli.plugin_manager": [[15, 3, 1, "", "PluginManager"]], "torchtree.cli.plugin_manager.PluginManager": [[15, 4, 1, "", "disable_plugins"], [15, 4, 1, "", "load_arguments"], [15, 4, 1, "", "load_plugins"], [15, 4, 1, "", "plugins"]], "torchtree.cli.priors": [[16, 2, 1, "", "create_clock_horseshoe_prior"], [16, 2, 1, "", "create_one_on_x_prior"]], "torchtree.cli.utils": [[17, 3, 1, "", "CONSTRAINT"], [17, 1, 1, "", "CONSTRAINT_PREFIX"], [17, 2, 1, "", "convert_date_to_real"], [17, 2, 1, "", "length_of_tensor_in_dict_parameter"], [17, 2, 1, "", "make_unconstrained"], [17, 2, 1, "", "read_dates_from_csv"], [17, 2, 1, "", "remove_constraints"]], "torchtree.cli.utils.CONSTRAINT": [[17, 5, 1, "", "LOWER"], [17, 5, 1, "", "SIMPLEX"], [17, 5, 1, "", "UPPER"]], "torchtree.core": [[18, 0, 0, "-", "abstractparameter"], [19, 0, 0, "-", "classproperty_decorator"], [20, 0, 0, "-", "container"], [21, 0, 0, "-", "identifiable"], [23, 0, 0, "-", "logger"], [24, 0, 0, "-", "model"], [25, 0, 0, "-", "parameter"], [26, 0, 0, "-", "parameter_encoder"], [27, 0, 0, "-", "parameter_utils"], [28, 0, 0, "-", "parametric"], [29, 0, 0, "-", "runnable"], [30, 0, 0, "-", "serializable"], [31, 0, 0, "-", "utils"]], "torchtree.core.abstractparameter": [[18, 3, 1, "", "AbstractParameter"], [18, 3, 1, "", "Device"]], "torchtree.core.abstractparameter.AbstractParameter": [[18, 4, 1, "", "add_parameter_listener"], [18, 6, 1, "", "device"], [18, 4, 1, "", "dim"], [18, 6, 1, "", "dtype"], [18, 4, 1, "", "fire_parameter_changed"], [18, 4, 1, "", "parameters"], [18, 6, 1, "", "requires_grad"], [18, 6, 1, "", "shape"], [18, 6, 1, "", "tensor"]], "torchtree.core.abstractparameter.Device": [[18, 4, 1, "", "cpu"], [18, 4, 1, "", "cuda"], [18, 6, 1, "", "device"], [18, 4, 1, "", "to"]], "torchtree.core.classproperty_decorator": [[19, 3, 1, "", "classproperty"]], "torchtree.core.container": [[20, 3, 1, "", "Container"]], "torchtree.core.container.Container": [[20, 4, 1, "", "callables"], [20, 4, 1, "", "from_json"], [20, 4, 1, "", "handle_model_changed"], [20, 4, 1, "", "handle_parameter_changed"], [20, 4, 1, "", "params"]], "torchtree.core.identifiable": [[21, 3, 1, "", "Identifiable"]], "torchtree.core.identifiable.Identifiable": [[21, 6, 1, "", "id"]], "torchtree.core.logger": [[23, 3, 1, "", "CSV"], [23, 3, 1, "", "ContainerLogger"], [23, 3, 1, "", "Dumper"], [23, 3, 1, "", "Logger"], [23, 3, 1, "", "LoggerInterface"], [23, 3, 1, "", "TreeLogger"]], "torchtree.core.logger.CSV": [[23, 5, 1, "", "file_name"], [23, 4, 1, "", "from_json"], [23, 5, 1, "", "kwargs"], [23, 5, 1, "", "objs"], [23, 4, 1, "", "run"]], "torchtree.core.logger.ContainerLogger": [[23, 4, 1, "", "close"], [23, 5, 1, "", "container"], [23, 5, 1, "", "every"], [23, 4, 1, "", "from_json"], [23, 4, 1, "", "initialize"], [23, 5, 1, "", "inputs"], [23, 4, 1, "", "log"], [23, 5, 1, "", "sample"]], "torchtree.core.logger.Dumper": [[23, 4, 1, "", "from_json"], [23, 5, 1, "", "kwargs"], [23, 5, 1, "", "parameters"], [23, 4, 1, "", "run"]], "torchtree.core.logger.Logger": [[23, 4, 1, "", "close"], [23, 5, 1, "", "every"], [23, 5, 1, "", "f"], [23, 4, 1, "", "from_json"], [23, 4, 1, "", "initialize"], [23, 5, 1, "", "kwargs"], [23, 4, 1, "", "log"], [23, 5, 1, "", "objs"], [23, 5, 1, "", "sample"], [23, 5, 1, "", "writer"]], "torchtree.core.logger.LoggerInterface": [[23, 4, 1, "", "close"], [23, 4, 1, "", "initialize"], [23, 4, 1, "", "log"], [23, 4, 1, "", "run"]], "torchtree.core.logger.TreeLogger": [[23, 4, 1, "", "close"], [23, 5, 1, "", "every"], [23, 5, 1, "", "f"], [23, 5, 1, "", "file_name"], [23, 4, 1, "", "from_json"], [23, 4, 1, "", "initialize"], [23, 5, 1, "", "kwargs"], [23, 4, 1, "", "log"], [23, 5, 1, "", "sample"], [23, 5, 1, "", "tree_model"]], "torchtree.core.model": [[24, 3, 1, "", "CallableModel"], [24, 3, 1, "", "Model"]], "torchtree.core.model.CallableModel": [[24, 4, 1, "", "handle_model_changed"], [24, 4, 1, "", "handle_parameter_changed"], [24, 5, 1, "", "lp"], [24, 5, 1, "", "lp_needs_update"]], "torchtree.core.model.Model": [[24, 4, 1, "", "add_model_listener"], [24, 4, 1, "", "add_parameter_listener"], [24, 4, 1, "", "cpu"], [24, 4, 1, "", "cuda"], [24, 4, 1, "", "fire_model_changed"], [24, 5, 1, "", "listeners"], [24, 4, 1, "", "models"], [24, 4, 1, "", "remove_model_listener"], [24, 4, 1, "", "remove_parameter_listener"], [24, 6, 1, "", "sample_shape"], [24, 6, 1, "", "tag"], [24, 4, 1, "", "to"]], "torchtree.core.parameter": [[25, 3, 1, "", "CatParameter"], [25, 3, 1, "", "ModuleParameter"], [25, 3, 1, "", "Parameter"], [25, 3, 1, "", "TransformedParameter"], [25, 3, 1, "", "ViewParameter"]], "torchtree.core.parameter.CatParameter": [[25, 4, 1, "", "add_parameter_listener"], [25, 4, 1, "", "cpu"], [25, 4, 1, "", "cuda"], [25, 6, 1, "", "device"], [25, 4, 1, "", "fire_parameter_changed"], [25, 4, 1, "", "from_json"], [25, 4, 1, "", "handle_model_changed"], [25, 4, 1, "", "handle_parameter_changed"], [25, 6, 1, "", "requires_grad"], [25, 6, 1, "", "tensor"], [25, 4, 1, "", "to"], [25, 4, 1, "", "update"]], "torchtree.core.parameter.ModuleParameter": [[25, 4, 1, "", "add_parameter_listener"], [25, 4, 1, "", "cpu"], [25, 4, 1, "", "cuda"], [25, 4, 1, "", "fire_parameter_changed"], [25, 4, 1, "", "from_json"], [25, 4, 1, "", "handle_model_changed"], [25, 4, 1, "", "handle_parameter_changed"], [25, 5, 1, "", "listeners"], [25, 5, 1, "", "module"], [25, 5, 1, "", "need_update"], [25, 4, 1, "", "parameters"], [25, 6, 1, "", "requires_grad"], [25, 6, 1, "", "sample_shape"], [25, 6, 1, "", "shape"], [25, 6, 1, "", "tensor"], [25, 4, 1, "", "to"]], "torchtree.core.parameter.Parameter": [[25, 4, 1, "", "add_parameter_listener"], [25, 4, 1, "", "clone"], [25, 4, 1, "", "copy_"], [25, 4, 1, "", "cpu"], [25, 4, 1, "", "cuda"], [25, 4, 1, "", "detach"], [25, 4, 1, "", "fire_parameter_changed"], [25, 4, 1, "", "from_json"], [25, 6, 1, "", "grad"], [25, 6, 1, "", "grad_fn"], [25, 4, 1, "", "json_factory"], [25, 5, 1, "", "listeners"], [25, 6, 1, "", "requires_grad"], [25, 4, 1, "", "size"], [25, 6, 1, "", "tensor"], [25, 2, 1, "id6", "to"]], "torchtree.core.parameter.TransformedParameter": [[25, 4, 1, "", "add_parameter_listener"], [25, 4, 1, "", "cpu"], [25, 4, 1, "", "cuda"], [25, 4, 1, "", "fire_parameter_changed"], [25, 4, 1, "", "from_json"], [25, 4, 1, "", "handle_model_changed"], [25, 4, 1, "", "handle_parameter_changed"], [25, 5, 1, "", "listeners"], [25, 5, 1, "", "need_update"], [25, 4, 1, "", "parameters"], [25, 6, 1, "", "requires_grad"], [25, 6, 1, "", "sample_shape"], [25, 6, 1, "", "shape"], [25, 6, 1, "", "tensor"], [25, 4, 1, "", "to"], [25, 5, 1, "", "transform"]], "torchtree.core.parameter.ViewParameter": [[25, 4, 1, "", "add_parameter_listener"], [25, 4, 1, "", "assign"], [25, 4, 1, "", "clone"], [25, 4, 1, "", "cpu"], [25, 4, 1, "", "cuda"], [25, 6, 1, "", "dtype"], [25, 4, 1, "", "fire_parameter_changed"], [25, 4, 1, "", "from_json"], [25, 4, 1, "", "handle_parameter_changed"], [25, 5, 1, "", "indices"], [25, 4, 1, "", "json_factory"], [25, 5, 1, "", "listeners"], [25, 5, 1, "", "parameter"], [25, 6, 1, "", "requires_grad"], [25, 6, 1, "", "shape"], [25, 6, 1, "", "tensor"], [25, 4, 1, "", "to"]], "torchtree.core.parameter_encoder": [[26, 3, 1, "", "ParameterEncoder"]], "torchtree.core.parameter_encoder.ParameterEncoder": [[26, 4, 1, "", "default"]], "torchtree.core.parameter_utils": [[27, 2, 1, "", "pack_tensor"], [27, 2, 1, "", "save_parameters"]], "torchtree.core.parametric": [[28, 3, 1, "", "ModelListener"], [28, 3, 1, "", "ParameterListener"], [28, 3, 1, "", "Parametric"]], "torchtree.core.parametric.ModelListener": [[28, 4, 1, "", "handle_model_changed"]], "torchtree.core.parametric.ParameterListener": [[28, 4, 1, "", "handle_parameter_changed"]], "torchtree.core.parametric.Parametric": [[28, 4, 1, "", "parameters"], [28, 4, 1, "", "register_model"], [28, 4, 1, "", "register_parameter"]], "torchtree.core.runnable": [[29, 3, 1, "", "Runnable"]], "torchtree.core.runnable.Runnable": [[29, 4, 1, "", "run"]], "torchtree.core.serializable": [[30, 3, 1, "", "JSONSerializable"]], "torchtree.core.serializable.JSONSerializable": [[30, 4, 1, "", "from_json"], [30, 4, 1, "", "from_json_safe"]], "torchtree.core.utils": [[31, 7, 1, "", "AlternativeAttributeError"], [31, 7, 1, "", "JSONParseError"], [31, 1, 1, "", "REGISTERED_CLASSES"], [31, 3, 1, "", "SignalHandler"], [31, 3, 1, "", "TensorDecoder"], [31, 3, 1, "", "TensorEncoder"], [31, 2, 1, "", "as_tensor"], [31, 2, 1, "", "expand_plates"], [31, 2, 1, "", "get_class"], [31, 2, 1, "", "package_contents"], [31, 2, 1, "", "print_graph"], [31, 2, 1, "", "process_object"], [31, 2, 1, "", "process_object_with_key"], [31, 2, 1, "", "process_objects"], [31, 2, 1, "", "register_class"], [31, 2, 1, "", "remove_comments"], [31, 2, 1, "", "replace_star_with_str"], [31, 2, 1, "", "replace_wildcard_with_str"], [31, 2, 1, "", "string_to_list_index"], [31, 2, 1, "", "tensor_rand"], [31, 2, 1, "", "update_parameters"], [31, 2, 1, "", "validate"]], "torchtree.core.utils.AlternativeAttributeError": [[31, 4, 1, "", "wrapper"]], "torchtree.core.utils.SignalHandler": [[31, 4, 1, "", "exit"], [31, 5, 1, "", "stop"]], "torchtree.core.utils.TensorDecoder": [[31, 4, 1, "", "object_hook"]], "torchtree.core.utils.TensorEncoder": [[31, 4, 1, "", "default"]], "torchtree.distributions": [[32, 0, 0, "-", "bayesian_bridge"], [33, 0, 0, "-", "ctmc_scale"], [34, 0, 0, "-", "deterministic_normal"], [35, 0, 0, "-", "distributions"], [36, 0, 0, "-", "gmrf"], [37, 0, 0, "-", "gmrf_integrated"], [39, 0, 0, "-", "inverse_gamma"], [40, 0, 0, "-", "joint_distribution"], [41, 0, 0, "-", "log_normal"], [42, 0, 0, "-", "multivariate_normal"], [43, 0, 0, "-", "normal"], [44, 0, 0, "-", "one_on_x"], [45, 0, 0, "-", "scale_mixture"], [46, 0, 0, "-", "transforms"], [47, 0, 0, "-", "tree_prior"]], "torchtree.distributions.bayesian_bridge": [[32, 3, 1, "", "BayesianBridge"], [32, 2, 1, "", "process_object_number"]], "torchtree.distributions.bayesian_bridge.BayesianBridge": [[32, 5, 1, "", "alpha"], [32, 4, 1, "", "from_json"], [32, 4, 1, "", "handle_model_changed"], [32, 4, 1, "", "json_factory"], [32, 5, 1, "", "local_scale"], [32, 5, 1, "", "scale"], [32, 5, 1, "", "slab"], [32, 5, 1, "", "x"]], "torchtree.distributions.ctmc_scale": [[33, 3, 1, "", "CTMCScale"]], "torchtree.distributions.ctmc_scale.CTMCScale": [[33, 4, 1, "", "cpu"], [33, 4, 1, "", "cuda"], [33, 4, 1, "", "from_json"], [33, 4, 1, "", "json_factory"], [33, 5, 1, "", "log_gamma_one_half"], [33, 5, 1, "", "shape"], [33, 4, 1, "", "to"], [33, 5, 1, "", "tree_model"], [33, 5, 1, "", "x"]], "torchtree.distributions.deterministic_normal": [[34, 3, 1, "", "DeterministicNormal"]], "torchtree.distributions.deterministic_normal.DeterministicNormal": [[34, 6, 1, "", "batch_shape"], [34, 4, 1, "", "entropy"], [34, 5, 1, "", "eps"], [34, 6, 1, "", "event_shape"], [34, 4, 1, "", "from_json"], [34, 4, 1, "", "handle_model_changed"], [34, 4, 1, "", "json_factory"], [34, 5, 1, "", "loc"], [34, 4, 1, "", "log_prob"], [34, 4, 1, "", "rsample"], [34, 4, 1, "", "sample"], [34, 5, 1, "", "scale"]], "torchtree.distributions.distributions": [[35, 3, 1, "", "Distribution"], [35, 3, 1, "", "DistributionModel"]], "torchtree.distributions.distributions.Distribution": [[35, 6, 1, "", "batch_shape"], [35, 5, 1, "", "dict_parameters"], [35, 5, 1, "", "dist"], [35, 6, 1, "", "distribution"], [35, 5, 1, "", "distribution_parameters"], [35, 4, 1, "", "entropy"], [35, 6, 1, "", "event_shape"], [35, 4, 1, "", "from_json"], [35, 4, 1, "", "json_factory"], [35, 5, 1, "", "kwargs"], [35, 4, 1, "", "log_prob"], [35, 4, 1, "", "rsample"], [35, 4, 1, "", "sample"]], "torchtree.distributions.distributions.DistributionModel": [[35, 4, 1, "", "entropy"], [35, 4, 1, "", "log_prob"], [35, 4, 1, "", "rsample"], [35, 4, 1, "", "sample"]], "torchtree.distributions.gmrf": [[36, 3, 1, "", "GMRF"], [36, 3, 1, "", "GMRFCovariate"]], "torchtree.distributions.gmrf.GMRF": [[36, 5, 1, "", "field"], [36, 4, 1, "", "from_json"], [36, 5, 1, "", "precision"], [36, 4, 1, "", "precision_matrix"], [36, 5, 1, "", "rescale"], [36, 5, 1, "", "tree_model"], [36, 5, 1, "", "weights"]], "torchtree.distributions.gmrf.GMRFCovariate": [[36, 5, 1, "", "beta"], [36, 5, 1, "", "covariates"], [36, 4, 1, "", "from_json"]], "torchtree.distributions.gmrf_integrated": [[37, 3, 1, "", "GMRFGammaIntegrated"]], "torchtree.distributions.gmrf_integrated.GMRFGammaIntegrated": [[37, 5, 1, "", "constant_term"], [37, 5, 1, "", "field"], [37, 4, 1, "", "from_json"], [37, 5, 1, "", "tree_model"]], "torchtree.distributions.inverse_gamma": [[39, 3, 1, "", "InverseGamma"]], "torchtree.distributions.inverse_gamma.InverseGamma": [[39, 5, 1, "", "arg_constraints"], [39, 6, 1, "", "concentration"], [39, 4, 1, "", "expand"], [39, 5, 1, "", "has_rsample"], [39, 6, 1, "", "rate"], [39, 5, 1, "", "support"]], "torchtree.distributions.joint_distribution": [[40, 3, 1, "", "JointDistributionModel"]], "torchtree.distributions.joint_distribution.JointDistributionModel": [[40, 4, 1, "", "entropy"], [40, 4, 1, "", "from_json"], [40, 4, 1, "", "handle_parameter_changed"], [40, 4, 1, "", "log_prob"], [40, 4, 1, "", "rsample"], [40, 4, 1, "", "sample"]], "torchtree.distributions.log_normal": [[41, 3, 1, "", "LogNormal"]], "torchtree.distributions.multivariate_normal": [[42, 3, 1, "", "MultivariateNormal"]], "torchtree.distributions.multivariate_normal.MultivariateNormal": [[42, 6, 1, "", "batch_shape"], [42, 4, 1, "", "entropy"], [42, 6, 1, "", "event_shape"], [42, 4, 1, "", "from_json"], [42, 5, 1, "", "loc"], [42, 4, 1, "", "log_prob"], [42, 4, 1, "", "rsample"], [42, 4, 1, "", "sample"]], "torchtree.distributions.normal": [[43, 3, 1, "", "Normal"]], "torchtree.distributions.one_on_x": [[44, 3, 1, "", "OneOnX"]], "torchtree.distributions.one_on_x.OneOnX": [[44, 5, 1, "", "arg_constraints"], [44, 4, 1, "", "log_prob"], [44, 5, 1, "", "support"]], "torchtree.distributions.scale_mixture": [[45, 3, 1, "", "ScaleMixtureNormal"]], "torchtree.distributions.scale_mixture.ScaleMixtureNormal": [[45, 4, 1, "", "from_json"], [45, 5, 1, "", "gobal_scale"], [45, 4, 1, "", "handle_model_changed"], [45, 4, 1, "", "json_factory"], [45, 5, 1, "", "loc"], [45, 5, 1, "", "local_scale"], [45, 5, 1, "", "slab"], [45, 5, 1, "", "x"]], "torchtree.distributions.transforms": [[46, 3, 1, "", "ConvexCombinationTransform"], [46, 3, 1, "", "CumSumExpTransform"], [46, 3, 1, "", "CumSumSoftPlusTransform"], [46, 3, 1, "", "CumSumTransform"], [46, 3, 1, "", "LinearTransform"], [46, 3, 1, "", "LogTransform"], [46, 3, 1, "", "SoftPlusTransform"], [46, 3, 1, "", "TrilExpDiagonalTransform"]], "torchtree.distributions.transforms.ConvexCombinationTransform": [[46, 5, 1, "", "codomain"], [46, 5, 1, "", "domain"], [46, 4, 1, "", "log_abs_det_jacobian"]], "torchtree.distributions.transforms.CumSumExpTransform": [[46, 5, 1, "", "bijective"], [46, 5, 1, "", "codomain"], [46, 5, 1, "", "domain"], [46, 4, 1, "", "log_abs_det_jacobian"], [46, 5, 1, "", "sign"]], "torchtree.distributions.transforms.CumSumSoftPlusTransform": [[46, 5, 1, "", "bijective"], [46, 5, 1, "", "codomain"], [46, 5, 1, "", "domain"], [46, 4, 1, "", "log_abs_det_jacobian"], [46, 5, 1, "", "sign"]], "torchtree.distributions.transforms.CumSumTransform": [[46, 5, 1, "", "bijective"], [46, 5, 1, "", "codomain"], [46, 5, 1, "", "domain"], [46, 4, 1, "", "log_abs_det_jacobian"], [46, 5, 1, "", "sign"]], "torchtree.distributions.transforms.LinearTransform": [[46, 5, 1, "", "bias"], [46, 5, 1, "", "codomain"], [46, 5, 1, "", "domain"], [46, 5, 1, "", "weight"]], "torchtree.distributions.transforms.LogTransform": [[46, 5, 1, "", "bijective"], [46, 5, 1, "", "codomain"], [46, 5, 1, "", "domain"], [46, 4, 1, "", "log_abs_det_jacobian"], [46, 5, 1, "", "sign"]], "torchtree.distributions.transforms.SoftPlusTransform": [[46, 5, 1, "", "bijective"], [46, 5, 1, "", "codomain"], [46, 5, 1, "", "domain"], [46, 4, 1, "", "log_abs_det_jacobian"], [46, 5, 1, "", "sign"]], "torchtree.distributions.transforms.TrilExpDiagonalTransform": [[46, 5, 1, "", "bijective"], [46, 4, 1, "", "log_abs_det_jacobian"], [46, 5, 1, "", "sign"]], "torchtree.distributions.tree_prior": [[47, 3, 1, "", "CompoundGammaDirichletPrior"]], "torchtree.distributions.tree_prior.CompoundGammaDirichletPrior": [[47, 5, 1, "", "alpha"], [47, 5, 1, "", "c"], [47, 4, 1, "", "from_json"], [47, 4, 1, "", "handle_parameter_changed"], [47, 5, 1, "", "rate"], [47, 5, 1, "", "shape"], [47, 5, 1, "", "tree_model"]], "torchtree.evolution": [[48, 0, 0, "-", "alignment"], [49, 0, 0, "-", "attribute_pattern"], [50, 0, 0, "-", "bdsk"], [51, 0, 0, "-", "birth_death"], [52, 0, 0, "-", "branch_model"], [53, 0, 0, "-", "coalescent"], [54, 0, 0, "-", "datatype"], [56, 0, 0, "-", "io"], [57, 0, 0, "-", "poisson_tree_likelihood"], [58, 0, 0, "-", "rate_transform"], [59, 0, 0, "-", "root_transform"], [60, 0, 0, "-", "site_model"], [61, 0, 0, "-", "site_pattern"], [66, 0, 0, "-", "substitution_model"], [68, 0, 0, "-", "taxa"], [69, 0, 0, "-", "tree_height_transform"], [70, 0, 0, "-", "tree_likelihood"], [71, 0, 0, "-", "tree_model"], [72, 0, 0, "-", "tree_model_flexible"], [73, 0, 0, "-", "tree_regression"]], "torchtree.evolution.alignment": [[48, 3, 1, "", "Alignment"], [48, 1, 1, "", "Sequence"], [48, 2, 1, "", "calculate_F3x4"], [48, 2, 1, "", "calculate_F3x4_from_nucleotide"], [48, 2, 1, "", "calculate_frequencies"], [48, 2, 1, "", "calculate_frequencies_per_codon_position"], [48, 2, 1, "", "calculate_kappa"], [48, 2, 1, "", "calculate_substitutions"], [48, 2, 1, "", "calculate_ts_tv"], [48, 2, 1, "", "read_fasta_sequences"]], "torchtree.evolution.alignment.Alignment": [[48, 6, 1, "", "data_type"], [48, 4, 1, "", "from_json"], [48, 4, 1, "", "get"], [48, 6, 1, "", "sequence_size"], [48, 6, 1, "", "taxa"]], "torchtree.evolution.attribute_pattern": [[49, 3, 1, "", "AttributePattern"]], "torchtree.evolution.attribute_pattern.AttributePattern": [[49, 5, 1, "", "attribute"], [49, 4, 1, "", "compute_tips_partials"], [49, 4, 1, "", "compute_tips_states"], [49, 4, 1, "", "cpu"], [49, 4, 1, "", "cuda"], [49, 5, 1, "", "data_type"], [49, 4, 1, "", "from_json"], [49, 4, 1, "", "handle_model_changed"], [49, 4, 1, "", "handle_parameter_changed"], [49, 5, 1, "", "taxa"]], "torchtree.evolution.bdsk": [[50, 3, 1, "", "BDSKModel"], [50, 3, 1, "", "PiecewiseConstantBirthDeath"], [50, 2, 1, "", "epidemiology_to_birth_death"]], "torchtree.evolution.bdsk.BDSKModel": [[50, 5, 1, "", "R"], [50, 5, 1, "", "delta"], [50, 4, 1, "", "from_json"], [50, 5, 1, "", "origin"], [50, 5, 1, "", "origin_is_root_edge"], [50, 5, 1, "", "relative_times"], [50, 5, 1, "", "removal_probability"], [50, 5, 1, "", "rho"], [50, 5, 1, "", "s"], [50, 5, 1, "", "survival"], [50, 5, 1, "", "times"], [50, 5, 1, "", "tree_model"]], "torchtree.evolution.bdsk.PiecewiseConstantBirthDeath": [[50, 5, 1, "", "arg_constraints"], [50, 5, 1, "", "lambda_"], [50, 4, 1, "", "log_p"], [50, 4, 1, "", "log_prob"], [50, 4, 1, "", "log_q"], [50, 5, 1, "", "mu"], [50, 5, 1, "", "origin"], [50, 5, 1, "", "origin_is_root_edge"], [50, 4, 1, "", "p0"], [50, 5, 1, "", "psi"], [50, 5, 1, "", "relative_times"], [50, 5, 1, "", "removal_probability"], [50, 5, 1, "", "rho"], [50, 5, 1, "", "support"], [50, 5, 1, "", "survival"], [50, 5, 1, "", "times"]], "torchtree.evolution.birth_death": [[51, 3, 1, "", "BirthDeath"], [51, 3, 1, "", "BirthDeathModel"]], "torchtree.evolution.birth_death.BirthDeath": [[51, 5, 1, "", "arg_constraints"], [51, 5, 1, "", "lambda_"], [51, 4, 1, "", "log_p"], [51, 4, 1, "", "log_prob"], [51, 4, 1, "", "log_q"], [51, 5, 1, "", "mu"], [51, 5, 1, "", "origin"], [51, 5, 1, "", "psi"], [51, 5, 1, "", "rho"], [51, 5, 1, "", "survival"]], "torchtree.evolution.birth_death.BirthDeathModel": [[51, 4, 1, "", "from_json"], [51, 4, 1, "", "handle_model_changed"], [51, 5, 1, "", "lambda_"], [51, 5, 1, "", "mu"], [51, 5, 1, "", "origin"], [51, 5, 1, "", "psi"], [51, 5, 1, "", "rho"], [51, 5, 1, "", "survival"], [51, 5, 1, "", "tree_model"]], "torchtree.evolution.branch_model": [[52, 3, 1, "", "AbstractClockModel"], [52, 3, 1, "", "BranchModel"], [52, 3, 1, "", "SimpleClockModel"], [52, 3, 1, "", "StrictClockModel"]], "torchtree.evolution.branch_model.AbstractClockModel": [[52, 4, 1, "", "handle_model_changed"], [52, 4, 1, "", "handle_parameter_changed"], [52, 5, 1, "", "tree"]], "torchtree.evolution.branch_model.BranchModel": [[52, 6, 1, "", "rates"]], "torchtree.evolution.branch_model.SimpleClockModel": [[52, 4, 1, "", "from_json"], [52, 4, 1, "", "json_factory"], [52, 6, 1, "", "rates"]], "torchtree.evolution.branch_model.StrictClockModel": [[52, 5, 1, "", "branch_count"], [52, 4, 1, "", "from_json"], [52, 6, 1, "", "rates"]], "torchtree.evolution.coalescent": [[53, 3, 1, "", "AbstractCoalescentDistribution"], [53, 3, 1, "", "AbstractCoalescentModel"], [53, 3, 1, "", "ConstantCoalescent"], [53, 3, 1, "", "ConstantCoalescentIntegrated"], [53, 3, 1, "", "ConstantCoalescentIntegratedModel"], [53, 3, 1, "", "ConstantCoalescentModel"], [53, 3, 1, "", "ExponentialCoalescent"], [53, 3, 1, "", "ExponentialCoalescentModel"], [53, 3, 1, "", "FakeTreeModel"], [53, 3, 1, "", "PiecewiseConstantCoalescent"], [53, 3, 1, "", "PiecewiseConstantCoalescentGrid"], [53, 3, 1, "", "PiecewiseConstantCoalescentGridModel"], [53, 3, 1, "", "PiecewiseConstantCoalescentModel"], [53, 3, 1, "", "PiecewiseExponentialCoalescentGrid"], [53, 3, 1, "", "PiecewiseExponentialCoalescentGridModel"], [53, 3, 1, "", "PiecewiseLinearCoalescentGrid"], [53, 3, 1, "", "PiecewiseLinearCoalescentGridModel"], [53, 3, 1, "", "SoftPiecewiseConstantCoalescentGrid"], [53, 2, 1, "", "process_data_coalesent"]], "torchtree.evolution.coalescent.AbstractCoalescentDistribution": [[53, 5, 1, "", "arg_constraints"], [53, 5, 1, "", "has_rsample"], [53, 4, 1, "", "maximum_likelihood"], [53, 5, 1, "", "support"], [53, 5, 1, "", "theta"]], "torchtree.evolution.coalescent.AbstractCoalescentModel": [[53, 4, 1, "", "distribution"], [53, 5, 1, "", "theta"], [53, 5, 1, "", "tree_model"]], "torchtree.evolution.coalescent.ConstantCoalescent": [[53, 5, 1, "", "has_rsample"], [53, 4, 1, "", "log_prob"], [53, 4, 1, "", "maximum_likelihood"], [53, 4, 1, "", "rsample"]], "torchtree.evolution.coalescent.ConstantCoalescentIntegrated": [[53, 5, 1, "", "alpha"], [53, 5, 1, "", "arg_constraints"], [53, 5, 1, "", "beta"], [53, 5, 1, "", "has_rsample"], [53, 4, 1, "", "log_prob"], [53, 5, 1, "", "support"]], "torchtree.evolution.coalescent.ConstantCoalescentIntegratedModel": [[53, 5, 1, "", "alpha"], [53, 5, 1, "", "beta"], [53, 4, 1, "", "distribution"], [53, 4, 1, "", "from_json"], [53, 5, 1, "", "tree_model"]], "torchtree.evolution.coalescent.ConstantCoalescentModel": [[53, 4, 1, "", "distribution"], [53, 4, 1, "", "from_json"]], "torchtree.evolution.coalescent.ExponentialCoalescent": [[53, 5, 1, "", "arg_constraints"], [53, 5, 1, "", "growth"], [53, 5, 1, "", "has_rsample"], [53, 4, 1, "", "log_prob"], [53, 5, 1, "", "support"], [53, 5, 1, "", "theta"]], "torchtree.evolution.coalescent.ExponentialCoalescentModel": [[53, 4, 1, "", "distribution"], [53, 4, 1, "", "from_json"], [53, 5, 1, "", "growth"]], "torchtree.evolution.coalescent.FakeTreeModel": [[53, 6, 1, "", "node_heights"], [53, 6, 1, "", "sample_shape"]], "torchtree.evolution.coalescent.PiecewiseConstantCoalescent": [[53, 4, 1, "", "log_prob"], [53, 4, 1, "", "maximum_likelihood"], [53, 4, 1, "", "sufficient_statistics"]], "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGrid": [[53, 5, 1, "", "grid"], [53, 4, 1, "", "log_prob"], [53, 4, 1, "", "sufficient_statistics"]], "torchtree.evolution.coalescent.PiecewiseConstantCoalescentGridModel": [[53, 4, 1, "", "distribution"], [53, 4, 1, "", "from_json"], [53, 5, 1, "", "grid"], [53, 5, 1, "", "temperature"]], "torchtree.evolution.coalescent.PiecewiseConstantCoalescentModel": [[53, 4, 1, "", "distribution"], [53, 4, 1, "", "from_json"]], "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGrid": [[53, 5, 1, "", "arg_constraints"], [53, 5, 1, "", "grid"], [53, 5, 1, "", "growth"], [53, 5, 1, "", "has_rsample"], [53, 4, 1, "", "log_prob"], [53, 5, 1, "", "support"], [53, 5, 1, "", "theta"]], "torchtree.evolution.coalescent.PiecewiseExponentialCoalescentGridModel": [[53, 4, 1, "", "distribution"], [53, 4, 1, "", "from_json"], [53, 5, 1, "", "grid"], [53, 5, 1, "", "growth"]], "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGrid": [[53, 5, 1, "", "arg_constraints"], [53, 5, 1, "", "grid"], [53, 5, 1, "", "has_rsample"], [53, 4, 1, "", "log_prob"], [53, 5, 1, "", "support"], [53, 5, 1, "", "theta"]], "torchtree.evolution.coalescent.PiecewiseLinearCoalescentGridModel": [[53, 4, 1, "", "distribution"], [53, 4, 1, "", "from_json"], [53, 5, 1, "", "grid"]], "torchtree.evolution.coalescent.SoftPiecewiseConstantCoalescentGrid": [[53, 5, 1, "", "grid"], [53, 4, 1, "", "log_prob"], [53, 5, 1, "", "temperature"]], "torchtree.evolution.datatype": [[54, 3, 1, "", "AbstractDataType"], [54, 3, 1, "", "AminoAcidDataType"], [54, 3, 1, "", "CodonDataType"], [54, 3, 1, "", "DataType"], [54, 3, 1, "", "GeneralDataType"], [54, 3, 1, "", "NucleotideDataType"]], "torchtree.evolution.datatype.AbstractDataType": [[54, 6, 1, "", "size"], [54, 6, 1, "", "state_count"], [54, 6, 1, "", "states"]], "torchtree.evolution.datatype.AminoAcidDataType": [[54, 5, 1, "", "AMINO_ACIDS"], [54, 5, 1, "", "AMINO_ACIDS_AMBIGUITY_STATES"], [54, 5, 1, "", "AMINO_ACIDS_STATES"], [54, 4, 1, "", "encoding"], [54, 4, 1, "", "from_json"], [54, 4, 1, "", "partial"]], "torchtree.evolution.datatype.CodonDataType": [[54, 5, 1, "", "CODON_TRIPLETS"], [54, 5, 1, "", "GENETIC_CODE_NAMES"], [54, 5, 1, "", "GENETIC_CODE_TABLES"], [54, 5, 1, "", "NUMBER_OF_CODONS"], [54, 4, 1, "", "encoding"], [54, 4, 1, "", "from_json"], [54, 5, 1, "", "name"], [54, 4, 1, "", "partial"], [54, 5, 1, "", "stop_count"], [54, 5, 1, "", "table"], [54, 5, 1, "", "triplets"]], "torchtree.evolution.datatype.DataType": [[54, 4, 1, "", "encoding"], [54, 4, 1, "", "partial"], [54, 6, 1, "", "size"], [54, 6, 1, "", "state_count"], [54, 6, 1, "", "states"]], "torchtree.evolution.datatype.GeneralDataType": [[54, 5, 1, "", "ambiguities"], [54, 5, 1, "", "codes"], [54, 4, 1, "", "encoding"], [54, 4, 1, "", "from_json"], [54, 4, 1, "", "partial"]], "torchtree.evolution.datatype.NucleotideDataType": [[54, 5, 1, "", "NUCLEOTIDES"], [54, 5, 1, "", "NUCLEOTIDE_AMBIGUITY_STATES"], [54, 5, 1, "", "NUCLEOTIDE_STATES"], [54, 4, 1, "", "encoding"], [54, 4, 1, "", "from_json"], [54, 4, 1, "", "partial"]], "torchtree.evolution.io": [[56, 3, 1, "", "Node"], [56, 2, 1, "", "convert_samples_to_nexus"], [56, 2, 1, "", "extract_taxa"], [56, 2, 1, "", "parse_taxa"], [56, 2, 1, "", "parse_translate"], [56, 2, 1, "", "parse_trees"], [56, 2, 1, "", "random_tree_from_heights"], [56, 2, 1, "", "read_tree"], [56, 2, 1, "", "read_tree_and_alignment"], [56, 2, 1, "", "split_newick"], [56, 2, 1, "", "to_nexus"]], "torchtree.evolution.io.Node": [[56, 5, 1, "", "children"], [56, 5, 1, "", "height"], [56, 5, 1, "", "name"], [56, 5, 1, "", "parent"]], "torchtree.evolution.poisson_tree_likelihood": [[57, 3, 1, "", "PoissonTreeLikelihood"]], "torchtree.evolution.poisson_tree_likelihood.PoissonTreeLikelihood": [[57, 5, 1, "", "clock_model"], [57, 5, 1, "", "edge_lengths"], [57, 4, 1, "", "from_json"], [57, 4, 1, "", "handle_parameter_changed"], [57, 5, 1, "", "tree_model"]], "torchtree.evolution.rate_transform": [[58, 3, 1, "", "LogDifferenceRateTransform"], [58, 3, 1, "", "RescaledRateTransform"]], "torchtree.evolution.rate_transform.LogDifferenceRateTransform": [[58, 5, 1, "", "bijective"], [58, 4, 1, "", "log_abs_det_jacobian"], [58, 5, 1, "", "sign"]], "torchtree.evolution.rate_transform.RescaledRateTransform": [[58, 5, 1, "", "bijective"], [58, 4, 1, "", "log_abs_det_jacobian"], [58, 5, 1, "", "sign"]], "torchtree.evolution.root_transform": [[59, 3, 1, "", "RootParameter"]], "torchtree.evolution.root_transform.RootParameter": [[59, 4, 1, "", "add_parameter_listener"], [59, 5, 1, "", "distance"], [59, 4, 1, "", "fire_parameter_changed"], [59, 4, 1, "", "from_json"], [59, 4, 1, "", "handle_model_changed"], [59, 4, 1, "", "handle_parameter_changed"], [59, 5, 1, "", "listeners"], [59, 5, 1, "", "need_update"], [59, 4, 1, "", "parameters"], [59, 5, 1, "", "rate"], [59, 5, 1, "", "shift"], [59, 6, 1, "", "tensor"], [59, 4, 1, "", "transform"]], "torchtree.evolution.site_model": [[60, 3, 1, "", "ConstantSiteModel"], [60, 3, 1, "", "InvariantSiteModel"], [60, 3, 1, "", "SiteModel"], [60, 3, 1, "", "UnivariateDiscretizedSiteModel"], [60, 3, 1, "", "WeibullSiteModel"]], "torchtree.evolution.site_model.ConstantSiteModel": [[60, 4, 1, "", "cpu"], [60, 4, 1, "", "cuda"], [60, 4, 1, "", "from_json"], [60, 4, 1, "", "probabilities"], [60, 4, 1, "", "rates"], [60, 4, 1, "", "to"]], "torchtree.evolution.site_model.InvariantSiteModel": [[60, 4, 1, "", "cpu"], [60, 4, 1, "", "cuda"], [60, 4, 1, "", "from_json"], [60, 6, 1, "", "invariant"], [60, 4, 1, "", "probabilities"], [60, 4, 1, "", "rates"], [60, 4, 1, "", "to"], [60, 4, 1, "", "update_rates_probs"]], "torchtree.evolution.site_model.SiteModel": [[60, 4, 1, "", "handle_model_changed"], [60, 4, 1, "", "handle_parameter_changed"], [60, 5, 1, "", "needs_update"], [60, 4, 1, "", "probabilities"], [60, 4, 1, "", "rates"]], "torchtree.evolution.site_model.UnivariateDiscretizedSiteModel": [[60, 4, 1, "", "cpu"], [60, 4, 1, "", "cuda"], [60, 6, 1, "", "invariant"], [60, 4, 1, "", "inverse_cdf"], [60, 4, 1, "", "probabilities"], [60, 4, 1, "", "rates"], [60, 4, 1, "", "to"], [60, 4, 1, "", "update_rates"]], "torchtree.evolution.site_model.WeibullSiteModel": [[60, 4, 1, "", "from_json"], [60, 4, 1, "", "inverse_cdf"], [60, 6, 1, "", "shape"]], "torchtree.evolution.site_pattern": [[61, 3, 1, "", "SitePattern"], [61, 2, 1, "", "compress"], [61, 2, 1, "", "compress_alignment"], [61, 2, 1, "", "compress_alignment_states"]], "torchtree.evolution.site_pattern.SitePattern": [[61, 5, 1, "", "alignment"], [61, 4, 1, "", "compute_tips_partials"], [61, 4, 1, "", "compute_tips_states"], [61, 4, 1, "", "cpu"], [61, 4, 1, "", "cuda"], [61, 4, 1, "", "from_json"], [61, 4, 1, "", "handle_model_changed"], [61, 4, 1, "", "handle_parameter_changed"], [61, 5, 1, "", "indices"]], "torchtree.evolution.substitution_model": [[62, 0, 0, "-", "abstract"], [63, 0, 0, "-", "amino_acid"], [64, 0, 0, "-", "codon"], [65, 0, 0, "-", "general"], [67, 0, 0, "-", "nucleotide"]], "torchtree.evolution.substitution_model.abstract": [[62, 3, 1, "", "AbstractSubstitutionModel"], [62, 3, 1, "", "NonSymmetricSubstitutionModel"], [62, 3, 1, "", "SubstitutionModel"], [62, 3, 1, "", "SymmetricSubstitutionModel"]], "torchtree.evolution.substitution_model.abstract.AbstractSubstitutionModel": [[62, 6, 1, "", "frequencies"], [62, 4, 1, "", "norm"]], "torchtree.evolution.substitution_model.abstract.NonSymmetricSubstitutionModel": [[62, 4, 1, "", "eigen"], [62, 4, 1, "", "p_t"]], "torchtree.evolution.substitution_model.abstract.SubstitutionModel": [[62, 6, 1, "", "frequencies"], [62, 4, 1, "", "p_t"], [62, 4, 1, "", "q"], [62, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.abstract.SymmetricSubstitutionModel": [[62, 4, 1, "", "eigen"], [62, 4, 1, "", "p_t"]], "torchtree.evolution.substitution_model.amino_acid": [[63, 3, 1, "", "LG"], [63, 3, 1, "", "WAG"]], "torchtree.evolution.substitution_model.amino_acid.LG": [[63, 4, 1, "", "from_json"], [63, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.amino_acid.WAG": [[63, 4, 1, "", "from_json"], [63, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.codon": [[64, 3, 1, "", "MG94"]], "torchtree.evolution.substitution_model.codon.MG94": [[64, 5, 1, "", "alpha"], [64, 5, 1, "", "beta"], [64, 5, 1, "", "data_type"], [64, 4, 1, "", "from_json"], [64, 4, 1, "", "handle_model_changed"], [64, 4, 1, "", "handle_parameter_changed"], [64, 5, 1, "", "kappa"], [64, 5, 1, "", "non_synonymous"], [64, 4, 1, "", "q"], [64, 6, 1, "", "rates"], [64, 5, 1, "", "synonymous"], [64, 5, 1, "", "transitions"]], "torchtree.evolution.substitution_model.general": [[65, 3, 1, "", "EmpiricalSubstitutionModel"], [65, 3, 1, "", "GeneralJC69"], [65, 3, 1, "", "GeneralNonSymmetricSubstitutionModel"], [65, 3, 1, "", "GeneralSymmetricSubstitutionModel"]], "torchtree.evolution.substitution_model.general.EmpiricalSubstitutionModel": [[65, 5, 1, "", "Q"], [65, 4, 1, "", "create_rate_matrix"], [65, 4, 1, "", "eigen"], [65, 6, 1, "", "frequencies"], [65, 4, 1, "", "from_json"], [65, 4, 1, "", "handle_model_changed"], [65, 4, 1, "", "handle_parameter_changed"], [65, 4, 1, "", "p_t"], [65, 4, 1, "", "q"], [65, 5, 1, "", "sqrt_pi"], [65, 5, 1, "", "sqrt_pi_inv"]], "torchtree.evolution.substitution_model.general.GeneralJC69": [[65, 4, 1, "", "cpu"], [65, 4, 1, "", "cuda"], [65, 6, 1, "", "frequencies"], [65, 4, 1, "", "from_json"], [65, 4, 1, "", "handle_model_changed"], [65, 4, 1, "", "handle_parameter_changed"], [65, 4, 1, "", "p_t"], [65, 4, 1, "", "q"], [65, 6, 1, "", "rates"], [65, 5, 1, "", "state_count"]], "torchtree.evolution.substitution_model.general.GeneralNonSymmetricSubstitutionModel": [[65, 5, 1, "", "data_type"], [65, 4, 1, "", "from_json"], [65, 4, 1, "", "handle_model_changed"], [65, 4, 1, "", "handle_parameter_changed"], [65, 5, 1, "", "mapping"], [65, 5, 1, "", "normalize"], [65, 4, 1, "", "q"], [65, 6, 1, "", "rates"], [65, 5, 1, "", "state_count"]], "torchtree.evolution.substitution_model.general.GeneralSymmetricSubstitutionModel": [[65, 5, 1, "", "data_type"], [65, 4, 1, "", "from_json"], [65, 4, 1, "", "handle_model_changed"], [65, 4, 1, "", "handle_parameter_changed"], [65, 5, 1, "", "mapping"], [65, 4, 1, "", "q"], [65, 6, 1, "", "rates"], [65, 5, 1, "", "state_count"]], "torchtree.evolution.substitution_model.nucleotide": [[67, 3, 1, "", "GTR"], [67, 3, 1, "", "HKY"], [67, 3, 1, "", "JC69"]], "torchtree.evolution.substitution_model.nucleotide.GTR": [[67, 4, 1, "", "from_json"], [67, 4, 1, "", "handle_model_changed"], [67, 4, 1, "", "handle_parameter_changed"], [67, 4, 1, "", "q"], [67, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.nucleotide.HKY": [[67, 4, 1, "", "from_json"], [67, 4, 1, "", "handle_model_changed"], [67, 4, 1, "", "handle_parameter_changed"], [67, 6, 1, "", "kappa"], [67, 4, 1, "", "p_t_analytical"], [67, 4, 1, "", "q"], [67, 6, 1, "", "rates"]], "torchtree.evolution.substitution_model.nucleotide.JC69": [[67, 4, 1, "", "cpu"], [67, 4, 1, "", "cuda"], [67, 6, 1, "", "frequencies"], [67, 4, 1, "", "from_json"], [67, 4, 1, "", "handle_model_changed"], [67, 4, 1, "", "handle_parameter_changed"], [67, 4, 1, "", "p_t"], [67, 4, 1, "", "q"], [67, 6, 1, "", "rates"]], "torchtree.evolution.taxa": [[68, 3, 1, "", "Taxa"], [68, 3, 1, "", "Taxon"]], "torchtree.evolution.taxa.Taxa": [[68, 4, 1, "", "from_json"]], "torchtree.evolution.taxa.Taxon": [[68, 4, 1, "", "from_json"]], "torchtree.evolution.tree_height_transform": [[69, 3, 1, "", "DifferenceNodeHeightTransform"], [69, 3, 1, "", "GeneralNodeHeightTransform"]], "torchtree.evolution.tree_height_transform.DifferenceNodeHeightTransform": [[69, 5, 1, "", "bijective"], [69, 5, 1, "", "k"], [69, 4, 1, "", "log_abs_det_jacobian"], [69, 5, 1, "", "sign"], [69, 5, 1, "", "taxa_count"], [69, 5, 1, "", "tree"]], "torchtree.evolution.tree_height_transform.GeneralNodeHeightTransform": [[69, 5, 1, "", "bijective"], [69, 4, 1, "", "log_abs_det_jacobian"], [69, 5, 1, "", "sign"], [69, 4, 1, "", "sort_indices"], [69, 5, 1, "", "taxa_count"], [69, 5, 1, "", "tree"], [69, 4, 1, "", "update_bounds"]], "torchtree.evolution.tree_likelihood": [[70, 3, 1, "", "TreeLikelihoodModel"], [70, 2, 1, "", "calculate_treelikelihood"], [70, 2, 1, "", "calculate_treelikelihood_discrete"], [70, 2, 1, "", "calculate_treelikelihood_discrete_rescaled"], [70, 2, 1, "", "calculate_treelikelihood_discrete_safe"], [70, 2, 1, "", "calculate_treelikelihood_tip_states_discrete"], [70, 2, 1, "", "calculate_treelikelihood_tip_states_discrete_rescaled"]], "torchtree.evolution.tree_likelihood.TreeLikelihoodModel": [[70, 4, 1, "", "calculate_with_tip_partials"], [70, 4, 1, "", "calculate_with_tip_states"], [70, 5, 1, "", "clock_model"], [70, 4, 1, "", "from_json"], [70, 4, 1, "", "handle_parameter_changed"], [70, 5, 1, "", "rescale"], [70, 5, 1, "", "site_model"], [70, 5, 1, "", "site_pattern"], [70, 5, 1, "", "subst_model"], [70, 5, 1, "", "threshold"], [70, 5, 1, "", "tree_model"], [70, 5, 1, "", "use_tip_states"]], "torchtree.evolution.tree_model": [[71, 3, 1, "", "AbstractTreeModel"], [71, 3, 1, "", "ReparameterizedTimeTreeModel"], [71, 3, 1, "", "TimeTreeModel"], [71, 3, 1, "", "TreeModel"], [71, 3, 1, "", "UnRootedTreeModel"], [71, 2, 1, "", "heights_from_branch_lengths"], [71, 2, 1, "", "heights_to_branch_lengths"], [71, 2, 1, "", "initialize_dates_from_taxa"], [71, 2, 1, "", "parse_tree"], [71, 2, 1, "", "setup_dates"], [71, 2, 1, "", "setup_indexes"]], "torchtree.evolution.tree_model.AbstractTreeModel": [[71, 4, 1, "", "as_newick"], [71, 4, 1, "", "handle_model_changed"], [71, 6, 1, "", "postorder"], [71, 6, 1, "", "taxa"], [71, 5, 1, "", "taxa_count"], [71, 5, 1, "", "tree"], [71, 4, 1, "", "update_traversals"], [71, 4, 1, "", "write_newick"]], "torchtree.evolution.tree_model.ReparameterizedTimeTreeModel": [[71, 4, 1, "", "cpu"], [71, 4, 1, "", "cuda"], [71, 4, 1, "", "from_json"], [71, 4, 1, "", "handle_model_changed"], [71, 4, 1, "", "handle_parameter_changed"], [71, 4, 1, "", "json_factory"], [71, 6, 1, "", "node_heights"], [71, 4, 1, "", "update_node_heights"]], "torchtree.evolution.tree_model.TimeTreeModel": [[71, 4, 1, "", "branch_lengths"], [71, 5, 1, "", "branch_lengths_need_update"], [71, 4, 1, "", "cpu"], [71, 4, 1, "", "cuda"], [71, 4, 1, "", "from_json"], [71, 4, 1, "", "handle_parameter_changed"], [71, 5, 1, "", "heights_need_update"], [71, 4, 1, "", "json_factory"], [71, 6, 1, "", "node_heights"], [71, 5, 1, "", "sampling_times"], [71, 5, 1, "", "taxa_count"], [71, 4, 1, "", "update_leaf_heights"], [71, 4, 1, "", "update_traversals"]], "torchtree.evolution.tree_model.TreeModel": [[71, 4, 1, "", "branch_lengths"], [71, 6, 1, "", "postorder"], [71, 6, 1, "", "taxa"], [71, 4, 1, "", "write_newick"]], "torchtree.evolution.tree_model.UnRootedTreeModel": [[71, 4, 1, "", "branch_lengths"], [71, 4, 1, "", "from_json"], [71, 4, 1, "", "handle_parameter_changed"], [71, 4, 1, "", "json_factory"]], "torchtree.evolution.tree_model_flexible": [[72, 3, 1, "", "FlexibleTimeTreeModel"]], "torchtree.evolution.tree_model_flexible.FlexibleTimeTreeModel": [[72, 4, 1, "", "from_json"], [72, 4, 1, "", "json_factory"]], "torchtree.evolution.tree_regression": [[73, 2, 1, "", "linear_regression"]], "torchtree.inference": [[78, 0, 0, "-", "hmc"], [84, 0, 0, "-", "mcmc"], [87, 0, 0, "-", "sampler"], [88, 0, 0, "-", "utils"]], "torchtree.inference.hmc": [[75, 0, 0, "-", "adaptation"], [76, 0, 0, "-", "hamiltonian"], [77, 0, 0, "-", "hmc"], [79, 0, 0, "-", "integrator"], [80, 0, 0, "-", "operator"], [81, 0, 0, "-", "stan_adaptation"]], "torchtree.inference.hmc.adaptation": [[75, 3, 1, "", "AdaptiveStepSize"], [75, 3, 1, "", "Adaptor"], [75, 3, 1, "", "DualAveragingStepSize"], [75, 3, 1, "", "MassMatrixAdaptor"], [75, 3, 1, "", "WarmupAdaptation"], [75, 2, 1, "", "find_reasonable_step_size"]], "torchtree.inference.hmc.adaptation.AdaptiveStepSize": [[75, 4, 1, "", "from_json"], [75, 4, 1, "", "learn"], [75, 4, 1, "", "load_state_dict"], [75, 4, 1, "", "restart"], [75, 5, 1, "", "target_acceptance_probability"]], "torchtree.inference.hmc.adaptation.Adaptor": [[75, 4, 1, "", "learn"], [75, 4, 1, "", "load_state_dict"], [75, 4, 1, "", "restart"], [75, 4, 1, "", "state_dict"]], "torchtree.inference.hmc.adaptation.DualAveragingStepSize": [[75, 4, 1, "", "from_json"], [75, 5, 1, "", "integrator"], [75, 4, 1, "", "learn"], [75, 4, 1, "", "load_state_dict"], [75, 4, 1, "", "restart"]], "torchtree.inference.hmc.adaptation.MassMatrixAdaptor": [[75, 4, 1, "", "from_json"], [75, 4, 1, "", "learn"], [75, 4, 1, "", "load_state_dict"], [75, 6, 1, "", "mass_matrix"], [75, 4, 1, "", "restart"], [75, 5, 1, "", "variance_estimator"], [75, 5, 1, "", "variance_estimator2"]], "torchtree.inference.hmc.adaptation.WarmupAdaptation": [[75, 6, 1, "", "inverse_mass_matrix"], [75, 6, 1, "", "mass_matrix"], [75, 6, 1, "", "sqrt_mass_matrix"], [75, 6, 1, "", "step_size"]], "torchtree.inference.hmc.hamiltonian": [[76, 3, 1, "", "Hamiltonian"]], "torchtree.inference.hmc.hamiltonian.Hamiltonian": [[76, 4, 1, "", "from_json"], [76, 4, 1, "", "handle_parameter_changed"], [76, 5, 1, "", "joint"], [76, 4, 1, "", "kinetic_energy"], [76, 4, 1, "", "potential_energy"], [76, 4, 1, "", "sample_momentum"]], "torchtree.inference.hmc.hmc": [[77, 3, 1, "", "HMC"]], "torchtree.inference.hmc.hmc.HMC": [[77, 5, 1, "", "checkpoint"], [77, 5, 1, "", "checkpoint_frequency"], [77, 5, 1, "", "dimension"], [77, 5, 1, "", "every"], [77, 4, 1, "", "find_reasonable_step_size"], [77, 5, 1, "", "find_step_size"], [77, 4, 1, "", "from_json"], [77, 4, 1, "", "hamiltonian"], [77, 5, 1, "", "integrator"], [77, 5, 1, "", "iterations"], [77, 5, 1, "", "joint"], [77, 5, 1, "", "loggers"], [77, 5, 1, "", "parameters"], [77, 4, 1, "", "run"], [77, 4, 1, "", "sample_momentum"], [77, 5, 1, "", "warmup_adaptor"]], "torchtree.inference.hmc.integrator": [[79, 3, 1, "", "Integrator"], [79, 3, 1, "", "LeapfrogIntegrator"], [79, 2, 1, "", "set_tensor"]], "torchtree.inference.hmc.integrator.Integrator": [[79, 4, 1, "", "load_state_dict"], [79, 4, 1, "", "state_dict"]], "torchtree.inference.hmc.integrator.LeapfrogIntegrator": [[79, 4, 1, "", "from_json"], [79, 4, 1, "", "load_state_dict"], [79, 5, 1, "", "step_size"], [79, 5, 1, "", "steps"]], "torchtree.inference.hmc.operator": [[80, 3, 1, "", "HMCOperator"]], "torchtree.inference.hmc.operator.HMCOperator": [[80, 4, 1, "", "adaptable_parameter"], [80, 4, 1, "", "from_json"], [80, 4, 1, "", "handle_parameter_changed"], [80, 6, 1, "", "mass_matrix"], [80, 4, 1, "", "set_adaptable_parameter"], [80, 4, 1, "", "tune"], [80, 6, 1, "", "tuning_parameter"], [80, 4, 1, "", "update_mass_matrices"]], "torchtree.inference.hmc.stan_adaptation": [[81, 3, 1, "", "StanWindowedAdaptation"]], "torchtree.inference.hmc.stan_adaptation.StanWindowedAdaptation": [[81, 5, 1, "", "adapt_base_window"], [81, 5, 1, "", "adapt_init_buffer"], [81, 5, 1, "", "adapt_term_buffer"], [81, 4, 1, "", "from_json"], [81, 4, 1, "", "learn"], [81, 5, 1, "", "mass_matrix_adaptor"], [81, 5, 1, "", "num_warmup"], [81, 4, 1, "", "restart"], [81, 5, 1, "", "step_size_adaptor"]], "torchtree.inference.mcmc": [[83, 0, 0, "-", "gmrf_block_updating"], [85, 0, 0, "-", "mcmc"], [86, 0, 0, "-", "operator"]], "torchtree.inference.mcmc.gmrf_block_updating": [[83, 3, 1, "", "GMRFPiecewiseCoalescentBlockUpdatingOperator"]], "torchtree.inference.mcmc.gmrf_block_updating.GMRFPiecewiseCoalescentBlockUpdatingOperator": [[83, 4, 1, "", "adaptable_parameter"], [83, 5, 1, "", "coalescent"], [83, 4, 1, "", "from_json"], [83, 5, 1, "", "gmrf"], [83, 4, 1, "", "gradient"], [83, 4, 1, "", "jacobian"], [83, 4, 1, "", "newton_raphson"], [83, 4, 1, "", "propose_precision"], [83, 4, 1, "", "set_adaptable_parameter"], [83, 6, 1, "", "tuning_parameter"]], "torchtree.inference.mcmc.mcmc": [[85, 3, 1, "", "MCMC"]], "torchtree.inference.mcmc.mcmc.MCMC": [[85, 5, 1, "", "checkpoint"], [85, 5, 1, "", "checkpoint_frequency"], [85, 5, 1, "", "every"], [85, 4, 1, "", "from_json"], [85, 5, 1, "", "iterations"], [85, 5, 1, "", "joint"], [85, 4, 1, "", "load_state_dict"], [85, 5, 1, "", "loggers"], [85, 5, 1, "", "parameters"], [85, 4, 1, "", "run"], [85, 4, 1, "", "save_full_state"], [85, 4, 1, "", "state_dict"]], "torchtree.inference.mcmc.operator": [[86, 3, 1, "", "DirichletOperator"], [86, 3, 1, "", "MCMCOperator"], [86, 3, 1, "", "ScalerOperator"], [86, 3, 1, "", "SlidingWindowOperator"]], "torchtree.inference.mcmc.operator.DirichletOperator": [[86, 4, 1, "", "adaptable_parameter"], [86, 4, 1, "", "from_json"], [86, 4, 1, "", "set_adaptable_parameter"], [86, 6, 1, "", "tuning_parameter"]], "torchtree.inference.mcmc.operator.MCMCOperator": [[86, 4, 1, "", "accept"], [86, 6, 1, "", "adaptable_parameter"], [86, 4, 1, "", "load_state_dict"], [86, 5, 1, "", "parameters"], [86, 4, 1, "", "reject"], [86, 4, 1, "", "set_adaptable_parameter"], [86, 4, 1, "", "smoothed_acceptance_rate"], [86, 4, 1, "", "state_dict"], [86, 4, 1, "", "step"], [86, 5, 1, "", "target_acceptance_probability"], [86, 4, 1, "", "tune"], [86, 6, 1, "", "tuning_parameter"], [86, 5, 1, "", "weight"]], "torchtree.inference.mcmc.operator.ScalerOperator": [[86, 4, 1, "", "adaptable_parameter"], [86, 4, 1, "", "from_json"], [86, 4, 1, "", "set_adaptable_parameter"], [86, 6, 1, "", "tuning_parameter"]], "torchtree.inference.mcmc.operator.SlidingWindowOperator": [[86, 4, 1, "", "adaptable_parameter"], [86, 4, 1, "", "from_json"], [86, 4, 1, "", "set_adaptable_parameter"], [86, 6, 1, "", "tuning_parameter"]], "torchtree.inference.sampler": [[87, 3, 1, "", "Sampler"]], "torchtree.inference.sampler.Sampler": [[87, 4, 1, "", "from_json"], [87, 5, 1, "", "loggers"], [87, 5, 1, "", "model"], [87, 4, 1, "", "run"], [87, 5, 1, "", "samples"]], "torchtree.inference.utils": [[88, 2, 1, "", "extract_tensors_and_parameters"]], "torchtree.nf": [[89, 0, 0, "-", "energy_functions"], [90, 0, 0, "-", "flow"], [92, 0, 0, "-", "planar"], [93, 0, 0, "-", "realnvp"]], "torchtree.nf.energy_functions": [[89, 3, 1, "", "EnergyFunctionModel"], [89, 2, 1, "", "w1"], [89, 2, 1, "", "w2"], [89, 2, 1, "", "w3"]], "torchtree.nf.energy_functions.EnergyFunctionModel": [[89, 5, 1, "", "desc"], [89, 4, 1, "", "from_json"], [89, 4, 1, "", "handle_model_changed"], [89, 5, 1, "", "x"]], "torchtree.nf.flow": [[90, 3, 1, "", "NormalizingFlow"]], "torchtree.nf.flow.NormalizingFlow": [[90, 4, 1, "", "apply_flow"], [90, 5, 1, "", "base"], [90, 4, 1, "", "cpu"], [90, 4, 1, "", "cuda"], [90, 4, 1, "", "entropy"], [90, 4, 1, "", "forward"], [90, 4, 1, "", "from_json"], [90, 5, 1, "", "layers"], [90, 4, 1, "", "log_prob"], [90, 5, 1, "", "modules"], [90, 4, 1, "", "parameters"], [90, 4, 1, "", "rsample"], [90, 4, 1, "", "sample"], [90, 5, 1, "", "sum_log_abs_det_jacobians"], [90, 4, 1, "", "to"], [90, 5, 1, "", "x"]], "torchtree.nf.planar": [[92, 3, 1, "", "PlanarTransform"]], "torchtree.nf.planar.PlanarTransform": [[92, 5, 1, "", "b"], [92, 4, 1, "", "forward"], [92, 4, 1, "", "log_abs_det_jacobian"], [92, 5, 1, "", "u"], [92, 4, 1, "", "u_hat"], [92, 5, 1, "", "w"]], "torchtree.nf.realnvp": [[93, 3, 1, "", "BatchNorm"], [93, 3, 1, "", "FlowSequential"], [93, 3, 1, "", "LinearMaskedCoupling"], [93, 3, 1, "", "RealNVP"]], "torchtree.nf.realnvp.BatchNorm": [[93, 5, 1, "", "beta"], [93, 5, 1, "", "eps"], [93, 4, 1, "", "forward"], [93, 4, 1, "", "inverse"], [93, 5, 1, "", "log_gamma"], [93, 5, 1, "", "momentum"]], "torchtree.nf.realnvp.FlowSequential": [[93, 4, 1, "", "forward"], [93, 4, 1, "", "inverse"]], "torchtree.nf.realnvp.LinearMaskedCoupling": [[93, 4, 1, "", "forward"], [93, 4, 1, "", "inverse"], [93, 5, 1, "", "s_net"], [93, 5, 1, "", "t_net"]], "torchtree.nf.realnvp.RealNVP": [[93, 4, 1, "", "apply_flow"], [93, 5, 1, "", "base_dist"], [93, 6, 1, "", "batch_shape"], [93, 4, 1, "", "entropy"], [93, 4, 1, "", "forward"], [93, 4, 1, "", "from_json"], [93, 5, 1, "", "input_size"], [93, 4, 1, "", "inverse"], [93, 4, 1, "", "log_prob"], [93, 5, 1, "", "net"], [93, 5, 1, "", "net_parameters"], [93, 4, 1, "", "parameters"], [93, 4, 1, "", "rsample"], [93, 4, 1, "", "sample"], [93, 5, 1, "", "sum_log_abs_det_jacobians"], [93, 5, 1, "", "x"]], "torchtree.nn": [[95, 0, 0, "-", "module"]], "torchtree.nn.module": [[95, 3, 1, "", "Module"]], "torchtree.nn.module.Module": [[95, 4, 1, "", "cpu"], [95, 4, 1, "", "cuda"], [95, 4, 1, "", "from_json"], [95, 6, 1, "", "module"], [95, 4, 1, "", "to"], [95, 5, 1, "", "x"]], "torchtree.ops": [[96, 0, 0, "-", "dual_averaging"], [98, 0, 0, "-", "smooth"], [99, 0, 0, "-", "welford"]], "torchtree.ops.dual_averaging": [[96, 3, 1, "", "DualAveraging"]], "torchtree.ops.dual_averaging.DualAveraging": [[96, 4, 1, "", "restart"], [96, 4, 1, "", "step"], [96, 5, 1, "", "x"]], "torchtree.ops.smooth": [[98, 2, 1, "", "smooth_max"], [98, 2, 1, "", "soft_searchsorted"], [98, 2, 1, "", "soft_sort"]], "torchtree.ops.welford": [[99, 3, 1, "", "WelfordVariance"]], "torchtree.ops.welford.WelfordVariance": [[99, 4, 1, "", "add_sample"], [99, 4, 1, "", "mean"], [99, 4, 1, "", "remove_sample"], [99, 4, 1, "", "reset"], [99, 5, 1, "", "samples"], [99, 4, 1, "", "variance"]], "torchtree.optim": [[100, 0, 0, "-", "convergence"], [102, 0, 0, "-", "lr_scheduler"], [103, 0, 0, "-", "optimizer"]], "torchtree.optim.convergence": [[100, 3, 1, "", "BaseConvergence"], [100, 3, 1, "", "StanVariationalConvergence"], [100, 3, 1, "", "VariationalConvergence"]], "torchtree.optim.convergence.BaseConvergence": [[100, 4, 1, "", "check"]], "torchtree.optim.convergence.StanVariationalConvergence": [[100, 4, 1, "", "check"], [100, 5, 1, "", "delta_elbo"], [100, 5, 1, "", "delta_elbo_ave"], [100, 5, 1, "", "delta_elbo_med"], [100, 5, 1, "", "elbo"], [100, 5, 1, "", "elbo_best"], [100, 5, 1, "", "elbo_diff"], [100, 5, 1, "", "elbo_prev"], [100, 4, 1, "", "from_json"], [100, 4, 1, "", "rel_difference"], [100, 5, 1, "", "tol_rel_obj"]], "torchtree.optim.convergence.VariationalConvergence": [[100, 4, 1, "", "check"], [100, 5, 1, "", "every"], [100, 5, 1, "", "file_name"], [100, 4, 1, "", "from_json"], [100, 5, 1, "", "loss"], [100, 5, 1, "", "samples"], [100, 5, 1, "", "start"]], "torchtree.optim.lr_scheduler": [[102, 3, 1, "", "Scheduler"]], "torchtree.optim.lr_scheduler.Scheduler": [[102, 4, 1, "", "from_json"], [102, 4, 1, "", "load_state_dict"], [102, 5, 1, "", "scheduler"], [102, 4, 1, "", "state_dict"], [102, 4, 1, "", "step"]], "torchtree.optim.optimizer": [[103, 3, 1, "", "Optimizer"]], "torchtree.optim.optimizer.Optimizer": [[103, 5, 1, "", "checkpoint"], [103, 5, 1, "", "checkpoint_all"], [103, 5, 1, "", "checkpoint_frequency"], [103, 5, 1, "", "convergence"], [103, 5, 1, "", "distributions"], [103, 4, 1, "", "from_json"], [103, 5, 1, "", "iterations"], [103, 4, 1, "", "load_state_dict"], [103, 5, 1, "", "loggers"], [103, 5, 1, "", "loss"], [103, 5, 1, "", "maximize"], [103, 5, 1, "", "optimizer"], [103, 5, 1, "", "parameters"], [103, 4, 1, "", "run"], [103, 4, 1, "", "save_full_state"], [103, 5, 1, "", "scheduler"], [103, 4, 1, "", "state_dict"]], "torchtree.torchtree": [[104, 2, 1, "", "main"]], "torchtree.typing": [[105, 1, 1, "", "ID"], [105, 1, 1, "", "ListParameter"], [105, 1, 1, "", "ListTensor"], [105, 1, 1, "", "OrderedDictType"]], "torchtree.variational": [[106, 0, 0, "-", "chi"], [108, 0, 0, "-", "kl"], [109, 0, 0, "-", "renyi"]], "torchtree.variational.chi": [[106, 3, 1, "", "CUBO"]], "torchtree.variational.chi.CUBO": [[106, 4, 1, "", "from_json"], [106, 4, 1, "", "handle_parameter_changed"], [106, 5, 1, "", "n"], [106, 5, 1, "", "p"], [106, 5, 1, "", "q"], [106, 5, 1, "", "samples"]], "torchtree.variational.kl": [[108, 3, 1, "", "ELBO"], [108, 3, 1, "", "KLpq"], [108, 3, 1, "", "KLpqImportance"], [108, 3, 1, "", "SELBO"]], "torchtree.variational.kl.ELBO": [[108, 5, 1, "", "entropy"], [108, 4, 1, "", "from_json"], [108, 4, 1, "", "handle_parameter_changed"], [108, 5, 1, "", "p"], [108, 5, 1, "", "q"], [108, 5, 1, "", "samples"], [108, 5, 1, "", "score"]], "torchtree.variational.kl.KLpq": [[108, 4, 1, "", "from_json"], [108, 4, 1, "", "handle_parameter_changed"], [108, 5, 1, "", "p"], [108, 5, 1, "", "q"], [108, 5, 1, "", "samples"]], "torchtree.variational.kl.KLpqImportance": [[108, 4, 1, "", "from_json"], [108, 4, 1, "", "handle_parameter_changed"], [108, 5, 1, "", "p"], [108, 5, 1, "", "q"], [108, 5, 1, "", "samples"]], "torchtree.variational.kl.SELBO": [[108, 5, 1, "", "components"], [108, 5, 1, "", "entropy"], [108, 4, 1, "", "from_json"], [108, 4, 1, "", "handle_parameter_changed"], [108, 5, 1, "", "p"], [108, 5, 1, "", "samples"], [108, 5, 1, "", "weights"]], "torchtree.variational.renyi": [[109, 3, 1, "", "VR"]], "torchtree.variational.renyi.VR": [[109, 5, 1, "", "alpha"], [109, 4, 1, "", "from_json"], [109, 4, 1, "", "handle_parameter_changed"], [109, 5, 1, "", "p"], [109, 5, 1, "", "q"], [109, 5, 1, "", "samples"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:method", "5": "py:attribute", "6": "py:property", "7": "py:exception"}, "terms": {"": [0, 1, 25, 36, 39, 42, 44, 50, 53, 70, 98, 99, 100, 108, 109, 110, 114, 115], "0": [0, 1, 2, 25, 31, 32, 35, 37, 43, 45, 46, 54, 56, 58, 65, 67, 69, 71, 75, 80, 81, 83, 93, 96, 98, 99, 100, 108, 109, 113, 114], "000": 0, "0000": 46, "0001": 98, "001": 0, "01": 100, "014": 0, "0163": 0, "02168": 0, "05": [75, 93, 96], "05220": 0, "06": 71, "07057v4": 93, "0820": 31, "0855": 46, "1": [0, 1, 2, 3, 4, 23, 25, 31, 32, 33, 35, 36, 37, 43, 44, 45, 46, 47, 50, 53, 54, 56, 65, 67, 69, 70, 80, 83, 92, 98, 106, 108, 109, 110, 113], "10": [0, 32, 36, 45, 75, 96, 98, 110], "100": [85, 98], "1000": 85, "1041": [36, 110], "1056": [36, 110], "1093": [0, 36, 110], "11": [45, 98, 110], "1111": [32, 110], "1186": 0, "12042": [32, 110], "1214": [32, 45, 110], "13": [108, 110], "130": [108, 110], "15": [108, 110], "16": 110, "166": 113, "16666": 2, "167": 113, "17": [45, 54, 110], "1705": 93, "18": [32, 110], "18044": 115, "1d": 46, "1e": [71, 93], "2": [0, 2, 3, 25, 31, 32, 35, 36, 37, 43, 45, 46, 56, 65, 70, 83, 98, 108, 110], "20": [0, 46], "2000": 0, "2008": [33, 110], "2011": 0, "2012": [47, 108, 110], "2013": 0, "2014": [0, 32, 110], "2016": [36, 109, 110], "2017": [45, 110], "2019": 0, "2020": [98, 110], "2021": [108, 110], "2022": 0, "2023": [0, 32, 110], "2024": 115, "21": 110, "22": [32, 110], "2211": 0, "24": 83, "2406": 115, "24th": [108, 110], "25": [1, 2, 54, 67, 113, 114], "29": [47, 109, 110], "2d": 25, "2t": 70, "3": [0, 1, 2, 25, 32, 33, 36, 37, 46, 65, 67, 98, 110], "30": 98, "325": [47, 110], "3250": [108, 110], "3258": [108, 110], "335": [47, 110], "355": [33, 110], "36": [33, 110], "36575068": 31, "367": [32, 110], "368": [33, 110], "390": [32, 110], "4": [0, 1, 2, 31, 65, 67, 113, 114], "4131": 31, "4ment": [112, 115], "5": [0, 2, 43, 46, 65, 75, 96, 114], "5000": 98, "5018": [45, 110], "5051": [45, 110], "6": [0, 2, 36, 46, 110, 113], "60": 54, "61": 54, "62": 54, "63": 54, "64": 54, "65": [36, 110], "69": 114, "713": [32, 110], "7183": 46, "733": [32, 110], "75": [75, 96], "7717": 0, "7750ca3559e5b8e1f44210283368fc16": [109, 110], "7793": [98, 110], "7802": [98, 110], "8": [75, 80], "8272": 0, "9": 93, "A": [0, 1, 2, 3, 24, 25, 31, 32, 33, 36, 40, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 102, 103, 110, 112, 113, 114, 115], "AT": 67, "As": [0, 39, 65], "By": [112, 114], "For": [1, 2, 26, 31, 66, 71, 113, 115], "If": [25, 36, 37, 112, 113], "In": [0, 1, 2, 46, 58, 65, 66, 69, 98, 108, 109, 110, 113], "It": [31, 113, 115], "No": 85, "One": 44, "The": [0, 1, 2, 8, 18, 22, 25, 32, 35, 36, 37, 38, 46, 53, 55, 59, 65, 66, 67, 69, 70, 82, 83, 85, 92, 108, 110, 112, 113, 114, 115], "There": [1, 114, 115], "These": [67, 112, 113], "To": [26, 31, 112, 113], "_": [31, 108], "__getattr__": 31, "__init__": 39, "_cl": 31, "_i": [58, 108], "_instanc": 39, "_lrschedul": 102, "_q": 108, "_x": 19, "aaa": 54, "aac": 54, "aag": 54, "aat": 54, "aatt": 2, "ab": 115, "abc": [14, 18, 21, 24, 25, 28, 29, 30, 52, 53, 54, 62, 70, 71, 75, 76, 79, 86, 89], "abov": [2, 50, 70, 113], "absolut": 100, "abstract": [1, 14, 18, 20, 21, 23, 24, 25, 28, 29, 30, 33, 34, 35, 40, 42, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 86, 89, 93, 100, 102, 103, 106, 108], "abstractclockmodel": 52, "abstractcoalescentdistribut": 53, "abstractcoalescentmodel": [53, 83], "abstractdatatyp": 54, "abstractmethod": [18, 20, 30, 53, 54, 62, 71, 86], "abstractparamet": [20, 22, 23, 24, 25, 28, 32, 33, 34, 35, 36, 37, 42, 45, 46, 47, 50, 51, 52, 53, 57, 58, 59, 60, 62, 64, 65, 67, 71, 72, 75, 80, 89, 90, 93, 95, 108], "abstractsubstitutionmodel": 62, "abstracttreemodel": 71, "ac": 67, "aca": 54, "acc": 54, "accept": [75, 80, 81, 83, 86], "acceptance_prob": [75, 80, 81, 86], "access": 1, "account": 67, "accuraci": 115, "acdefghiklmnpqrstvwybzx": 54, "acg": 54, "acgt": 2, "acgtukmrswybdhvn": 54, "acid": [66, 111], "across": [0, 2, 111, 113, 114], "act": 54, "actt": 2, "ad": [0, 2], "adapt": [78, 80, 81, 83, 96, 100], "adapt_base_window": 81, "adapt_init_buff": 81, "adapt_term_buff": 81, "adaptable_paramet": [80, 83, 86], "adaptivesteps": 75, "adaptor": [75, 80, 81], "add": 99, "add_birth_death": 6, "add_coalesc": 6, "add_model_listen": 24, "add_parameter_listen": [18, 24, 25, 59], "add_sampl": 99, "addit": [2, 23, 59, 85, 90, 95, 113], "addition": 39, "adjac": 58, "adji": 106, "adjust": 114, "advanc": [109, 110], "advantag": 114, "advi": [0, 1, 8, 111, 114], "ae": 0, "after": [50, 66, 70], "ag": 67, "aga": 54, "agc": 54, "agg": 54, "agt": 54, "aim": 0, "ajust": 113, "aki": [45, 110], "akihiko": [32, 110], "al": [36, 47], "algorithm": [0, 81, 85, 100, 112, 113, 114, 115], "align": [2, 6, 55, 56, 61, 66, 67, 113, 114], "aliv": [50, 51], "all": [25, 31, 46, 67, 100], "allclos": 46, "alloc": [18, 39], "allow": [1, 2, 66, 113, 114], "allow_nan": [26, 31], "along": [66, 113], "alongsid": 0, "alpha": [32, 37, 47, 53, 64, 109], "alpha_i": [46, 108], "alreadi": 113, "also": [0, 1, 31, 32, 66, 113], "altern": 31, "alternativeattributeerror": 31, "alwai": 113, "am": 19, "ambigu": 54, "amino": [66, 111], "amino_acid": [54, 66], "amino_acids_ambiguity_st": 54, "amino_acids_st": 54, "aminoaciddatatyp": 54, "amount": [59, 66], "an": [0, 1, 2, 14, 19, 20, 21, 25, 28, 29, 30, 31, 39, 47, 50, 53, 54, 65, 68, 70, 75, 77, 79, 80, 85, 86, 113, 114], "analys": 112, "analysi": [2, 32, 33, 110], "analyt": 0, "andrew": [108, 110], "ani": [1, 2, 9, 20, 23, 24, 25, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 93, 100, 102, 103, 106, 108, 109, 111], "anoth": [1, 25, 26, 31, 66, 67], "appear": [39, 44, 50, 51, 53, 67, 113], "appli": 1, "applic": [46, 58, 69], "apply_affine_transform": 3, "apply_exp_transform": 3, "apply_flow": [90, 93], "apply_sigmoid_transform": 3, "apply_simplex_transform": 3, "apply_transforms_for_fullrank": 3, "approach": 113, "appropri": [111, 113], "approxim": [69, 108], "apr": [108, 110], "ar": [0, 1, 3, 24, 25, 32, 33, 34, 35, 36, 39, 40, 42, 44, 50, 51, 53, 65, 66, 67, 70, 71, 76, 89, 90, 92, 93, 110, 113, 114], "arang": 25, "arbitrari": [26, 31], "archiveprefix": 115, "arg": [3, 4, 6, 7, 10, 11, 12, 13, 14, 18, 23, 24, 25, 31, 33, 39, 44, 50, 51, 53, 60, 90, 93, 95, 100, 102], "arg_constraint": [39, 44, 50, 51, 53], "argmax": 98, "argpars": [4, 6], "argparse_util": 8, "argsort": [98, 110], "argument": [4, 6, 25, 35, 39, 44, 50, 51, 53, 85, 114], "arindam": [108, 110], "around": 56, "arrai": [26, 31, 65], "artifici": [108, 110], "arxiv": [0, 93, 115], "as_newick": 71, "as_tensor": 31, "assess": [0, 115], "assign": 25, "associ": [1, 2, 65, 109, 110, 113], "assum": [67, 113], "ata": 54, "attribut": [19, 23, 25, 32, 35, 36, 37, 45, 47, 49, 68, 71, 72, 83, 85, 109], "attribute_pattern": 55, "attributeerror": 31, "attributepattern": 49, "author": 115, "autograd": 25, "automat": [0, 108, 110, 111, 114, 115], "autoregress": 93, "avail": [1, 112, 114], "averag": [67, 75, 96], "awar": [36, 37], "ax": 114, "ayesian": [47, 110], "b": [2, 32, 46, 47, 50, 51, 56, 58, 67, 70, 92, 110], "ba1308": [32, 110], "backward": 67, "balanc": 67, "banerje": [108, 110], "base": [1, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 92, 93, 95, 100, 102, 103, 106, 108, 109, 110, 114], "base_dist": 93, "base_window": 81, "baseconverg": 100, "batch": [34, 35, 39, 40, 42, 53, 70, 90, 93], "batch_norm": 93, "batch_shap": [34, 35, 39, 40, 42, 90, 93], "batch_siz": [39, 92], "batchnorm": 93, "bayesian": [0, 32, 33, 36, 110], "bayesian_bridg": 38, "bayesianbridg": 32, "bdsk": 55, "bdskmodel": 50, "bdsky": 111, "beast": [113, 114], "becom": [50, 66], "been": 113, "begin": [65, 66, 67], "being": [50, 66], "below": [1, 2, 113], "benchmark": 115, "bennett": [36, 110], "bernoulli": 31, "beta": [36, 37, 53, 64, 67, 93], "beta_": 36, "beta_1": 36, "beta_n": 36, "between": [31, 50, 51, 66, 67, 100], "bia": [46, 92], "bias": [67, 114], "bibtex": 115, "biek": [36, 110], "biject": [46, 58, 69], "bio": 115, "biologi": [0, 36, 47, 110], "birth": [50, 51, 111], "birth_death": 55, "birth_death_id": 6, "birthdeath": 51, "birthdeathmodel": 51, "bito": 0, "bject": 113, "blei": 106, "block": [24, 49, 52, 53, 56, 60, 61, 62, 63, 64, 65, 71, 72, 83, 113, 115], "bmatrix": [65, 66, 67], "bmc": 0, "boldsymbol": 36, "bookkeep": 113, "bool": [18, 25, 27, 36, 37, 50, 51, 65, 75, 80, 81, 83, 85, 86, 98, 100, 108], "boolean": 113, "both": [112, 113], "bound": [0, 71, 106, 108, 109], "bousso": 106, "bracket": 113, "branch": [1, 2, 47, 50, 66, 67, 70, 71, 110, 111, 114, 115], "branch_count": 52, "branch_length": [2, 62, 65, 67, 71], "branch_lengths_id": 71, "branch_lengths_need_upd": 71, "branch_model": [2, 6, 55, 57, 70], "branch_model_id": [6, 16], "branchmodel": [2, 52, 57, 70, 114], "bridg": [32, 110], "bridge_d": 32, "broadcast": 39, "bruce": [47, 110], "build": [24, 49, 52, 60, 61, 62, 63, 64, 65, 71, 72, 115], "build_advi": 3, "build_align": 6, "build_hmc": 7, "build_mcmc": 12, "build_optim": 11, "built": 113, "c": [0, 2, 19, 47, 56, 66, 67, 69, 114], "c_i": 53, "ca": 67, "cach": [24, 53, 70, 76, 89], "cache_s": [46, 58, 69], "calcul": [0, 1, 2, 44, 59, 66, 67, 70, 71, 73, 99, 100, 108], "calculate_f3x4": 48, "calculate_f3x4_from_nucleotid": 48, "calculate_frequ": 48, "calculate_frequencies_per_codon_posit": 48, "calculate_kappa": 48, "calculate_substitut": 48, "calculate_treelikelihood": 70, "calculate_treelikelihood_discret": 70, "calculate_treelikelihood_discrete_resc": 70, "calculate_treelikelihood_discrete_saf": 70, "calculate_treelikelihood_tip_states_discret": 70, "calculate_treelikelihood_tip_states_discrete_resc": 70, "calculate_ts_tv": 48, "calculate_with_tip_parti": 70, "calculate_with_tip_st": 70, "call": [1, 25, 26, 31, 39, 66, 69, 113], "callabl": [1, 20, 24, 25, 53, 70, 76, 89], "callablemodel": [23, 24, 32, 33, 35, 36, 37, 40, 45, 47, 50, 51, 53, 57, 59, 70, 71, 76, 77, 80, 85, 89, 95, 100, 103, 106, 108, 109], "callableobject": 23, "can": [0, 1, 2, 4, 23, 24, 25, 32, 49, 52, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 90, 95, 112, 113, 114], "canadian": [33, 110], "cantor": [66, 67], "carlo": [83, 85, 108, 111, 114, 115], "case": [1, 24, 53, 65, 66, 67, 70, 76, 89, 113, 115], "cash": 6, "categori": [60, 70, 114], "catparamet": 25, "cc": [109, 110], "cdot": 65, "central": 1, "cg": 67, "chain": [33, 66, 83, 85, 110, 111, 114, 115], "chang": [1, 2, 24, 49, 52, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72], "charact": 66, "character": 67, "check": [1, 39, 100], "check_argu": 6, "check_circular": [26, 31], "checkpoint": [77, 85, 103], "checkpoint_al": 103, "checkpoint_frequ": [77, 85, 103], "cheng": 37, "chi": 107, "child": 69, "children": 56, "choic": [4, 6], "choleski": 3, "chosen": 66, "christiaan": 115, "cj": 0, "clade": [50, 51], "class": [1, 2, 113], "classmethod": [20, 23, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109], "classproperti": 19, "classproperty_decor": 22, "clear": 113, "cli": [74, 112, 113, 114], "clock": [0, 57, 111], "clock_model": [57, 70], "clone": [25, 112, 115], "close": 23, "co": 99, "coalesc": [0, 13, 36, 55, 83, 110, 111], "coalescent_piecewis": 6, "code": [1, 54, 75, 81, 93, 96, 100, 113], "codomain": 46, "codon": [54, 66, 111], "codon_triplet": 54, "codondatatyp": [54, 64], "coeffici": 36, "col": 114, "collect": [0, 24, 25, 48, 53, 68, 70, 76, 89, 113], "column": [65, 67, 114], "com": [31, 93, 112, 115], "combin": 2, "command": [8, 112, 113, 114], "comment": [31, 113], "common": [1, 31, 113], "commonli": 114, "compact": 113, "compat": [71, 72, 114], "complet": [25, 35], "complex": [24, 49, 52, 60, 61, 62, 63, 64, 65, 71, 72], "compon": 108, "compos": [2, 65], "composit": 67, "compound": [47, 111], "compoundgammadirichletprior": 47, "comprehens": 115, "compress": [2, 61], "compress_align": 61, "compress_alignment_st": 61, "comput": [0, 1, 18, 25, 31, 46, 58, 66, 67, 69, 100], "compute_tips_parti": [49, 61], "compute_tips_st": [49, 61], "concaten": 25, "concentr": [3, 39, 47, 113], "cond_i": 93, "cond_label_s": 93, "condit": [50, 51, 67], "confer": [98, 108, 110], "configur": [8, 112], "conflict": 31, "consid": [1, 66, 113], "consist": [0, 113], "constant": [0, 6, 50, 51, 53, 66, 111, 113], "constant_term": 37, "constantcoalesc": 53, "constantcoalescentintegr": 53, "constantcoalescentintegratedmodel": 53, "constantcoalescentmodel": 53, "constantsitemodel": [2, 60], "constrain": [1, 17], "constrainst_prefix": 17, "constraint": [1, 17, 39, 44, 50, 51, 53], "constraint_prefix": 17, "construct": 25, "contain": [1, 2, 3, 8, 9, 22, 23, 24, 25, 30, 32, 33, 34, 35, 36, 37, 38, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 113, 114], "containerlogg": 23, "context": 66, "continu": [31, 33, 66, 98, 110], "converg": [32, 101, 103, 110], "convers": [18, 24, 25, 33, 60, 90, 95], "convert": [1, 50], "convert_date_to_r": 17, "convert_samples_to_nexu": 56, "convexcombinationtransform": 46, "copy_": 25, "core": [0, 32, 33, 34, 35, 36, 37, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 85, 86, 87, 88, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109, 113], "correl": 111, "correspond": [17, 31, 65, 66, 71, 72, 88, 113, 114, 115], "could": [26, 31], "count": 56, "coupl": 93, "covari": [3, 36, 42, 110], "covariance_matrix": 42, "cpu": [18, 24, 25, 33, 49, 60, 61, 65, 67, 71, 90, 95], "creat": [3, 8, 14, 20, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109, 113], "create_advi": 3, "create_align": 6, "create_bd_prior": 6, "create_bdsk": 6, "create_bdsk_prior": 6, "create_birth_death": 6, "create_block_updating_oper": 13, "create_branch_model": 6, "create_clock_horseshoe_prior": 16, "create_clock_prior": 6, "create_coales": 6, "create_constant_bd_prior": 6, "create_constant_birth_death": 6, "create_data_typ": 6, "create_evolution_joint": 6, "create_evolution_pars": 6, "create_evolution_prior": 6, "create_flexible_vari": 3, "create_fullrank": 3, "create_fullrank_from_meanfield": 3, "create_gamma_distribut": 3, "create_general_data_typ": 6, "create_hmc": 7, "create_hmc_oper": 7, "create_hmc_pars": 7, "create_jacobian": 9, "create_logg": [3, 10, 11], "create_map_pars": 11, "create_mcmc": 12, "create_mcmc_pars": 12, "create_meanfield": 3, "create_normal_distribut": 3, "create_one_on_x_prior": 16, "create_optim": 11, "create_poisson_evolution_joint": 6, "create_poisson_tree_likelihood": 6, "create_rate_matrix": 65, "create_realnp_distribut": 3, "create_realnvp": 3, "create_sampl": 3, "create_scaler_oper": 13, "create_show_pars": 5, "create_site_model": 6, "create_site_model_srd06_mu": 6, "create_site_pattern": 6, "create_sliding_window_oper": 13, "create_stan_windowed_adapt": 7, "create_substitution_model": 6, "create_substitution_model_prior": 6, "create_taxa": 6, "create_time_tree_prior": 6, "create_tree_likelihood": 6, "create_tree_likelihood_gener": 6, "create_tree_likelihood_singl": 6, "create_tree_logg": 11, "create_tree_model": 6, "create_tril": 3, "create_ucln_prior": 6, "create_variational_model": 3, "create_variational_pars": 3, "create_weibull_distribut": 3, "creation": 34, "csv": [23, 114], "ct": 67, "ctmc": [33, 111, 114], "ctmc_scale": 38, "ctmcscale": 33, "cubo": 106, "cuda": [18, 24, 25, 33, 49, 60, 61, 65, 67, 71, 90, 95], "cumsumexptransform": 46, "cumsumsoftplustransform": 46, "cumsumtransform": 46, "curli": 113, "curr": 100, "curran": [109, 110], "current": [85, 100, 115], "custom": 31, "cusuh": [108, 110], "cwclflf": 54, "d": [25, 37, 53, 67, 98, 108, 109, 110, 112], "dai": 17, "darl": 0, "data": [0, 14, 20, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109, 113, 114], "data_typ": [2, 6, 48, 49, 61, 64, 65], "dataset": [0, 114, 115], "datatyp": [2, 48, 49, 55, 64, 65], "date": [2, 56, 71], "date_format": 17, "david": 106, "dct": 31, "death": [50, 51, 111], "debug": 31, "decod": 31, "decomposit": 3, "decor": 19, "def": [19, 26, 31], "default": [25, 26, 31, 36, 37, 71, 83, 85, 100, 109, 114], "defin": [1, 2, 17, 19, 65, 66, 67, 108, 113], "definit": 2, "del": 19, "delet": 19, "delta": [50, 75], "delta_elbo": 100, "delta_elbo_av": 100, "delta_elbo_m": 100, "delx": 19, "dendropi": [73, 114], "densiti": [34, 35, 40, 42, 44, 50, 51, 53, 90, 93, 114], "depend": [0, 66], "deriv": [1, 17, 39], "desc": [6, 89], "descend": [50, 51], "describ": [1, 2, 66, 113], "design": [2, 94, 115], "desir": [25, 39], "det": [46, 58, 69], "detach": 25, "detail": [67, 81], "detect": 70, "determin": [25, 46, 58, 69], "determinist": 34, "deterministic_norm": 38, "deterministicnorm": 34, "dev": [75, 96, 100], "develop": 115, "deviat": [3, 41, 43], "devic": [18, 24, 25, 31, 33, 49, 60, 61, 65, 67, 71, 89, 90, 95], "df": 114, "diagnost": 100, "diagon": [3, 25, 46, 65, 66, 67], "dic": [20, 23, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109], "dict": [3, 6, 9, 10, 17, 20, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 93, 100, 102, 103, 106, 108, 109], "dict_def": 9, "dict_paramet": 35, "dictionari": [9, 20, 23, 25, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109, 113], "dieng": 106, "differ": [0, 1, 2, 58, 66, 69, 100, 114, 115], "differencenodeheighttransform": 69, "differenti": [0, 108, 110, 111, 114, 115], "difficult": 113, "dillon": [108, 110], "dim": [18, 25, 98], "dimens": [18, 25, 39, 77, 98, 108], "dimension": 108, "diment": [3, 65], "directli": 113, "directori": 114, "dirichlet": [47, 111, 113, 114], "dirichletoper": 86, "disabl": 83, "disable_adapt": 83, "disable_plugin": 15, "discret": [31, 111, 114], "displai": 112, "dist": 35, "distal": 71, "distanc": 59, "distribt": 53, "distribut": [1, 3, 6, 25, 31, 50, 51, 53, 58, 67, 69, 74, 83, 85, 87, 90, 93, 103, 106, 108, 109, 111, 113, 114], "distribution_paramet": 35, "distribution_typ": 6, "distributionmodel": [34, 35, 40, 42, 87, 90, 93, 106, 108, 109], "diverg": [0, 106, 108, 109, 110], "dna": [66, 114], "do": 113, "doc": [19, 25, 35, 81], "docstr": 19, "document": 115, "doe": [1, 39, 100], "doi": [0, 32, 36, 45, 110], "domain": [1, 46], "done": 114, "dot": [65, 92, 113], "doubl": 100, "draw": 87, "drawn": [34, 114], "drummond": 0, "dtype": [18, 24, 25, 31, 33, 53, 60, 89, 90, 95], "dual": [75, 96], "dual_averag": 97, "dualaverag": 96, "dualaveragingsteps": [75, 81], "due": 114, "dumper": 23, "dure": [34, 81], "dustin": 106, "dx": [46, 58, 69], "dy": [46, 58, 69], "dynam": [36, 110], "e": [1, 31, 36, 37, 50, 51, 53, 66, 67, 70, 108, 109, 110, 111, 113], "each": [0, 2, 39, 44, 50, 51, 53, 65, 66, 67, 113, 114], "earlier": [1, 113], "easi": [19, 113], "easier": [0, 113], "easili": 114, "ec": 0, "edg": 57, "edge_length": 57, "editor": [108, 109, 110], "effect": [36, 50], "effici": 0, "effort": [50, 51], "eigen": [62, 65], "eisenschlo": [98, 110], "either": [4, 112, 114], "ejs1337si": [45, 110], "elaps": [33, 110], "elbo": [0, 100, 108], "elbo_best": 100, "elbo_diff": 100, "elbo_prev": 100, "electron": [45, 110], "element": [3, 65, 66, 67], "ellipsi": [25, 54], "els": [26, 31], "elsewher": 25, "empiricalsubstitutionmodel": [63, 65], "emul": 25, "encapsul": 1, "enclos": 113, "encod": [26, 31, 54], "end": [65, 66, 67], "energy_funct": 91, "energyfunctionmodel": 89, "engin": 6, "ensur": [66, 67, 113], "ensure_ascii": [26, 31], "entri": 67, "entropi": [34, 35, 40, 42, 90, 93, 108], "enum": 17, "enumer": 17, "ep": [34, 71, 93], "epidemiologi": 50, "epidemiology_to_birth_death": 50, "eprint": 115, "equal": [2, 31, 67, 83], "equilibrium": [1, 65, 66, 67, 113, 114], "equival": [1, 25, 108], "error": 30, "essenti": 66, "establish": [30, 77], "estim": [0, 66, 93, 99, 106, 108, 109, 113, 114], "et": [36, 47], "etc": [65, 67], "evad099": 0, "evalu": [0, 34, 35, 40, 42, 44, 50, 51, 53, 90, 93, 100, 115], "even": 113, "event": [18, 20, 24, 25, 28, 40, 47, 49, 50, 52, 53, 57, 59, 60, 61, 64, 65, 67, 70, 71, 76, 80, 106, 108, 109], "event_shap": [34, 35, 42], "everi": [1, 2, 23, 77, 85, 88, 100, 113], "evid": [0, 108], "evolut": [0, 2, 8, 23, 33, 36, 37, 47, 74, 83, 110, 113], "evolutionari": [0, 55, 66], "evolv": 66, "exactli": 113, "exampl": [1, 2, 25, 26, 31, 32, 35, 36, 37, 43, 45, 46, 56, 66, 71, 98, 113, 114], "except": 26, "exchang": 67, "exclus": 108, "exist": [19, 39, 113], "exit": 31, "exp": [35, 46], "exp_dic": 35, "exp_transform": 25, "expand": 39, "expand_pl": 31, "expect": [1, 65, 67, 111], "experi": 115, "explor": [112, 114], "expon": 32, "exponenti": [0, 6, 35, 46, 66, 111, 114], "exponentialcoalesc": 53, "exponentialcoalescentmodel": 53, "exptransform": 25, "extend": [1, 2, 26, 31, 109], "extens": [26, 31], "extern": 47, "extract": 56, "extract_taxa": 56, "extract_tensors_and_paramet": 88, "ey": 25, "eye_lik": 25, "f": [23, 31, 65, 67, 92], "fa": [0, 114], "factor": [67, 92], "factori": [71, 72], "faketreemodel": 53, "fals": [18, 25, 26, 27, 31, 49, 50, 53, 59, 61, 70, 71, 83, 85, 93, 98, 103, 108], "fast": [0, 81], "fasta": 114, "fdel": 19, "featur": 115, "ferreira": [33, 110], "few": 114, "fget": 19, "field": [36, 37, 83], "fig": 114, "figur": 0, "file": [1, 8, 23, 27, 56, 85, 109, 110, 112, 115], "file_nam": [6, 23, 27, 56, 100], "filenam": 48, "fill": 25, "final": 81, "find_reasonable_step_s": [75, 77], "find_step_s": 77, "fire_model_chang": 24, "fire_parameter_chang": [18, 25, 59], "first": [2, 39, 65, 67, 70], "flag": [18, 25], "flat": [113, 114], "flatten": 3, "flexibl": 115, "flexibletimetreemodel": 72, "float": [4, 25, 26, 31, 32, 37, 39, 41, 43, 45, 47, 53, 54, 59, 69, 70, 71, 72, 75, 79, 80, 83, 86, 98, 100, 109], "float64": 31, "flow": [91, 92, 93], "flowsequenti": 93, "flua": 114, "follow": [1, 25, 26, 31, 67, 94, 112, 113, 114], "force_list": 31, "form": [106, 109], "format": [56, 71, 72, 114], "forward": [67, 90, 92, 93], "four": [2, 67], "fourment": [0, 115], "fourment2024torchtre": 115, "fp": 56, "frac": [36, 37, 46, 50, 53, 58, 67, 108], "frame": 31, "framework": [0, 22, 74], "frederick": 115, "freq": [48, 70], "frequenc": [1, 2, 23, 62, 64, 65, 66, 67, 70, 85, 113, 114], "from": [0, 1, 4, 17, 20, 24, 25, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 93, 96, 100, 102, 103, 106, 108, 109, 113, 114], "from_json": [20, 23, 25, 30, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109, 113], "from_json_saf": 30, "fs08": 110, "fset": 19, "fukumizu": [108, 110], "full": [1, 2, 25, 85, 113], "full_lik": 25, "full_nam": 31, "function": [0, 19, 34, 35, 36, 40, 42, 44, 46, 51, 65, 69, 90, 93, 100, 103, 108, 111], "further": [1, 81], "futur": 113, "g": [1, 31, 32, 65, 66, 110, 111, 113], "ga": 67, "gallagh": [108, 110], "gallowai": 0, "gamma": [37, 39, 45, 47, 53, 75, 83, 96, 111, 114], "gangavarapu": 0, "garnett": [109, 110], "gather_paramet": 3, "gaussian": [36, 83], "gaut": 111, "gbe": 0, "gc": 67, "gener": [17, 34, 35, 40, 42, 46, 53, 58, 63, 66, 67, 69, 90, 93, 112, 113], "generaldatatyp": 54, "generaljc69": 65, "generalnodeheighttransform": 69, "generalnonsymmetricsubstitutionmodel": 65, "generalsymmetricsubstitutionmodel": [65, 111], "genetic_cod": 54, "genetic_code_nam": 54, "genetic_code_t": 54, "genom": 0, "geograph": 2, "geq": 46, "get": [19, 48, 56], "get_class": 31, "get_engin": 6, "getattr": 31, "getter": [18, 25, 59], "getx": 19, "gibb": [32, 110], "gill": [36, 110], "git": [112, 115], "github": [93, 112, 115], "give": [50, 51], "given": [2, 31, 44, 46, 58, 65, 66, 67, 69], "glb": 110, "global": [32, 45], "global_scal": 45, "gmrf": [13, 37, 38, 83], "gmrf_block_upd": 84, "gmrf_dic": [36, 37], "gmrf_integr": 38, "gmrfcovari": [36, 83], "gmrfgammaintegr": 37, "gmrfpiecewisecoalescentblockupdatingoper": 83, "go": 114, "goal": 66, "gobal_scal": 45, "govern": 66, "grad": 25, "grad_fn": 25, "gradient": [0, 18, 25, 69, 83, 108], "graph": [25, 31], "grid": [53, 111], "group_map": 3, "growth": [53, 111], "gt": 67, "gtr": [1, 2, 65, 66, 67, 111, 113], "gtr_frequenc": [1, 2, 113], "gtr_frequencies_unconstrain": 1, "gtr_model": 113, "gtr_prior": 113, "gtr_rate": [2, 113], "guarante": [32, 110], "guyon": [109, 110], "h": 0, "ha": [50, 51, 67, 98, 114], "ham": [108, 110], "hamiltonian": [75, 77, 78, 111, 114, 115], "handle_model_chang": [20, 24, 25, 28, 32, 34, 45, 49, 51, 52, 59, 60, 61, 64, 65, 67, 71, 89], "handle_parameter_chang": [20, 24, 25, 28, 40, 47, 49, 52, 57, 59, 60, 61, 64, 65, 67, 70, 71, 76, 80, 106, 108, 109], "happi": 114, "has_rsampl": [39, 53], "hasegawa": [67, 114], "have": [2, 113], "height": [36, 37, 53, 56, 59, 69, 71, 72, 73, 83, 114], "heights_from_branch_length": 71, "heights_need_upd": 71, "heights_to_branch_length": 71, "help": [112, 114], "helper": [14, 28, 29], "here": 114, "heterochorn": 56, "heterochron": [0, 71], "heterogen": [2, 111, 114], "hidden_s": 93, "hierarch": 113, "histori": 66, "hky": [65, 67, 111, 114], "hmc": [1, 8, 82, 111, 114], "hmcoper": 80, "holm": 0, "horsesho": [45, 110], "how": [66, 113, 114], "howev": 1, "html": [25, 35, 81, 108, 110], "http": [25, 26, 31, 35, 81, 93, 108, 109, 110, 112, 115], "human": 113, "hyperparamet": [113, 114], "i": [0, 1, 2, 3, 6, 18, 19, 24, 25, 31, 32, 36, 37, 39, 45, 46, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 76, 83, 85, 89, 92, 100, 108, 109, 110, 111, 113, 114, 115], "id": [1, 2, 9, 17, 20, 21, 23, 25, 30, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 93, 95, 100, 102, 103, 105, 106, 108, 109, 113], "id_": [3, 6, 7, 11, 13, 16, 18, 20, 21, 24, 25, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 79, 80, 83, 85, 86, 87, 89, 90, 93, 95, 103, 106, 108, 109], "idea": 37, "identifi": [18, 22, 23, 24, 25, 32, 35, 36, 37, 45, 47, 48, 54, 68, 75, 79, 80, 83, 85, 86, 87, 103, 106, 109, 110, 113], "idref": 113, "idx": 31, "ignor": [1, 31, 36, 37, 113], "ii": 67, "ij": [65, 67], "ik": [65, 67], "immedi": [50, 66], "implement": [0, 1, 25, 26, 31, 32, 33, 65, 83, 85, 91, 92, 113, 114, 115], "import": [1, 6, 108, 113, 114], "improp": 44, "inc": [109, 110], "includ": [0, 25, 35, 113, 115], "inclus": 108, "increas": 98, "indent": [26, 31], "independ": 40, "index": [18, 20, 24, 25, 28, 32, 34, 40, 45, 47, 49, 51, 52, 57, 59, 60, 61, 64, 65, 67, 70, 71, 76, 80, 89, 106, 108, 109], "index_str": 31, "indic": [6, 25, 61, 65, 98], "indices_postord": 71, "individu": 50, "inf": [4, 70], "infecti": 50, "infer": [0, 1, 2, 25, 46, 47, 74, 106, 108, 109, 110, 112, 114, 115], "infin": 31, "influenti": [47, 110], "influenza": [0, 114], "inform": [2, 45, 109, 110, 112], "infti": 53, "ing": 19, "inherit": [1, 14, 20, 24, 28, 29, 46, 53, 70, 76, 88, 89], "init_buff": 81, "initi": [1, 23, 31, 81], "initialize_dates_from_taxa": 71, "innermost": 98, "inplac": 114, "input": [23, 46, 58, 69, 92, 98, 115], "input_fil": 17, "input_s": [92, 93], "ins": 0, "insid": [1, 113], "instanc": [25, 28, 39, 59, 85, 90, 93, 113], "instanci": [35, 88], "instantan": 66, "instanti": 113, "instead": [108, 113], "instrument": 108, "int": [4, 17, 18, 23, 24, 25, 26, 31, 33, 37, 48, 49, 54, 60, 61, 65, 67, 71, 75, 77, 79, 80, 81, 85, 86, 87, 90, 93, 95, 98, 100, 103, 109], "int_0": 53, "integ": [25, 113], "integr": [0, 37, 53, 75, 77, 78, 80], "intellig": [108, 110], "interact": 31, "interest": 85, "interfac": [8, 18, 21, 23, 30, 77, 112], "intern": [47, 70, 71, 72, 98, 108, 110], "internal_height": [71, 72], "internal_heights_id": [71, 72], "interv": [53, 81], "inv": 46, "invari": [2, 60, 111], "invariantsitemodel": [2, 60], "invers": [39, 53, 93], "inverse_cdf": 60, "inverse_gamma": 38, "inverse_mass_matrix": [75, 76], "inversegamma": 39, "invert": [25, 46], "involv": 1, "io": 55, "ip": 36, "is_float": 6, "isinst": [25, 32, 35, 36, 37, 45], "isol": 0, "iter": [0, 26, 31, 65, 67, 77, 81, 85, 100, 103, 113], "its": [1, 2, 31, 66, 113], "iv": [0, 115], "j": [46, 65, 67, 69, 115], "jacobian": [8, 25, 46, 58, 69, 83], "jame": [32, 110], "jan": [45, 110], "java": 113, "jax": 0, "jc69": [67, 111], "jeffrei": 0, "jess": [32, 110], "jg": 0, "ji": [0, 67, 115], "john": 106, "joint": [3, 7, 11, 12, 13, 34, 40, 76, 77, 80, 85, 106, 108, 109], "joint_distribut": 38, "jointdistributionmodel": 40, "joshua": [108, 110], "journal": [32, 33, 45, 110], "json": [1, 2, 8, 23, 25, 26, 27, 30, 31, 32, 35, 36, 37, 45, 47, 59, 71, 72, 77, 83, 85, 90, 95, 109, 112, 114], "json_factori": [25, 32, 33, 34, 35, 45, 52, 71, 72], "json_object": [3, 17, 31], "jsondecod": 31, "jsonencod": [26, 31], "jsonparseerror": [30, 31], "jsonserializ": [21, 23, 30, 77, 100, 102], "jth": 69, "juho": [45, 110], "juke": [66, 67], "julian": [98, 110], "k": [0, 46, 65, 67, 69, 70, 98, 108], "kamenbliznashki": 93, "kappa": [64, 67, 75, 96, 114], "kdeplot": 114, "keep": 113, "keep_branch_length": 71, "keepdim": 98, "kei": [1, 2, 17, 20, 23, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 93, 95, 100, 102, 103, 106, 108, 109, 113], "kenji": [108, 110], "kernel": 114, "kevin": [108, 110], "keyword": [85, 113], "kind": 1, "kinetic_energi": 76, "kishino": [67, 114], "kl": 107, "klpq": 108, "klpqimport": 108, "klqp": 108, "knknttttrsrsiimiqhqhpppprrrrllllededaaaaggggvvvv": 54, "kullback": 108, "kwarg": [18, 23, 24, 25, 31, 33, 35, 60, 71, 72, 75, 77, 80, 83, 85, 86, 90, 95, 100, 102, 103], "l": 108, "lambda": [50, 51], "lambda_": [50, 51], "languag": 0, "latest": 115, "layer": [90, 93], "ldot": 36, "leapfrogintegr": [75, 79], "learn": [75, 81, 98, 108, 110], "learnabl": 92, "least": [2, 50, 51], "leav": 70, "lee": [109, 110], "left": [37, 53, 108], "leibler": 108, "lemei": [36, 110], "length": [1, 4, 47, 57, 66, 67, 71, 110, 111, 114], "length_of_tensor_in_dict_paramet": 17, "leq": 65, "let": [26, 31, 36, 114], "level": 31, "leverag": 115, "lg": [63, 111], "li": [109, 110], "librari": [0, 114], "like": [2, 23, 26, 31, 66, 67, 112], "likelihood": [0, 1, 57, 66, 67, 70, 111, 115], "line": [8, 112, 113, 114], "lineag": [50, 51], "linear": [6, 36, 46, 73, 111], "linear_regress": 73, "linearmaskedcoupl": 93, "lineartransform": 46, "list": [1, 3, 4, 9, 10, 17, 18, 20, 23, 25, 26, 27, 28, 31, 34, 35, 36, 40, 42, 48, 56, 59, 61, 62, 63, 64, 65, 67, 70, 71, 72, 80, 85, 86, 87, 88, 90, 93, 103, 108, 109, 113, 114], "list_of_float": 4, "list_or_int": 4, "listen": [18, 20, 24, 25, 59], "listparamet": [75, 77, 80, 88, 103, 105], "listtensor": [88, 105], "load": [85, 113], "load_argu": [14, 15], "load_plugin": 15, "load_state_dict": [75, 79, 85, 86, 102, 103], "loc": [3, 34, 35, 42, 43, 45], "local": [32, 45], "local_scal": [32, 45], "locat": [2, 34, 43, 45, 114], "log": [1, 3, 23, 25, 34, 35, 40, 41, 42, 44, 46, 50, 51, 53, 58, 69, 70, 85, 87, 90, 93, 108], "log_abs_det_jacobian": [25, 46, 58, 69, 92], "log_gamma": 93, "log_gamma_one_half": 33, "log_norm": [31, 38], "log_p": [50, 51], "log_prob": [34, 35, 40, 42, 43, 44, 50, 51, 53, 90, 93], "log_q": [50, 51], "logdifferenceratetransform": 58, "logger": [3, 6, 8, 22, 77, 85, 87, 103], "loggerinterfac": [23, 87], "lognorm": [41, 114], "logsumexp": [69, 98], "logtransform": 46, "long": 67, "look": [9, 66, 113], "loos": [25, 94], "loss": [100, 103], "lower": [0, 17, 46, 65, 108], "lowercas": 113, "lp": 24, "lp_needs_upd": 24, "lr_schedul": 101, "lt16": 110, "luxburg": [109, 110], "m": [0, 19, 65, 109, 110, 114], "ma": 0, "macaulai": 115, "machin": [98, 108, 110, 113], "macrobenchmark": 0, "maf": 93, "mai": 115, "main": [5, 104, 112, 115], "make": [0, 19, 21, 30, 46, 54, 58, 67, 68, 69, 75, 77, 79, 80, 86], "make_unconstrain": 17, "manag": 19, "mandatori": [23, 25, 32, 35, 36, 37, 45, 47, 83, 85, 109], "mandev": [36, 110], "mani": 1, "manipul": 114, "manual": 81, "manual_se": 31, "map": [1, 8, 46, 48, 65, 111, 114], "marc": [32, 33, 36, 110, 115], "marco": [33, 110], "markov": [33, 36, 37, 83, 85, 110, 111, 114, 115], "mask": 93, "mass": [34, 35, 40, 42, 44, 50, 51, 53, 81, 90, 93], "mass_matrix": [75, 76, 80], "mass_matrix_adaptor": 81, "massmatrixadaptor": 75, "mat": 70, "match": 35, "math": [4, 97], "mathbb": [69, 108], "mathbf": 65, "mathcal": [43, 108], "mathieu": 115, "matplotlib": 114, "matric": [67, 70], "matrix": [1, 3, 46, 65, 67, 81, 98], "matsen": [0, 115], "matthew": 115, "max": [4, 69], "max_iter": 100, "maxim": [0, 66, 103, 108], "maximum": [98, 100, 111, 114, 115], "maximum_likelihood": 53, "mc": 81, "mcmc": [8, 53, 80, 82, 111, 114], "mcmcoper": [80, 83, 85, 86], "mean": [0, 36, 41, 42, 43, 45, 47, 99, 114], "measur": 36, "memori": [0, 18, 24, 25, 33, 39, 49, 60, 61, 65, 67, 71, 90, 95], "method": [0, 1, 20, 25, 26, 30, 31, 33, 34, 39, 40, 42, 48, 49, 50, 51, 52, 53, 54, 57, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 86, 89, 93, 98, 99, 100, 102, 103, 106, 108, 112, 113], "methodologi": [32, 110], "mg94": [64, 111], "mid": [36, 37, 53], "might": [2, 66], "min": 4, "minim": [106, 108], "misc": 115, "mit": [108, 110], "mitochondri": 54, "mixtur": [45, 108, 110], "mixture_d": 45, "mlr": [108, 110], "model": [0, 6, 9, 20, 22, 23, 25, 28, 32, 33, 34, 35, 36, 37, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 80, 83, 85, 87, 89, 95, 100, 103, 106, 108, 109, 110, 115], "modellisten": [20, 24, 28], "modifi": [19, 93, 113], "modul": [1, 8, 22, 82, 94, 97, 101, 107, 113], "modular": 2, "moduleparamet": 25, "mold": 54, "molecular": [47, 110, 111, 114], "momentum": [76, 77, 93], "monitor": [24, 49, 52, 60, 61, 62, 63, 64, 65, 71, 72], "monoton": 98, "mont": [83, 85, 108, 111, 114, 115], "month": 17, "more": [24, 49, 52, 60, 61, 62, 63, 64, 65, 71, 72, 113, 114], "morningstar": [108, 110], "morningstar21b": [108, 110], "most": [1, 66, 108, 113], "move": [1, 18, 24, 25, 33, 49, 60, 61, 65, 66, 67, 71, 90, 95], "mu": [43, 50, 51, 58, 60, 66, 75, 96], "mu_": 67, "multi": 108, "multipl": [20, 24, 53, 70, 76, 89, 113], "multivari": [42, 46], "multivariate_norm": 38, "multivariatenorm": 42, "mur12": 110, "murphi": [108, 110], "muse": 111, "must": [32, 35, 36, 37, 113], "mutat": 67, "mvh": 110, "mycoplasma": 54, "n": [36, 37, 43, 53, 70, 98, 106, 108, 110], "n_block": 93, "n_hidden": 93, "nabla": 108, "name": [1, 25, 28, 31, 35, 39, 44, 50, 51, 53, 54, 56, 85, 113], "nan": 31, "nasif": 0, "natur": 113, "need": [0, 18, 24, 25, 39, 44, 50, 51, 53, 70, 76, 89], "need_upd": [25, 59], "needs_upd": 60, "neg": 66, "neq": [65, 67], "nest": [111, 113], "nesterov": [75, 96], "net": 93, "net_paramet": 93, "neural": [109, 110], "neurip": [109, 110], "new": [1, 17, 19, 39, 113], "newick": [2, 56, 71, 72, 114], "newton_raphson": 83, "next": [0, 1], "nexu": [56, 114], "nf": 74, "nichola": [32, 110], "nishimura": [32, 110], "nn": [25, 46, 74, 90, 92, 93], "node": [25, 53, 56, 58, 69, 70, 71, 72], "node_height": [50, 51, 53, 71], "non": [0, 31, 50, 65], "non_synonym": 64, "none": [3, 6, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 93, 95, 96, 99, 100, 102, 103, 106, 108, 114], "noninfecti": 50, "nonsymmetricsubstitutionmodel": [62, 65], "norm": 62, "norm1": 43, "norm2": 43, "normal": [31, 34, 35, 38, 42, 45, 46, 65, 90, 91, 93, 108], "normal_d": 35, "normalizing_flow": 93, "normalizingflow": 90, "note": 1, "novel": 0, "ns23": 110, "nuc_freq": 48, "nucleotid": [54, 66, 111, 113], "nucleotide_ambiguity_st": 54, "nucleotide_st": 54, "nucleotidedatatyp": [2, 54], "null": [26, 31], "num_warmup": 81, "number": [1, 4, 25, 26, 31, 32, 50, 53, 59, 66, 70, 81, 85, 87, 100, 103, 106, 108, 109, 111, 113], "number_of_codon": 54, "numcoalev": 83, "numer": 114, "nyi": [109, 110], "o": [26, 31], "obj": [17, 20, 23, 24, 25, 26, 28, 31, 32, 34, 45, 49, 51, 52, 59, 60, 61, 64, 65, 67, 71, 89], "object": [2, 18, 19, 20, 21, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 93, 95, 100, 102, 103, 106, 107, 108, 109, 113], "object_hook": 31, "observ": [36, 50, 51, 66], "obtain": 114, "off": [65, 66, 67], "often": 66, "omega": 65, "onc": 114, "one": [2, 25, 32, 50, 51, 65, 66, 111, 113], "one_on_x": 38, "oneonx": 44, "ones": [19, 25, 113], "ones_d": 25, "ones_lik": 25, "onli": [25, 32, 46, 58, 66, 69], "onlin": [81, 99], "op": 74, "open": 113, "oper": [8, 25, 53, 78, 83, 84, 85, 98, 110], "optim": [1, 74, 111], "option": [2, 4, 6, 23, 25, 32, 35, 36, 37, 45, 83, 85, 87, 103, 109, 112], "order": [65, 67, 69, 106, 109, 113], "ordereddict": [93, 95], "ordereddicttyp": [95, 105], "org": [25, 26, 31, 35, 81, 115], "origin": [50, 51], "origin_is_root_edg": 50, "other": [0, 1, 20, 25, 26, 30, 31, 33, 34, 40, 42, 45, 48, 49, 50, 51, 52, 53, 54, 57, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 86, 89, 93, 100, 102, 103, 106, 108, 110, 113], "otherwis": [18, 25, 26, 31, 65, 113], "our": 115, "out": 113, "outermost": 113, "output": [27, 46, 56, 58, 69, 98, 100], "outsid": 31, "over": [0, 34, 35, 40, 42, 65, 66, 67, 90, 93, 113], "overrid": 39, "overwrit": [27, 103], "p": [36, 37, 53, 58, 66, 106, 108, 109, 110], "p0": 50, "p_dic": 25, "p_t": [62, 65, 67], "p_t_analyt": 67, "pack": 27, "pack_tensor": 27, "packag": [1, 22, 25, 35, 38, 55, 74, 82, 91, 94, 97, 101, 107, 114], "package_cont": 31, "package_nam": 31, "page": [32, 110], "pair": [31, 66, 113], "paislei": 106, "panacea": 0, "panda": 114, "paper": [93, 109, 110], "paper_fil": [109, 110], "paradox": [47, 110], "param": [3, 17, 20, 25, 77, 88], "param2": 25, "paramet": [0, 2, 3, 6, 7, 9, 10, 11, 12, 13, 17, 18, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 92, 93, 95, 98, 100, 102, 103, 106, 108, 109, 113, 114], "parameter": [2, 36, 37, 39, 41, 43, 46, 69], "parameter_encod": 22, "parameter_util": 22, "parameterencod": 26, "parameteriz": 38, "parameterlisten": [24, 25, 28, 80], "parameters_unr": [7, 12], "parametr": [0, 22, 24, 25, 39, 41, 43, 49, 52, 60, 61, 62, 63, 64, 65, 71, 72, 80, 88, 113], "paramter": 2, "parent": [31, 56], "pars": [30, 88, 113, 114], "parse_distribut": 6, "parse_taxa": 56, "parse_transl": 56, "parse_tre": [56, 71], "parser": [6, 113], "part": 0, "partial": [47, 54, 61, 70, 110], "particular": 66, "pass": [26, 31], "past": [36, 110], "path": [1, 3, 25, 27, 35, 56, 113], "pathwis": 108, "pattern": 2, "pd": 114, "pdf": [109, 110], "pe": 115, "pe20": 110, "peel": 70, "peerj": 0, "per": [53, 93, 111], "perform": [0, 18, 24, 25, 31, 33, 60, 90, 95, 115], "period": [66, 81], "permut": 98, "perspect": [108, 110], "phi": 108, "philipp": [36, 110], "phylogenet": [0, 1, 2, 47, 113, 114, 115], "phylogeographi": 111, "phylojax": 0, "phylostan": 0, "physher": 0, "pi": [36, 37], "pi_": 65, "pi_0": 65, "pi_1": 65, "pi_a": [65, 66, 67], "pi_c": [65, 67], "pi_g": [65, 67], "pi_i": 67, "pi_j": [65, 67], "pi_t": [65, 67], "piecewis": [6, 50, 111], "piecewiseconstantbirthdeath": 50, "piecewiseconstantcoalesc": 53, "piecewiseconstantcoalescentgrid": 53, "piecewiseconstantcoalescentgridmodel": 53, "piecewiseconstantcoalescentmodel": 53, "piecewiseexponentialcoalescentgrid": 53, "piecewiseexponentialcoalescentgridmodel": 53, "piecewiselinearcoalescentgrid": 53, "piecewiselinearcoalescentgridmodel": 53, "piironen": [45, 110], "pip": [112, 115], "place": 113, "plai": 1, "planar": 91, "planartransform": 92, "pleas": 115, "plot": 50, "plt": 114, "plug": 0, "plugin": [8, 15], "plugin_manag": 8, "pluginmanag": 15, "pmlr": [98, 108, 110], "point": 36, "poisson": 57, "poisson_tree_likelihood": 55, "poissontreelikelihood": 57, "polson": [32, 110], "popul": [0, 36, 39, 50, 53, 110, 111, 114], "port": 93, "posit": [1, 25, 46, 65], "possibl": [26, 31], "post_index": 70, "posterior": [32, 53, 108, 110, 114], "posteriori": [111, 114, 115], "postord": [70, 71], "potential_energi": 76, "precis": [36, 37, 42, 43, 83], "precision_matrix": [36, 42, 83], "predictor": 36, "present": [31, 50], "prespecifi": 4, "press": [108, 110], "prev": 100, "previou": [2, 66, 100, 114], "prillo": [98, 110], "primaryclass": 115, "principl": 66, "print": [31, 100], "print_graph": 31, "prior": [0, 8, 32, 33, 36, 44, 45, 47, 110, 113, 114], "prob": 70, "probabilist": [0, 108, 110], "probabl": [1, 2, 34, 35, 38, 40, 42, 44, 50, 51, 53, 60, 67, 70, 83, 90, 93], "procedur": 0, "proceed": [108, 109, 110], "process": [2, 36, 50, 51, 67, 109, 110, 114], "process_al": 14, "process_coalesc": 14, "process_data_coales": 53, "process_object": 31, "process_object_numb": 32, "process_object_with_kei": 31, "process_tree_likelihood": 14, "prod_": [36, 37], "prod_i": 44, "product": [37, 53], "program": [114, 115], "prop": 70, "propag": 69, "proper": [113, 114], "properti": [1, 18, 19, 21, 24, 25, 31, 34, 35, 39, 42, 48, 52, 53, 54, 59, 60, 62, 63, 64, 65, 67, 71, 75, 80, 83, 86, 93, 95], "proport": [2, 44, 70, 111], "propos": [36, 83, 98], "propose_precis": 83, "propto": [36, 108], "protein": 66, "protozoan": 54, "provid": [14, 25, 28, 29, 39, 45, 112, 113], "psi": [50, 51], "psw14": 110, "publish": 0, "pv17": 110, "py": 39, "pypi": 115, "pyplot": 114, "python": [0, 1, 23, 26, 31, 113, 115], "pytorch": [0, 1, 25, 35, 115], "q": [36, 62, 64, 65, 66, 67, 106, 108, 109, 115], "q_": [65, 67], "q_i": 108, "qt": 66, "quad": 108, "quantil": 60, "question": 31, "quick": 115, "r": [50, 58, 65, 69, 109, 110, 113], "r_": [58, 65, 67], "r_0": 65, "r_1": 65, "r_2": 65, "r_3": 65, "r_4": 65, "r_5": 65, "r_i": 58, "rais": [26, 30, 31], "rajesh": 106, "rand": 46, "random": [31, 32, 34, 35, 36, 37, 42, 45, 83], "random_tree_from_height": 56, "rang": 0, "ranganath": 106, "rannala": [47, 110], "rate": [0, 1, 2, 3, 32, 33, 35, 37, 39, 47, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 73, 110, 111, 113, 114], "rate_init": 6, "rate_transform": 55, "ratio": [47, 67, 69, 71, 114], "ratios_root_height": 71, "reach": 66, "read": 113, "read_csv": 114, "read_dates_from_csv": 17, "read_fasta_sequ": 48, "read_tre": 56, "read_tree_and_align": 56, "readabl": 113, "real": [0, 1, 31, 113], "realnvp": 91, "recalcul": 70, "recogn": [26, 31], "recommend": 114, "recomput": [24, 53, 70, 76, 89], "record": 25, "recurs": 31, "reduc": 98, "refer": [1, 33, 71, 72, 81, 111, 113, 114], "referenc": [20, 23, 59, 90, 95, 113], "register_class": 31, "register_model": 28, "register_paramet": 28, "registered_class": 31, "regress": 73, "regular": [32, 45, 75, 110], "reject": 86, "rel": [0, 50, 67, 100, 113], "rel_differ": 100, "relat": 66, "relationship": 66, "relative_tim": 50, "relax": [98, 110], "releas": 115, "reli": 0, "remain": 114, "remov": [17, 31, 50, 99], "removal_prob": 50, "remove_com": 31, "remove_constraint": 17, "remove_model_listen": 24, "remove_parameter_listen": 24, "remove_sampl": 99, "renam": 114, "renyi": 107, "reparameter": [34, 35, 40, 42, 53, 90, 93], "reparameterizedtimetreemodel": 71, "repeat": 39, "replac": [1, 3, 31, 114], "replace_star_with_str": 31, "replace_wildcard_with_str": 31, "repositori": [114, 115], "repres": [1, 25, 36, 39, 44, 50, 53, 66, 67, 85, 106, 108, 109, 111], "represent": [2, 20, 23, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109], "reproduct": 50, "requir": [113, 114], "requires_grad": [18, 25, 31], "rerais": 31, "rescal": [36, 37, 70, 83], "rescaledratetransform": 58, "research": [108, 110], "reserv": 113, "reset": 99, "respect": [37, 53, 113], "respons": [2, 113], "restart": [75, 81, 96], "result": [25, 31], "retain": 98, "return": [1, 3, 9, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 39, 40, 42, 44, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 85, 86, 87, 88, 89, 90, 93, 95, 98, 100, 102, 103, 106, 108], "revers": 67, "rho": [50, 51], "richard": [109, 110], "right": [37, 53, 108], "rightarrow": 65, "rigor": 115, "rise": [50, 51], "role": 1, "roman": [36, 110], "root": [36, 37, 50, 59, 73, 74, 83, 111, 113, 114], "root_height": [71, 73, 114], "root_transform": 55, "rootparamet": 59, "row": [65, 66, 67], "royal": [32, 110], "rsampl": [34, 35, 40, 42, 53, 90, 93], "rssb": [32, 110], "rtype": 53, "rule": [31, 113], "run": [23, 29, 77, 85, 87, 103, 104, 112], "run_tree_regress": 6, "runnabl": [22, 23, 77, 85, 87, 103], "rzy12": 110, "r\u00e9nyi": 109, "s12862": 0, "s_": 65, "s_0": 65, "s_1": 65, "s_net": 93, "safe": [27, 103], "said": 1, "same": [1, 67, 113], "sampl": [0, 1, 2, 23, 24, 32, 34, 35, 40, 42, 50, 51, 53, 56, 59, 75, 80, 81, 83, 86, 87, 90, 93, 99, 100, 106, 108, 109, 110, 114], "sample_momentum": [76, 77], "sample_shap": [24, 25, 34, 35, 40, 42, 53, 90, 93], "sampler": [1, 82], "sampling_tim": 71, "satisfi": [39, 44, 46, 50, 51, 53, 67], "save": [23, 27, 85, 113], "save_full_st": [85, 103], "save_paramet": 27, "scalar": [25, 45, 98], "scale": [3, 32, 33, 34, 35, 41, 42, 43, 45, 58, 67, 92, 114], "scale_mixtur": 38, "scale_tril": [42, 46], "scalemixturenorm": 45, "scaler": [83, 86], "scaleroper": 86, "schedul": [102, 103], "score": 108, "scott": [32, 110], "screen": 85, "seaborn": 114, "search": 98, "searchsort": 98, "sebastian": [98, 110], "second": [2, 65], "section": 1, "see": [35, 81, 113, 115], "selbo": 108, "select": [98, 113], "self": [19, 25, 26, 31, 108], "sens": [46, 58, 69], "sensit": 113, "sep": 114, "separ": [26, 31, 113], "sequenc": [0, 2, 31, 48, 61, 66, 98, 114], "sequence_s": 48, "sequenti": 93, "seri": [32, 110], "serial": 59, "serializ": [21, 22, 23, 26, 31, 77, 100, 102], "set": [3, 18, 19, 25, 31, 36, 59, 65, 66, 114], "set_adaptable_paramet": [80, 83, 86], "set_tensor": 79, "setter": [18, 19, 25, 59], "setup": 0, "setup_d": 71, "setup_index": 71, "setx": 19, "sever": 114, "sgd": 100, "shannon": [36, 110], "shape": [18, 24, 25, 31, 33, 34, 35, 36, 37, 40, 42, 47, 53, 60, 70, 90, 92, 93, 108, 114], "sharad": [108, 110], "shift": [50, 59, 71], "should": [4, 20, 25, 26, 31, 36, 37, 39, 44, 50, 51, 53, 113], "shoulder": [32, 110], "show": 114, "shown": [0, 1, 113], "shrinkag": [32, 45, 110], "shrunken": [32, 110], "side": 71, "sigma": [41, 43], "sign": [46, 58, 69], "signalhandl": 31, "signatur": 35, "signum": 31, "sim": [43, 108], "similar": [113, 114], "similarli": [65, 66], "simpl": [31, 66, 70], "simpleclockmodel": 52, "simpler": 67, "simplex": 17, "simpli": 113, "simplifi": 0, "simul": 0, "sinc": [1, 70, 113], "site": [2, 66, 70, 111, 113, 114], "site_model": [2, 6, 55, 70], "site_pattern": [2, 6, 55, 70], "sitemodel": [2, 60, 70], "sitepattern": [2, 61, 70], "six": [0, 67], "size": [0, 18, 24, 25, 34, 35, 36, 39, 40, 42, 50, 53, 54, 75, 81, 90, 93, 100, 106, 108, 109, 111, 114], "skipkei": [26, 31], "skyglid": [6, 111], "skygrid": [6, 36, 37, 111], "skylin": 50, "skyrid": [6, 111], "slab": [32, 45], "slice": [25, 31, 61], "slidingwindowoper": 86, "slow": 81, "smooth": 97, "smooth_max": 98, "smoothed_acceptance_r": 86, "sn": 114, "so": 20, "societi": [32, 110], "soft_searchsort": 98, "soft_select": 98, "soft_sort": 98, "softpiecewiseconstantcoalescentgrid": 53, "softplustransform": 46, "softsort": [98, 110], "softwar": 0, "some": [1, 66, 113, 114], "sort": 53, "sort_indic": 69, "sort_kei": [26, 31], "sorted_sequ": 98, "sourc": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 106, 108, 109], "space": [1, 65], "sparsiti": [45, 110], "spec": 31, "speci": 66, "specif": [1, 9, 25], "specifi": [0, 2, 6, 25, 32, 36, 37, 65, 66, 85, 113], "speed": [0, 115], "spirit": 113, "split": 56, "split_newick": 56, "sqrt": [36, 37], "sqrt_mass_matrix": 75, "sqrt_pi": 65, "sqrt_pi_inv": 65, "squar": [66, 113], "srd06": 111, "stabl": [25, 35], "stackoverflow": 31, "stan": [0, 75, 81, 96, 100], "stan_adapt": 78, "standalon": 0, "standard": [1, 3, 14, 28, 29, 34, 41, 43, 108], "stanvariationalconverg": 100, "stanwindowedadapt": 81, "start": [17, 31, 50, 51, 71, 100, 113], "state": [54, 65, 66, 70, 85, 113, 114, 115], "state_count": [54, 65], "state_dict": [75, 79, 85, 86, 102, 103], "static": [25, 32, 33, 34, 35, 45, 52, 65, 71, 72, 100], "stationari": 67, "statist": [32, 33, 44, 45, 53, 82, 96, 108, 110], "stdev": 41, "stdout": 100, "steam": 71, "stem": 114, "step": [0, 75, 79, 81, 86, 96, 102, 112, 114], "step_siz": [75, 79], "step_size_adaptor": 81, "stickbreakingtransform": 1, "stochast": 66, "stop": 31, "stop_count": 54, "store": 113, "stored_object": 113, "str": [3, 6, 9, 10, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 93, 95, 100, 102, 103, 106, 108, 109], "str_or_float": 4, "stratifi": 108, "stream": 71, "strict": [0, 111], "strictclockmodel": 52, "string": [1, 4, 26, 31, 32, 35, 36, 37, 45, 47, 54, 56, 83, 109, 113], "string_to_list_index": 31, "structur": [2, 26, 31, 67, 113], "studi": 0, "sub": [2, 24], "subclass": [26, 31, 39], "subcommand": 114, "submodel": 113, "subpars": [14, 15], "subplot": 114, "subpras": [3, 5, 7, 11, 12], "subst_model": 70, "substitut": [0, 1, 2, 33, 58, 59, 65, 67, 73, 111, 113, 114], "substitution_model": [2, 6, 55, 70, 113], "substitutionmodel": [2, 62, 65, 67, 70], "substmodel": [2, 114], "substmodel_id": 6, "suchard": [0, 32, 33, 36, 110, 115], "suffici": 53, "sufficient_statist": 53, "sugiyama": [109, 110], "sum": [1, 36, 46, 58, 66, 67], "sum_": [37, 46, 53, 65, 67, 108], "sum_i": 108, "sum_log_abs_det_jacobian": [90, 93], "summar": 114, "superclass": [26, 31], "support": [26, 31, 39, 44, 50, 53], "supylabel": 114, "surviv": [50, 51], "swanepoel": [0, 115], "sy": 100, "symmetr": 65, "symmetricsubstitutionmodel": [62, 64, 65, 67], "synonym": 64, "sysbio": [36, 110], "system": [66, 109, 110], "systemat": [36, 110], "syw050": [36, 110], "t": [25, 50, 51, 53, 66, 70, 92, 114], "t0": [75, 96], "t1": 31, "t2": 31, "t3": 31, "t_0": [50, 51], "t_dic": 25, "t_i": [50, 51, 53], "t_m": [50, 51], "t_net": 93, "ta": 67, "tabl": 54, "tag": [24, 71, 113], "tail": [47, 110], "tanh": 92, "target": 83, "target_acceptance_prob": [75, 80, 83, 86], "task": 0, "tau": [36, 37, 43, 98, 108], "taxa": [2, 6, 48, 49, 55, 56, 71, 72], "taxa_count": [6, 69, 71], "taxa_id": 71, "taxon": [2, 56, 68, 71], "tc": 67, "temperatur": [53, 98], "temporari": 27, "tensor": [1, 2, 3, 18, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 75, 76, 79, 80, 81, 86, 88, 90, 92, 93, 95, 98, 99, 106, 113], "tensor2": 25, "tensor_rand": 31, "tensordecod": 31, "tensorencod": 31, "tensorflow": 0, "term": 67, "term_buff": 81, "test": 115, "text": [65, 67, 108], "tg": 67, "thei": [1, 113], "them": 32, "therefor": 65, "theta": [16, 53, 114], "thi": [0, 1, 2, 9, 17, 18, 20, 24, 25, 26, 31, 32, 34, 39, 44, 46, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 76, 89, 91, 94, 97, 98, 101, 107, 113, 114], "thing": [23, 87, 113], "think": 113, "third": 2, "those": 1, "threshold": 70, "through": [0, 2, 8], "thu": 65, "tianqi": [47, 110], "tild": [58, 108], "time": [0, 24, 32, 33, 36, 37, 50, 51, 53, 67, 70, 76, 89, 110, 111], "timetreemodel": [36, 37, 50, 51, 53, 57, 69, 71, 72], "tip": 70, "titl": 115, "to_nexu": 56, "tol_rel_obj": 100, "toler": 100, "tolist": 25, "tool": [0, 112, 113, 114], "topologi": [2, 69], "torch": [1, 3, 18, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 73, 75, 76, 79, 80, 81, 86, 90, 92, 93, 94, 95, 98, 99, 100, 102, 103, 106, 108, 109, 113], "torchtre": [0, 1, 2], "total": 50, "tracer": 114, "tradit": 109, "trait": [6, 111], "tran": 106, "transform": [1, 9, 25, 34, 38, 58, 59, 69, 71, 72, 90, 92], "transformeddistribut": 39, "transformedparamet": [9, 25], "transit": [1, 64, 66, 67, 114], "translat": 31, "transmiss": 50, "transmit": 113, "transvers": [65, 67, 114], "tree": [0, 1, 23, 33, 36, 37, 47, 52, 56, 57, 59, 66, 69, 70, 71, 72, 73, 111, 113, 115], "tree_height_transform": 55, "tree_id": [6, 11, 16], "tree_likelihood": 55, "tree_model": [2, 6, 23, 33, 36, 37, 47, 50, 51, 52, 53, 55, 57, 58, 69, 70, 72], "tree_model_flex": 55, "tree_prior": 38, "tree_regress": 55, "treeannot": 114, "treeflow": 0, "treelikelihood": 113, "treelikelihoodmodel": [2, 70], "treelogg": 23, "treemodel": [2, 23, 33, 52, 58, 70, 71], "triangular": 46, "tridiagon": 3, "tril": 42, "trilexpdiagonaltransform": 46, "triplet": 54, "true": [18, 24, 25, 26, 27, 31, 32, 35, 36, 37, 39, 43, 45, 46, 50, 51, 53, 54, 56, 58, 60, 61, 69, 71, 75, 98, 103, 114], "try": [26, 31, 56], "tune": [80, 83, 86], "tuning_paramet": [80, 83, 86], "tupl": [3, 17, 25, 26, 31, 53, 54, 61, 73, 88, 90, 98], "turn": 113, "turner": [109, 110], "two": [100, 112, 113, 114], "type": [1, 2, 9, 18, 20, 23, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 93, 95, 98, 100, 102, 103, 106, 108, 109, 113, 114], "typeerror": [26, 31], "typic": [1, 19, 66, 67, 113], "u": [92, 93, 109, 110], "u_hat": 92, "unconstrain": [1, 25], "uncorrel": 111, "under": [0, 66], "underflow": 70, "underli": [35, 53], "underscor": [31, 113], "understand": [31, 36, 110], "undesir": 31, "uniform": 31, "union": 25, "uniqu": [32, 35, 36, 37, 45, 47, 83, 106, 109, 113], "unit": 111, "univariatediscretizedsitemodel": 60, "univers": 54, "unknown": 0, "unroot": [2, 47, 111], "unrootedtreemodel": [2, 47, 71], "updat": [1, 20, 25, 53, 83], "update_bound": 69, "update_leaf_height": 71, "update_mass_matric": 80, "update_node_height": 71, "update_paramet": 31, "update_r": 60, "update_rates_prob": 60, "update_travers": 71, "upper": [17, 65, 67, 106], "url": [108, 109, 110, 115], "us": [0, 1, 2, 3, 4, 6, 14, 19, 24, 25, 28, 29, 31, 33, 34, 35, 36, 37, 42, 46, 49, 53, 57, 59, 60, 61, 65, 66, 67, 69, 70, 71, 73, 75, 76, 85, 89, 90, 92, 95, 98, 100, 108, 111, 112, 113, 114, 115], "usag": [0, 112], "use_ambigu": [49, 54, 61, 70], "use_tip_st": 70, "user": [113, 114], "userdict": 68, "userlist": [48, 68], "util": [8, 22, 82, 97], "v130": [108, 110], "valid": 31, "validate_arg": [39, 41, 43, 44, 50, 51, 53], "valu": [1, 2, 3, 6, 19, 23, 24, 25, 31, 34, 35, 37, 40, 42, 44, 50, 51, 53, 70, 76, 80, 83, 86, 89, 90, 93, 98, 100, 113, 114], "vanilla": 111, "var_id": 3, "variabl": [20, 24, 25, 28, 32, 34, 35, 40, 42, 45, 47, 49, 52, 57, 59, 60, 61, 64, 65, 67, 70, 71, 76, 80, 106, 108, 109, 111], "varianc": [3, 99], "variance_estim": 75, "variance_estimator2": 75, "variat": [0, 3, 34, 46, 74, 110, 111, 114, 115], "variationalconverg": 100, "variou": [0, 115], "vehtari": [45, 110], "verifi": 112, "version": [32, 115], "vertebr": 54, "via": [46, 106], "view": 25, "viewparamet": 25, "vikram": [108, 110], "virtual": 1, "viru": 114, "volum": [108, 109, 110], "vr": 109, "w": [6, 36, 92], "w1": 89, "w2": 89, "w3": 89, "w_": 108, "w_1": 36, "w_i": 36, "w_n": 36, "wa": [0, 98, 113, 115], "wag": [63, 111], "wai": [1, 14, 25, 28, 29, 113], "want": [2, 113], "warmup": 81, "warmup_adaptor": 77, "warmupadapt": 75, "warren": [108, 110], "we": [0, 1, 2, 24, 53, 70, 76, 89, 113, 114], "weibul": [111, 114], "weibullsitemodel": 60, "weight": [36, 37, 46, 61, 70, 80, 83, 86, 92, 108], "welford": 97, "welfordvari": 99, "when": [1, 4, 39, 45, 69, 70, 113], "where": [18, 25, 36, 43, 46, 65, 66, 67, 69, 92, 108, 113, 115], "whether": 98, "which": [1, 2, 31, 50, 51, 66, 113, 114], "while": [113, 114], "whole": 113, "widehat": 108, "width": [32, 45, 81, 86], "wildcard": 31, "windl": [32, 110], "window": 81, "within": [1, 111], "without": [1, 24, 53, 70, 76, 89, 113], "wnativ": 83, "word": 65, "would": [2, 113], "wrap": [25, 31, 113], "wrapper": [31, 35, 95, 102, 103], "writ": 23, "write": [23, 113], "write_newick": 71, "writer": 23, "written": 113, "wrt": 108, "x": [0, 1, 3, 19, 25, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 58, 65, 69, 89, 90, 92, 93, 95, 96, 99, 108, 113, 114], "x_": [36, 37, 69], "x_c": 69, "x_dict": 35, "x_i": [36, 37, 44, 46, 69], "x_j": 46, "x_unr": 3, "xa": 46, "xiang": 115, "xml": 113, "y": [35, 46, 54, 58, 69, 92, 93], "y_i": [46, 58, 69], "yang": [47, 110], "yano": [67, 114], "year": [17, 115], "yeast": 54, "yingzhen": [109, 110], "ylabel": 114, "you": [26, 31, 112], "your": 112, "yssss": 54, "z": [36, 89, 92, 108], "z_": 36, "z_i": 36, "zero": [1, 3, 25, 36, 50, 65, 66, 67], "zero_or_path": 4, "zeros_lik": 25, "zhang": 37, "zhu": [47, 110], "ziheng": [47, 110], "zip": 114, "\u00e9": [109, 110]}, "titles": ["Benchmark", "Building blocks", "Tree likelihood model", "torchtree.cli.advi", "torchtree.cli.argparse_utils", "torchtree.cli.cli", "torchtree.cli.evolution", "torchtree.cli.hmc", "torchtree.cli", "torchtree.cli.jacobians", "torchtree.cli.loggers", "torchtree.cli.map", "torchtree.cli.mcmc", "torchtree.cli.operators", "torchtree.cli.plugin", "torchtree.cli.plugin_manager", "torchtree.cli.priors", "torchtree.cli.utils", "torchtree.core.abstractparameter", "torchtree.core.classproperty_decorator", "torchtree.core.container", "torchtree.core.identifiable", "torchtree.core", "torchtree.core.logger", "torchtree.core.model", "torchtree.core.parameter", "torchtree.core.parameter_encoder", "torchtree.core.parameter_utils", "torchtree.core.parametric", "torchtree.core.runnable", "torchtree.core.serializable", "torchtree.core.utils", "torchtree.distributions.bayesian_bridge", "torchtree.distributions.ctmc_scale", "torchtree.distributions.deterministic_normal", "torchtree.distributions.distributions", "torchtree.distributions.gmrf", "torchtree.distributions.gmrf_integrated", "torchtree.distributions", "torchtree.distributions.inverse_gamma", "torchtree.distributions.joint_distribution", "torchtree.distributions.log_normal", "torchtree.distributions.multivariate_normal", "torchtree.distributions.normal", "torchtree.distributions.one_on_x", "torchtree.distributions.scale_mixture", "torchtree.distributions.transforms", "torchtree.distributions.tree_prior", "torchtree.evolution.alignment", "torchtree.evolution.attribute_pattern", "torchtree.evolution.bdsk", "torchtree.evolution.birth_death", "torchtree.evolution.branch_model", "torchtree.evolution.coalescent", "torchtree.evolution.datatype", "torchtree.evolution", "torchtree.evolution.io", "torchtree.evolution.poisson_tree_likelihood", "torchtree.evolution.rate_transform", "torchtree.evolution.root_transform", "torchtree.evolution.site_model", "torchtree.evolution.site_pattern", "torchtree.evolution.substitution_model.abstract", "torchtree.evolution.substitution_model.amino_acid", "torchtree.evolution.substitution_model.codon", "torchtree.evolution.substitution_model.general", "torchtree.evolution.substitution_model", "torchtree.evolution.substitution_model.nucleotide", "torchtree.evolution.taxa", "torchtree.evolution.tree_height_transform", "torchtree.evolution.tree_likelihood", "torchtree.evolution.tree_model", "torchtree.evolution.tree_model_flexible", "torchtree.evolution.tree_regression", "torchtree", "torchtree.inference.hmc.adaptation", "torchtree.inference.hmc.hamiltonian", "torchtree.inference.hmc.hmc", "torchtree.inference.hmc", "torchtree.inference.hmc.integrator", "torchtree.inference.hmc.operator", "torchtree.inference.hmc.stan_adaptation", "torchtree.inference", "torchtree.inference.mcmc.gmrf_block_updating", "torchtree.inference.mcmc", "torchtree.inference.mcmc.mcmc", "torchtree.inference.mcmc.operator", "torchtree.inference.sampler", "torchtree.inference.utils", "torchtree.nf.energy_functions", "torchtree.nf.flow", "torchtree.nf", "torchtree.nf.planar", "torchtree.nf.realnvp", "torchtree.nn", "torchtree.nn.module", "torchtree.ops.dual_averaging", "torchtree.ops", "torchtree.ops.smooth", "torchtree.ops.welford", "torchtree.optim.convergence", "torchtree.optim", "torchtree.optim.lr_scheduler", "torchtree.optim.optimizer", "torchtree.torchtree", "torchtree.typing", "torchtree.variational.chi", "torchtree.variational", "torchtree.variational.kl", "torchtree.variational.renyi", "Bibliography", "Features", "Installation", "Input files", "Quick start", "Welcome to torchtree!"], "titleterms": {"1": [66, 114], "2": [66, 114], "3": 66, "4": 66, "abstract": 62, "abstractparamet": 18, "adapt": 75, "advanc": 115, "advi": 3, "algorithm": 111, "align": 48, "amino_acid": 63, "argparse_util": 4, "attribut": [3, 6, 8, 17, 31, 48, 105], "attribute_pattern": 49, "basic": 66, "bayesian_bridg": 32, "bdsk": 50, "benchmark": 0, "bibliographi": 110, "birth_death": 51, "block": 1, "branch_model": 52, "build": [1, 112], "callablemodel": 1, "chi": 106, "cite": 115, "class": [14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 92, 93, 95, 96, 99, 100, 102, 103, 106, 108, 109], "classproperty_decor": 19, "cli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "clock": 114, "coalesc": [53, 114], "codon": 64, "compar": 0, "configur": 114, "constant": 114, "contain": 20, "content": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109], "converg": 100, "core": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "ctmc_scale": 33, "datatyp": 54, "deterministic_norm": 34, "distribut": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 66], "dual_averag": 96, "energy_funct": 89, "evolut": [6, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "except": 31, "featur": 111, "file": [113, 114], "flow": 90, "format": 113, "from": 112, "function": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 17, 27, 31, 32, 48, 50, 53, 56, 61, 70, 71, 73, 75, 79, 88, 89, 98, 104], "gener": [65, 114], "get": 115, "gmrf": 36, "gmrf_block_upd": 83, "gmrf_integr": 37, "gtr": 114, "hamiltonian": 76, "hmc": [7, 75, 76, 77, 78, 79, 80, 81], "how": 115, "identifi": 21, "infer": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 111], "input": 113, "instal": [112, 115], "integr": 79, "inverse_gamma": 39, "io": 56, "jacobian": 9, "joint_distribut": 40, "json": 113, "kl": 108, "latest": 112, "likelihood": 2, "log_norm": 41, "logger": [10, 23], "lr_schedul": 102, "map": 11, "markov": 66, "matrix": 66, "mcmc": [12, 83, 84, 85, 86], "model": [1, 2, 24, 111, 113, 114], "modul": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109], "multivariate_norm": 42, "nf": [89, 90, 91, 92, 93], "nn": [94, 95], "normal": 43, "nucleotid": 67, "object": 1, "one_on_x": 44, "op": [96, 97, 98, 99], "oper": [13, 80, 86], "optim": [100, 101, 102, 103], "packag": 8, "paramet": [1, 25], "parameter_encod": 26, "parameter_util": 27, "parametr": 28, "phylogenet": [66, 111], "planar": 92, "plot": 114, "plugin": 14, "plugin_manag": 15, "poisson_tree_likelihood": 57, "prior": [16, 111], "probabl": 66, "process": 66, "program": [0, 112], "quick": 114, "rate_transform": 58, "realnvp": 93, "renyi": 109, "result": 114, "root_transform": 59, "run": 114, "runnabl": 29, "sampler": 87, "scale_mixtur": 45, "serializ": 30, "site_model": 60, "site_pattern": 61, "smooth": 98, "sourc": 112, "specif": 113, "stabl": 112, "stan_adapt": 81, "start": [114, 115], "stationari": 66, "strict": 114, "submodul": [8, 22, 38, 55, 66, 74, 78, 82, 84, 91, 94, 97, 101, 107], "substitut": 66, "substitution_model": [62, 63, 64, 65, 66, 67], "taxa": 68, "time": [66, 114], "torchtre": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115], "transform": 46, "transformedparamet": 1, "tree": [2, 114], "tree_height_transform": 69, "tree_likelihood": 70, "tree_model": 71, "tree_model_flex": 72, "tree_prior": 47, "tree_regress": 73, "type": 105, "unroot": 114, "util": [17, 31, 88], "variat": [106, 107, 108, 109], "version": 112, "w4": 114, "welcom": 115, "welford": 99}})